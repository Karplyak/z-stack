###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                27/Aug/2010  16:03:51 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_ZigbeeRouter\X #
#                          T200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects #
#                          \zstack\Sensor Network Application\ZIGBEE          #
#                          Coordinator & Router\Source\zcl_zigbee receiver.c  #
#    Command line       =  -f "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_ZigbeeRout #
#                          er\XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Proj #
#                          ects\zstack\Sensor Network Application\ZIGBEE      #
#                          Coordinator & Router\CC2530DB\..\..\..\Tools\CC253 #
#                          0DB\f8wCoord.cfg" (-DCPU32MHZ -DROOT=__near_func   #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f       #
#                          "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_ZigbeeRouter\ #
#                          XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Sensor Network Application\ZIGBEE         #
#                          Coordinator & Router\CC2530DB\..\..\..\Tools\CC253 #
#                          0DB\f8wConfig.cfg" (-DSECURE=0                     #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=TRUE      #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440)   #
#                          -f "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_ZigbeeRout #
#                          er\XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Proj #
#                          ects\zstack\Sensor Network Application\ZIGBEE      #
#                          Coordinator & Router\CC2530DB\..\..\..\Tools\CC253 #
#                          0DB\f8wZCL.cfg" (-DZCL_READ -DZCL_WRITE            #
#                          -DZCL_BASIC -DZCL_IDENTIFY -DZCL_ON_OFF            #
#                          -DZCL_KEY_ESTABLISH -DZCL_LOAD_CONTROL             #
#                          -DZCL_SIMPLE_METERING -DZCL_PRICING)               #
#                          -DZCL_MESSAGE "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack #
#                          _ZigbeeRouter\XT200_PA_Z-Stack\ZStack-CC2530-2.3.0 #
#                          -1.4.0\Projects\zstack\Sensor Network              #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\Source\zcl_zigbee receiver.c" -D CC2530 -D  #
#                          ZTOOL_P1 -D MT_TASK -D MT_APP_FUNC -D MT_SYS_FUNC  #
#                          -D MT_ZDO_FUNC -D xLCD_SUPPORTED=DEBUG -D          #
#                          Coor_receiver -D xHAL_KEYPAD -D PA2591 -lC         #
#                          "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_ZigbeeRouter\ #
#                          XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Sensor Network Application\ZIGBEE         #
#                          Coordinator & Router\CC2530DB\Coordinator_NB_PA\Li #
#                          st\" -lA "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_Zigb #
#                          eeRouter\XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4. #
#                          0\Projects\zstack\Sensor Network                   #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\Coordinator_NB_PA\List\"           #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_ZigbeeRouter\ #
#                          XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Sensor Network Application\ZIGBEE         #
#                          Coordinator & Router\CC2530DB\Coordinator_NB_PA\Ob #
#                          j\" -e --require_prototypes --debug --core=plain   #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì #
#                          ¤j_Z-Stack_ZigbeeRouter\XT200_PA_Z-Stack\ZStack-CC #
#                          2530-2.3.0-1.4.0\Projects\zstack\Sensor Network    #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\" -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_ #
#                          Z-Stack_ZigbeeRouter\XT200_PA_Z-Stack\ZStack-CC253 #
#                          0-2.3.0-1.4.0\Projects\zstack\Sensor Network       #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\SOURCE\" -I                     #
#                          "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_ZigbeeRouter\ #
#                          XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Sensor Network Application\ZIGBEE         #
#                          Coordinator & Router\CC2530DB\..\..\SOURCE\" -I    #
#                          "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_ZigbeeRouter\ #
#                          XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Sensor Network Application\ZIGBEE         #
#                          Coordinator & Router\CC2530DB\..\..\..\ZMAIN\TI253 #
#                          0DB\" -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_Zigb #
#                          eeRouter\XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4. #
#                          0\Projects\zstack\Sensor Network                   #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MT\" -I  #
#                          "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_ZigbeeRouter\ #
#                          XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Sensor Network Application\ZIGBEE         #
#                          Coordinator & Router\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\HAL\INCLUDE\" -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤ #
#                          j_Z-Stack_ZigbeeRouter\XT200_PA_Z-Stack\ZStack-CC2 #
#                          530-2.3.0-1.4.0\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARG #
#                          ET\CC2530NB\" -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-St #
#                          ack_ZigbeeRouter\XT200_PA_Z-Stack\ZStack-CC2530-2. #
#                          3.0-1.4.0\Projects\zstack\Sensor Network           #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MCU #
#                          \CCSOC\" -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_Z #
#                          igbeeRouter\XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1 #
#                          .4.0\Projects\zstack\Sensor Network                #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\INC #
#                          LUDE\" -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_Zig #
#                          beeRouter\XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4 #
#                          .0\Projects\zstack\Sensor Network                  #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF #
#                          \" -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_ZigbeeR #
#                          outer\XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\P #
#                          rojects\zstack\Sensor Network Application\ZIGBEE   #
#                          Coordinator & Router\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\STACK\NWK\" -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_ #
#                          Z-Stack_ZigbeeRouter\XT200_PA_Z-Stack\ZStack-CC253 #
#                          0-2.3.0-1.4.0\Projects\zstack\Sensor Network       #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SE #
#                          C\" -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_Zigbee #
#                          Router\XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\ #
#                          Projects\zstack\Sensor Network Application\ZIGBEE  #
#                          Coordinator & Router\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\STACK\SAPI\" -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j #
#                          _Z-Stack_ZigbeeRouter\XT200_PA_Z-Stack\ZStack-CC25 #
#                          30-2.3.0-1.4.0\Projects\zstack\Sensor Network      #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SY #
#                          S\" -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_Zigbee #
#                          Router\XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\ #
#                          Projects\zstack\Sensor Network Application\ZIGBEE  #
#                          Coordinator & Router\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\STACK\ZCL\" -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_ #
#                          Z-Stack_ZigbeeRouter\XT200_PA_Z-Stack\ZStack-CC253 #
#                          0-2.3.0-1.4.0\Projects\zstack\Sensor Network       #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZD #
#                          O\" -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_Zigbee #
#                          Router\XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\ #
#                          Projects\zstack\Sensor Network Application\ZIGBEE  #
#                          Coordinator & Router\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\ZMAC\F8W\" -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z #
#                          -Stack_ZigbeeRouter\XT200_PA_Z-Stack\ZStack-CC2530 #
#                          -2.3.0-1.4.0\Projects\zstack\Sensor Network        #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\"   #
#                          -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_ZigbeeRout #
#                          er\XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Proj #
#                          ects\zstack\Sensor Network Application\ZIGBEE      #
#                          Coordinator & Router\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\SERVICES\SADDR\" -I                          #
#                          "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_ZigbeeRouter\ #
#                          XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Sensor Network Application\ZIGBEE         #
#                          Coordinator & Router\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\SERVICES\SDATA\" -I                          #
#                          "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_ZigbeeRouter\ #
#                          XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Sensor Network Application\ZIGBEE         #
#                          Coordinator & Router\CC2530DB\..\..\..\..\..\COMPO #
#                          NENTS\MAC\INCLUDE\" -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤ #
#                          j_Z-Stack_ZigbeeRouter\XT200_PA_Z-Stack\ZStack-CC2 #
#                          530-2.3.0-1.4.0\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIGH #
#                          _LEVEL\" -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_Z #
#                          igbeeRouter\XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1 #
#                          .4.0\Projects\zstack\Sensor Network                #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\" -I "D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-St #
#                          ack_ZigbeeRouter\XT200_PA_Z-Stack\ZStack-CC2530-2. #
#                          3.0-1.4.0\Projects\zstack\Sensor Network           #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\SINGLE_CHIP\" -I "C:\IAR               #
#                          Systems\Embedded Workbench MCS 51\8051\INC\" -I    #
#                          "C:\IAR Systems\Embedded Workbench MCS             #
#                          51\8051\INC\CLIB\" -Ohz                            #
#    List file          =  D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_ZigbeeRouter\X #
#                          T200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects #
#                          \zstack\Sensor Network Application\ZIGBEE          #
#                          Coordinator & Router\CC2530DB\Coordinator_NB_PA\Li #
#                          st\zcl_zigbee receiver.lst                         #
#    Object file        =  D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_ZigbeeRouter\X #
#                          T200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects #
#                          \zstack\Sensor Network Application\ZIGBEE          #
#                          Coordinator & Router\CC2530DB\Coordinator_NB_PA\Ob #
#                          j\zcl_zigbee receiver.r51                          #
#                                                                             #
#                                                                             #
###############################################################################

D:\Z-Stack¾ã²zCode\«n¶}¬ì¤j_Z-Stack_ZigbeeRouter\XT200_PA_Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Sensor Network Application\ZIGBEE Coordinator & Router\Source\zcl_zigbee receiver.c
      1          /**************************************************************************************************
      2            Filename:       zcl_zigbee receiver.c
      3            Revised:        $Date: 2009-03-18 15:56:27 -0700 (Wed, 18 Mar 2009) $
      4            Revision:       $Revision: 19453 $
      5          
      6            Description:    Zigbee Cluster Library - ZIGBEE Receiver device application.
      7          
      8            Copyright 2006-2009 Texas Instruments Incorporated. All rights reserved.
      9          
     10            Should you have any questions regarding your right to use this Software,
     11            contact Texas Instruments Incorporated at www.TI.com. 
     12          **************************************************************************************************/
     13          
     14          /*************************************************************************************************
     15            This device will be like a Light device.  This application is not intended to be a Light device, 
     16            but will use the device description to implement this sample code.
     17          *************************************************************************************************/
     18          
     19          /*********************************************************************
     20           * INCLUDES
     21           */
     22          #include "ZComDef.h"
     23          #include "OSAL.h"
     24          #include "AF.h"
     25          #include "ZDApp.h"
     26          
     27          /* ZCL */
     28          #include "zcl.h"
     29          #include "zcl_general.h"
     30          #include "zcl_ha.h"
     31          #include "zcl_zigbee receiver.h"
     32          
     33          /* HAL */
     34          #include "onboard.h"
     35          #include "hal_lcd.h"
     36          #include "hal_led.h"
     37          #include "hal_timer.h"
     38          #include "hal_uart.h"
     39          #include "hal_key.h"
     40          #include "hal_keypad.h"
     41          
     42          /* MAC_high-level */
     43          #include "mac_high_level.h"
     44          
     45          /* MT */
     46          #include "MT_UART.h"
     47          #include "MT.h"
     48          
     49          /*********************************************************************
     50           * MACROS
     51           */
     52          /*********************************************************************
     53           * CONSTANTS
     54           */
     55           #define TRANSMITAPP_MAX_DATA_LEN    102
     56          
     57          /*********************************************************************
     58           * TYPEDEFS
     59           */
     60          /*********************************************************************
     61           * GLOBAL VARIABLES
     62           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     63          byte zclZigbeeReceiver_TaskID; // The zigbee task_ID
   \                     zclZigbeeReceiver_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     64          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     65          uint8 len; // the transmit data length
   \                     len:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     66          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     67          byte TransmitApp_Msg[ TRANSMITAPP_MAX_DATA_LEN ]; // Transmit message array
   \                     TransmitApp_Msg:
   \   000000                DS 102
   \   000066                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     68          byte UartTransmit_Msg[ TRANSMITAPP_MAX_DATA_LEN ]; // The coordinator send to device message array
   \                     UartTransmit_Msg:
   \   000000                DS 102
   \   000066                REQUIRE __INIT_XDATA_Z
     69          
     70          /*********************************************************************
     71           * GLOBAL FUNCTIONS
     72           */
     73          
     74          /*********************************************************************
     75           * LOCAL VARIABLES
     76           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     77          afAddrType_t zclZigbeeRecv_DstAddr;  // AF address type
   \                     zclZigbeeRecv_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     78          aps_Group_t zclZigbeeRecv_Group;
   \                     zclZigbeeRecv_Group:
   \   000000                DS 18
   \   000012                REQUIRE __INIT_XDATA_Z
     79          
     80          #define ZCLZIGBEERECV_BINDINGLIST       2
     81          

   \                                 In  segment XDATA_I, align 1, keep-with-next
     82          static cId_t bindingInClusters[ZCLZIGBEERECV_BINDINGLIST] =
   \                     bindingInClusters:
   \   000000                DS 4
   \   000004                REQUIRE `?<Initializer for bindingInClusters>`
   \   000004                REQUIRE __INIT_XDATA_I
     83          {
     84            ZCL_CLUSTER_ID_GEN_ON_OFF,
     85            ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL
     86          };
     87          
     88          // Test Endpoint to allow SYS_APP_MSGs

   \                                 In  segment XDATA_I, align 1, keep-with-next
     89          static endPointDesc_t zigbeeReceiver_TestEp =
   \                     zigbeeReceiver_TestEp:
   \   000000                DS 6
   \   000006                REQUIRE `?<Initializer for zigbeeReceiver_TestEp>`
   \   000006                REQUIRE __INIT_XDATA_I
     90          {
     91            20,                                 // Test endpoint
     92            &zclZigbeeReceiver_TaskID,
     93            (SimpleDescriptionFormat_t *)NULL,  // No Simple description for this test endpoint
     94            (afNetworkLatencyReq_t)0            // No Network Latency req
     95          };
     96          
     97          /*********************************************************************
     98           * LOCAL FUNCTIONS
     99           */
    100          static void zclZigbeeReceiver_HandleKeys( byte shift, byte keys );
    101          static void zclZigbeeReceiver_BasicResetCB( void );
    102          static void zclZigbeeReceiver_IdentifyCB( zclIdentify_t *pCmd );
    103          static void zclZigbeeReceiver_IdentifyQueryRspCB( zclIdentifyQueryRsp_t *pRsp );
    104          static void zclZigbeeReceiver_OnOffCB( uint8 cmd );
    105          static void zclZigbeeReceiver_ProcessIdentifyTimeChange( void );
    106          
    107          void zclUARTMsg_CallBack(uint8 port, uint8 event); // The UART Message callback
    108          void zclUartReceiver( void ); // The coordinator receive command function
    109          
    110          // Functions to process ZCL Foundation incoming Command/Response messages 
    111          static void zclZigbeeReceiver_ProcessIncomingMsg( zclIncomingMsg_t *msg );
    112          #ifdef ZCL_READ
    113            static uint8 zclZigbeeReceiver_ProcessInReadRspCmd( zclIncomingMsg_t *pInMsg );
    114          #endif
    115          #ifdef ZCL_WRITE
    116            static uint8 zclZigbeeReceiver_ProcessInWriteRspCmd( zclIncomingMsg_t *pInMsg );
    117          #endif
    118            static uint8 zclZigbeeReceiver_ProcessInDefaultRspCmd( zclIncomingMsg_t *pInMsg );
    119          #ifdef ZCL_DISCOVER
    120            static uint8 zclZigbeeReceiver_ProcessInDiscRspCmd( zclIncomingMsg_t *pInMsg );
    121          #endif
    122            
    123          /*********************************************************************
    124           * ZCL General Profile Callback table
    125           */

   \                                 In  segment XDATA_I, align 1, keep-with-next
    126          static zclGeneral_AppCallbacks_t zclZigbeeReceiver_CmdCallbacks =
   \                     zclZigbeeReceiver_CmdCallbacks:
   \   000000                DS 30
   \   00001E                REQUIRE `?<Initializer for zclZigbeeReceiver_CmdCallbac`
   \   00001E                REQUIRE __INIT_XDATA_I
    127          {
    128            zclZigbeeReceiver_BasicResetCB,              // Basic Cluster Reset command
    129            zclZigbeeReceiver_IdentifyCB,                // Identify command  
    130            zclZigbeeReceiver_IdentifyQueryRspCB,        // Identify Query Response command
    131            zclZigbeeReceiver_OnOffCB,                   // On/Off cluster command
    132            NULL,                                        // Level Control Move to Level command
    133            NULL,                                        // Level Control Move command
    134            NULL,                                        // Level Control Step command
    135            NULL,                                        // Group Response commands
    136            NULL,                                        // Scene Store Request command
    137            NULL,                                        // Scene Recall Request command
    138            NULL,                                        // Scene Response command
    139            NULL,                                        // Alarm (Response) command
    140            NULL,                                        // RSSI Location commands
    141            NULL,                                        // RSSI Location Response commands
    142          };
    143          
    144          /*********************************************************************
    145           * @fn          zclZigbeeRecv_Init
    146           * @brief       Initialization function for the zclGeneral layer.
    147           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    148          void zclZigbeeRecv_Init( byte task_id )
   \                     zclZigbeeRecv_Init:
    149          {
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
    150            zclZigbeeReceiver_TaskID = task_id;
   \   000005   E9           MOV     A,R1
   \   000006   90....       MOV     DPTR,#zclZigbeeReceiver_TaskID
   \   000009   F0           MOVX    @DPTR,A
    151            
    152            // Setup for the flash command's destination address ( Group )
    153            zclZigbeeRecv_DstAddr.addrMode = (afAddrMode_t)afAddrGroup;  // transmit mode - Group address
   \   00000A   7401         MOV     A,#0x1
   \   00000C   90....       MOV     DPTR,#(zclZigbeeRecv_DstAddr + 8)
   \   00000F   F0           MOVX    @DPTR,A
    154            zclZigbeeRecv_DstAddr.endPoint = ZIGBEERECV_ENDPOINT;        // end-point number:20
   \   000010   740D         MOV     A,#0xd
   \   000012   90....       MOV     DPTR,#(zclZigbeeRecv_DstAddr + 9)
   \   000015   F0           MOVX    @DPTR,A
    155            zclZigbeeRecv_DstAddr.addr.shortAddr = RECV_GROUP;           // Group short address
   \   000016   90....       MOV     DPTR,#zclZigbeeRecv_DstAddr
   \   000019   7410         MOV     A,#0x10
   \   00001B   F0           MOVX    @DPTR,A
   \   00001C   A3           INC     DPTR
   \   00001D   7420         MOV     A,#0x20
   \   00001F   F0           MOVX    @DPTR,A
    156            
    157            // This App is part of the Zigbee Device Profile
    158            zclZD_Init( &zclZigbeeRecv_SimpleDesc ); 
   \   000020                ; Setup parameters for call to function zclZD_Init
   \   000020   7A..         MOV     R2,#(zclZigbeeRecv_SimpleDesc & 0xff)
   \   000022   7B..         MOV     R3,#((zclZigbeeRecv_SimpleDesc >> 8) & 0xff)
   \   000024   12....       LCALL   ??zclZD_Init?relay
    159            
    160            // Register the ZCL General Cluster Library callback functions
    161            zclGeneral_RegisterCmdCallbacks( ZIGBEERECV_ENDPOINT, &zclZigbeeReceiver_CmdCallbacks ); 
   \   000027                ; Setup parameters for call to function zclGeneral_RegisterCmdCallbacks
   \   000027   7A..         MOV     R2,#(zclZigbeeReceiver_CmdCallbacks & 0xff)
   \   000029   7B..         MOV     R3,#((zclZigbeeReceiver_CmdCallbacks >> 8) & 0xff)
   \   00002B   790D         MOV     R1,#0xd
   \   00002D   12....       LCALL   ??zclGeneral_RegisterCmdCallbacks?relay
    162            
    163            // Register the application's attribute list
    164            zcl_registerAttrList( ZIGBEERECV_ENDPOINT, ZIGBEERECV_MAX_ATTRIBUTES, zclZigbeeRecv_Attrs ); 
   \   000030                ; Setup parameters for call to function zcl_registerAttrList
   \   000030   7C..         MOV     R4,#(zclZigbeeRecv_Attrs & 0xff)
   \   000032   7D..         MOV     R5,#((zclZigbeeRecv_Attrs >> 8) & 0xff)
   \   000034   7A0C         MOV     R2,#0xc
   \   000036   790D         MOV     R1,#0xd
   \   000038   12....       LCALL   ??zcl_registerAttrList?relay
    165            
    166            // Register the Application to receive the unprocessed Foundation command/response messages
    167            zcl_registerForMsg( zclZigbeeReceiver_TaskID ); 
   \   00003B                ; Setup parameters for call to function zcl_registerForMsg
   \   00003B   90....       MOV     DPTR,#zclZigbeeReceiver_TaskID
   \   00003E   E0           MOVX    A,@DPTR
   \   00003F   F9           MOV     R1,A
   \   000040   12....       LCALL   ??zcl_registerForMsg?relay
    168            
    169            // Register for all key events - This app will handle all key events
    170            RegisterForKeys( zclZigbeeReceiver_TaskID ); 
   \   000043                ; Setup parameters for call to function RegisterForKeys
   \   000043   90....       MOV     DPTR,#zclZigbeeReceiver_TaskID
   \   000046   E0           MOVX    A,@DPTR
   \   000047   F9           MOV     R1,A
   \   000048   12....       LCALL   ??RegisterForKeys?relay
    171            
    172            // By default, all devices start out in Group 1 ( register grouop )
    173            zclZigbeeRecv_Group.ID = RECV_GROUP;
   \   00004B   90....       MOV     DPTR,#zclZigbeeRecv_Group
   \   00004E   7410         MOV     A,#0x10
   \   000050   F0           MOVX    @DPTR,A
   \   000051   A3           INC     DPTR
   \   000052   7420         MOV     A,#0x20
   \   000054   F0           MOVX    @DPTR,A
    174            osal_memcpy( zclZigbeeRecv_Group.name, "RECV_GROUP", 8  );
   \   000055                ; Setup parameters for call to function osal_memcpy
   \   000055   75....       MOV     ?V0 + 0,#(`?<Constant "RECV_GROUP">` & 0xff)
   \   000058   75....       MOV     ?V0 + 1,#((`?<Constant "RECV_GROUP">` >> 8) & 0xff)
   \   00005B   75..00       MOV     ?V0 + 2,#0x0
   \   00005E   78..         MOV     R0,#?V0 + 0
   \   000060   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000063   7C08         MOV     R4,#0x8
   \   000065   7D00         MOV     R5,#0x0
   \   000067   7A..         MOV     R2,#((zclZigbeeRecv_Group + 2) & 0xff)
   \   000069   7B..         MOV     R3,#(((zclZigbeeRecv_Group + 2) >> 8) & 0xff)
   \   00006B   12....       LCALL   ??osal_memcpy?relay
   \   00006E   7403         MOV     A,#0x3
   \   000070   12....       LCALL   ?DEALLOC_XSTACK8
    175            aps_AddGroup( ZIGBEERECV_ENDPOINT, &zclZigbeeRecv_Group ); 
   \   000073                ; Setup parameters for call to function aps_AddGroup
   \   000073   7A..         MOV     R2,#(zclZigbeeRecv_Group & 0xff)
   \   000075   7B..         MOV     R3,#((zclZigbeeRecv_Group >> 8) & 0xff)
   \   000077   790D         MOV     R1,#0xd
   \   000079   12....       LCALL   ??aps_AddGroup?relay
    176            
    177            // Register for a test endpoint
    178            afRegister( &zigbeeReceiver_TestEp ); 
   \   00007C                ; Setup parameters for call to function afRegister
   \   00007C   7A..         MOV     R2,#(zigbeeReceiver_TestEp & 0xff)
   \   00007E   7B..         MOV     R3,#((zigbeeReceiver_TestEp >> 8) & 0xff)
   \   000080   12....       LCALL   ??afRegister?relay
    179          }
   \   000083   7F03         MOV     R7,#0x3
   \   000085   02....       LJMP    ?BANKED_LEAVE_XDATA
    180          
    181          /*********************************************************************
    182           * @fn          zclZigbeeRecv_event_loop
    183           * @brief       Event Loop Processor for zclGeneral.
    184           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    185          uint16 zclZigbeeRecv_event_loop( uint8 task_id, uint16 events )
   \                     zclZigbeeRecv_event_loop:
    186          { 
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 9
   \   000005   74F7         MOV     A,#-0x9
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   8A..         MOV     ?V0 + 2,R2
   \   00000C   8B..         MOV     ?V0 + 3,R3
    187            afIncomingMSGPacket_t *MSGpkt;
    188            (void)task_id;  // Intentionally unreferenced parameter
    189            
    190            if ( events & SYS_EVENT_MSG ) // SYSTEM Message event
   \   00000E   7480         MOV     A,#-0x80
   \   000010   55..         ANL     A,?V0 + 3
   \   000012   F9           MOV     R1,A
   \   000013   E4           CLR     A
   \   000014   7001         JNZ     ??zclZigbeeRecv_event_loop_0
   \   000016   E9           MOV     A,R1
   \                     ??zclZigbeeRecv_event_loop_0:
   \   000017   6003         JZ      $+5
   \   000019   02....       LJMP    ??zclZigbeeRecv_event_loop_1 & 0xFFFF
    191            {
    192              while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( zclZigbeeReceiver_TaskID )) )
    193              { 
    194                switch ( MSGpkt->hdr.event )
    195                {
    196                case ZCL_INCOMING_MSG: //0x34 : Incoming ZCL foundation message
    197                    
    198                    // Incoming ZCL Foundation command/response messages
    199                    zclZigbeeReceiver_ProcessIncomingMsg( (zclIncomingMsg_t *)MSGpkt ); 
    200                    break;
    201                    
    202                case KEY_CHANGE: //0xC0 : Key Events
    203                    zclZigbeeReceiver_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    204                    break;
    205          
    206                  default:
    207                    break;
    208                }
    209                osal_msg_deallocate( (uint8 *)MSGpkt ); // Release the memory
    210              }
    211              return (events ^ SYS_EVENT_MSG); // return unprocessed events
    212            }
    213            
    214            if ( events & SAMPLELIGHT_IDENTIFY_TIMEOUT_EVT ) // ZIGBEE Receiver identify timeout event 
   \   00001C   EA           MOV     A,R2
   \   00001D   A2E0         MOV     C,0xE0 /* A   */.0
   \   00001F   4003         JC      $+5
   \   000021   02....       LJMP    ??zclZigbeeRecv_event_loop_2 & 0xFFFF
    215            {
    216              if ( zclZigbeeRecv_IdentifyTime > 0 )
   \   000024   90....       MOV     DPTR,#zclZigbeeRecv_IdentifyTime
   \   000027   E0           MOVX    A,@DPTR
   \   000028   7002         JNZ     ??zclZigbeeRecv_event_loop_3
   \   00002A   A3           INC     DPTR
   \   00002B   E0           MOVX    A,@DPTR
   \                     ??zclZigbeeRecv_event_loop_3:
   \   00002C   600C         JZ      ??zclZigbeeRecv_event_loop_4
    217                    zclZigbeeRecv_IdentifyTime--;
   \   00002E   90....       MOV     DPTR,#zclZigbeeRecv_IdentifyTime
   \   000031   E0           MOVX    A,@DPTR
   \   000032   24FF         ADD     A,#-0x1
   \   000034   F0           MOVX    @DPTR,A
   \   000035   A3           INC     DPTR
   \   000036   E0           MOVX    A,@DPTR
   \   000037   34FF         ADDC    A,#-0x1
   \   000039   F0           MOVX    @DPTR,A
    218                    zclZigbeeReceiver_ProcessIdentifyTimeChange();
   \                     ??zclZigbeeRecv_event_loop_4:
   \   00003A                ; Setup parameters for call to function zclZigbeeReceiver_ProcessIdentifyTimeChange
   \   00003A   12....       LCALL   ??zclZigbeeReceiver_ProcessIdentifyTimeChange?r
    219              
    220              return ( events ^ SAMPLELIGHT_IDENTIFY_TIMEOUT_EVT );
   \   00003D   7401         MOV     A,#0x1
   \                     ??zclZigbeeRecv_event_loop_5:
   \   00003F   65..         XRL     A,?V0 + 2
   \   000041   FA           MOV     R2,A
   \   000042   AB..         MOV     R3,?V0 + 3
   \   000044   02....       LJMP    ??zclZigbeeRecv_event_loop_6 & 0xFFFF
    221            }
   \                     ??zclZigbeeRecv_event_loop_7:
   \   000047   8A82         MOV     DPL,R2
   \   000049   8B83         MOV     DPH,R3
   \   00004B   A3           INC     DPTR
   \   00004C   A3           INC     DPTR
   \   00004D   A3           INC     DPTR
   \   00004E   E0           MOVX    A,@DPTR
   \   00004F   A2E0         MOV     C,0xE0 /* A   */.0
   \   000051   5062         JNC     ??zclZigbeeRecv_event_loop_8
   \   000053   7408         MOV     A,#0x8
   \   000055   12....       LCALL   ?XSTACK_DISP0_8
   \   000058   7402         MOV     A,#0x2
   \   00005A   F0           MOVX    @DPTR,A
   \   00005B   85..82       MOV     DPL,?XSP + 0
   \   00005E   85..83       MOV     DPH,?XSP + 1
   \   000061   E4           CLR     A
   \   000062   F0           MOVX    @DPTR,A
   \   000063   A3           INC     DPTR
   \   000064   F0           MOVX    @DPTR,A
   \   000065                ; Setup parameters for call to function ZDP_EndDeviceBindReq
   \   000065   75..01       MOV     ?V0 + 4,#0x1
   \   000068   78..         MOV     R0,#?V0 + 4
   \   00006A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00006D   75..00       MOV     ?V0 + 4,#0x0
   \   000070   75..00       MOV     ?V0 + 5,#0x0
   \   000073   78..         MOV     R0,#?V0 + 4
   \   000075   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000078   78..         MOV     R0,#?V0 + 4
   \   00007A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00007D   75....       MOV     ?V0 + 4,#(bindingInClusters & 0xff)
   \   000080   75....       MOV     ?V0 + 5,#((bindingInClusters >> 8) & 0xff)
   \   000083   78..         MOV     R0,#?V0 + 4
   \   000085   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000088   75..02       MOV     ?V0 + 4,#0x2
   \   00008B   78..         MOV     R0,#?V0 + 4
   \   00008D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000090   75..04       MOV     ?V0 + 4,#0x4
   \   000093   75..01       MOV     ?V0 + 5,#0x1
   \   000096   78..         MOV     R0,#?V0 + 4
   \   000098   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00009B                ; Setup parameters for call to function NLME_GetShortAddr
   \   00009B   12....       LCALL   ??NLME_GetShortAddr?relay
   \   00009E   EA           MOV     A,R2
   \   00009F   FC           MOV     R4,A
   \   0000A0   EB           MOV     A,R3
   \   0000A1   FD           MOV     R5,A
   \   0000A2   790D         MOV     R1,#0xd
   \   0000A4   7409         MOV     A,#0x9
   \   0000A6   12....       LCALL   ?XSTACK_DISP0_8
   \   0000A9   AA82         MOV     R2,DPL
   \   0000AB   AB83         MOV     R3,DPH
   \   0000AD   12....       LCALL   ??ZDP_EndDeviceBindReq?relay
   \   0000B0   7409         MOV     A,#0x9
   \   0000B2   12....       LCALL   ?DEALLOC_XSTACK8
   \                     ??zclZigbeeRecv_event_loop_8:
   \   0000B5                ; Setup parameters for call to function osal_msg_deallocate
   \   0000B5   AA..         MOV     R2,?V0 + 0
   \   0000B7   AB..         MOV     R3,?V0 + 1
   \   0000B9   12....       LCALL   ??osal_msg_deallocate?relay
   \                     ??zclZigbeeRecv_event_loop_1:
   \   0000BC                ; Setup parameters for call to function osal_msg_receive
   \   0000BC   90....       MOV     DPTR,#zclZigbeeReceiver_TaskID
   \   0000BF   E0           MOVX    A,@DPTR
   \   0000C0   F9           MOV     R1,A
   \   0000C1   12....       LCALL   ??osal_msg_receive?relay
   \   0000C4   8A..         MOV     ?V0 + 0,R2
   \   0000C6   8B..         MOV     ?V0 + 1,R3
   \   0000C8   EA           MOV     A,R2
   \   0000C9   7001         JNZ     ??zclZigbeeRecv_event_loop_9
   \   0000CB   EB           MOV     A,R3
   \                     ??zclZigbeeRecv_event_loop_9:
   \   0000CC   6061         JZ      ??zclZigbeeRecv_event_loop_10
   \   0000CE   8A82         MOV     DPL,R2
   \   0000D0   8B83         MOV     DPH,R3
   \   0000D2   E0           MOVX    A,@DPTR
   \   0000D3   12....       LCALL   ?UC_SWITCH_SPARSE
   \                     `?<Jumptable for zclZigbeeRecv_event_loop>_0`:
   \   0000D6   00           DB        0
   \   0000D7   02           DB        2
   \   0000D8   34           DB        52
   \   0000D9   ....         DW        ??zclZigbeeRecv_event_loop_11
   \   0000DB   C0           DB        192
   \   0000DC   ....         DW        ??zclZigbeeRecv_event_loop_7
   \   0000DE   ....         DW        ??zclZigbeeRecv_event_loop_8
   \                     ??zclZigbeeRecv_event_loop_11:
   \   0000E0   8A82         MOV     DPL,R2
   \   0000E2   8B83         MOV     DPH,R3
   \   0000E4   A3           INC     DPTR
   \   0000E5   A3           INC     DPTR
   \   0000E6   A3           INC     DPTR
   \   0000E7   A3           INC     DPTR
   \   0000E8   A3           INC     DPTR
   \   0000E9   A3           INC     DPTR
   \   0000EA   A3           INC     DPTR
   \   0000EB   E0           MOVX    A,@DPTR
   \   0000EC   12....       LCALL   ?UC_SWITCH_SPARSE
   \                     `?<Jumptable for zclZigbeeRecv_event_loop>_1`:
   \   0000EF   00           DB        0
   \   0000F0   02           DB        2
   \   0000F1   01           DB        1
   \   0000F2   ....         DW        ??zclZigbeeRecv_event_loop_12
   \   0000F4   04           DB        4
   \   0000F5   ....         DW        ??zclZigbeeRecv_event_loop_13
   \   0000F7   ....         DW        ??zclZigbeeRecv_event_loop_14
   \                     ??zclZigbeeRecv_event_loop_12:
   \   0000F9   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   0000FC   E0           MOVX    A,@DPTR
   \   0000FD   FA           MOV     R2,A
   \   0000FE   EB           MOV     A,R3
   \   0000FF   C3           CLR     C
   \   000100   9A           SUBB    A,R2
   \   000101   5010         JNC     ??zclZigbeeRecv_event_loop_14
   \   000103   0B           INC     R3
   \   000104   80F6         SJMP    ??CrossCallReturnLabel_0
   \                     ??zclZigbeeRecv_event_loop_13:
   \   000106   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   000109   8001         SJMP    ??zclZigbeeRecv_event_loop_15
   \                     ??zclZigbeeRecv_event_loop_16:
   \   00010B   0B           INC     R3
   \                     ??zclZigbeeRecv_event_loop_15:
   \   00010C   E0           MOVX    A,@DPTR
   \   00010D   FA           MOV     R2,A
   \   00010E   EB           MOV     A,R3
   \   00010F   C3           CLR     C
   \   000110   9A           SUBB    A,R2
   \   000111   40F8         JC      ??zclZigbeeRecv_event_loop_16
   \                     ??zclZigbeeRecv_event_loop_14:
   \   000113   E5..         MOV     A,?V0 + 0
   \   000115   2416         ADD     A,#0x16
   \   000117   F582         MOV     DPL,A
   \   000119   E5..         MOV     A,?V0 + 1
   \   00011B   3400         ADDC    A,#0x0
   \   00011D   F583         MOV     DPH,A
   \   00011F   E0           MOVX    A,@DPTR
   \   000120   FA           MOV     R2,A
   \   000121   A3           INC     DPTR
   \   000122   E0           MOVX    A,@DPTR
   \   000123   FB           MOV     R3,A
   \   000124   EA           MOV     A,R2
   \   000125   7001         JNZ     ??zclZigbeeRecv_event_loop_17
   \   000127   EB           MOV     A,R3
   \                     ??zclZigbeeRecv_event_loop_17:
   \   000128   608B         JZ      ??zclZigbeeRecv_event_loop_8
   \   00012A                ; Setup parameters for call to function osal_mem_free
   \   00012A   12....       LCALL   ??osal_mem_free?relay
   \   00012D   8086         SJMP    ??zclZigbeeRecv_event_loop_8
   \                     ??zclZigbeeRecv_event_loop_10:
   \   00012F   AA..         MOV     R2,?V0 + 2
   \   000131   7480         MOV     A,#-0x80
   \   000133   65..         XRL     A,?V0 + 3
   \   000135   FB           MOV     R3,A
   \   000136   802A         SJMP    ??zclZigbeeRecv_event_loop_6
    222            
    223            // The UART Message event
    224            if ( events & UART_MSG_EVT ) 
   \                     ??zclZigbeeRecv_event_loop_2:
   \   000138   5402         ANL     A,#0x2
   \   00013A   6008         JZ      ??zclZigbeeRecv_event_loop_18
    225            {
    226                zclUartReceiver();
   \   00013C                ; Setup parameters for call to function zclUartReceiver
   \   00013C   12....       LCALL   ??zclUartReceiver?relay
    227                return ( events ^ UART_MSG_EVT );
   \   00013F   7402         MOV     A,#0x2
   \   000141   02....       LJMP    ??zclZigbeeRecv_event_loop_5 & 0xFFFF
    228            }
    229            
    230            // The KEYPAD keyin event
    231            if ( events & KEYPAD_MSG_EVT )
   \                     ??zclZigbeeRecv_event_loop_18:
   \   000144   EA           MOV     A,R2
   \   000145   5404         ANL     A,#0x4
   \   000147   6015         JZ      ??zclZigbeeRecv_event_loop_19
    232            {
    233              HalLcdWriteChar(HAL_LCD_LINE_3, 0, ch);
   \   000149                ; Setup parameters for call to function HalLcdWriteChar
   \   000149   90....       MOV     DPTR,#ch
   \   00014C   E0           MOVX    A,@DPTR
   \   00014D   FB           MOV     R3,A
   \   00014E   7A00         MOV     R2,#0x0
   \   000150   7903         MOV     R1,#0x3
   \   000152   12....       LCALL   ??HalLcdWriteChar?relay
    234              return ( events ^ KEYPAD_MSG_EVT );
   \   000155   7404         MOV     A,#0x4
   \   000157   65..         XRL     A,?V0 + 2
   \   000159   FA           MOV     R2,A
   \   00015A   AB..         MOV     R3,?V0 + 3
   \   00015C   8004         SJMP    ??zclZigbeeRecv_event_loop_6
    235            }
    236            
    237            return 0; // Discard unknown events
   \                     ??zclZigbeeRecv_event_loop_19:
   \   00015E   7A00         MOV     R2,#0x0
   \   000160   7B00         MOV     R3,#0x0
   \                     ??zclZigbeeRecv_event_loop_6:
   \   000162   7409         MOV     A,#0x9
   \   000164   12....       LCALL   ?DEALLOC_XSTACK8
   \   000167   7F06         MOV     R7,#0x6
   \   000169   02....       LJMP    ?BANKED_LEAVE_XDATA
    238          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   EA           MOV     A,R2
   \   000001   2416         ADD     A,#0x16
   \   000003   F582         MOV     DPL,A
   \   000005   EB           MOV     A,R3
   \   000006   3400         ADDC    A,#0x0
   \   000008   F583         MOV     DPH,A
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   F8           MOV     R0,A
   \   00000C   A3           INC     DPTR
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   F9           MOV     R1,A
   \   00000F   8882         MOV     DPL,R0
   \   000011   8983         MOV     DPH,R1
   \   000013   7B00         MOV     R3,#0x0
   \   000015   22           RET
    239          
    240          /*********************************************************************
    241           * @fn      zclZigbeeReceiver_HandleKeys
    242           * @brief   Handles all key events for this device.
    243           * @param   shift - true if in shift/alt.
    244           * @param   keys - bit field for key events.
    245           *          Valid entries: HAL_KEY_SW_1(MCU-K1)                        
    246           */
    247          static void zclZigbeeReceiver_HandleKeys( byte shift, byte keys )
    248          {
    249            zAddrType_t dstAddr;
    250            (void)shift; // Intentionally unreferenced parameter
    251            
    252          #if defined(Coor_receiver)
    253            if ( keys & HAL_KEY_SW1 ) // Init EndDevice bind reequest, and use cluster list important to binding.
    254            {
    255              dstAddr.addrMode = afAddr16Bit;
    256              dstAddr.addr.shortAddr = 0;   // Coordinator makes the match
    257              ZDP_EndDeviceBindReq( &dstAddr,
    258                                    NLME_GetShortAddr(),
    259                                    ZIGBEERECV_ENDPOINT, // ZIGBEERECV_ENDPOINT = 13 is coordinator
    260                                    ZCL_HA_PROFILE_ID,
    261                                    ZCLZIGBEERECV_BINDINGLIST,
    262                                    bindingInClusters,
    263                                    0,
    264                                    NULL, // No Outgoing clusters to bind
    265                                    TRUE );
    266            }
    267            
    268            if ( keys & HAL_KEY_SW2 ) 
    269            {
    270              
    271            }
    272            
    273          #endif
    274          }
    275          
    276          /*********************************************************************
    277           * @fn      zclZigbeeReceiver_ProcessIdentifyTimeChange
    278           * @brief   Called to process any change to the IdentifyTime attribute.
    279           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    280          static void zclZigbeeReceiver_ProcessIdentifyTimeChange( void )
   \                     zclZigbeeReceiver_ProcessIdentifyTimeChange:
    281          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    282            if ( zclZigbeeRecv_IdentifyTime > 0 )
   \   000004   90....       MOV     DPTR,#zclZigbeeRecv_IdentifyTime
   \   000007   E0           MOVX    A,@DPTR
   \   000008   7002         JNZ     ??zclZigbeeReceiver_ProcessIdentifyTimeChange_0
   \   00000A   A3           INC     DPTR
   \   00000B   E0           MOVX    A,@DPTR
   \                     ??zclZigbeeReceiver_ProcessIdentifyTimeChange_0:
   \   00000C   601F         JZ      ??zclZigbeeReceiver_ProcessIdentifyTimeChange_1
    283            {
    284              osal_start_timerEx( zclZigbeeReceiver_TaskID, SAMPLELIGHT_IDENTIFY_TIMEOUT_EVT, 1000 );
   \   00000E                ; Setup parameters for call to function osal_start_timerEx
   \   00000E   7CE8         MOV     R4,#-0x18
   \   000010   7D03         MOV     R5,#0x3
   \   000012   7A01         MOV     R2,#0x1
   \   000014   7B00         MOV     R3,#0x0
   \   000016   90....       MOV     DPTR,#zclZigbeeReceiver_TaskID
   \   000019   E0           MOVX    A,@DPTR
   \   00001A   F9           MOV     R1,A
   \   00001B   12....       LCALL   ??osal_start_timerEx?relay
    285              HalLedBlink ( HAL_LED_2, 0xFF, HAL_LED_DEFAULT_DUTY_CYCLE, HAL_LED_DEFAULT_FLASH_TIME );
   \   00001E                ; Setup parameters for call to function HalLedBlink
   \   00001E   7CE8         MOV     R4,#-0x18
   \   000020   7D03         MOV     R5,#0x3
   \   000022   7B05         MOV     R3,#0x5
   \   000024   7AFF         MOV     R2,#-0x1
   \   000026   7902         MOV     R1,#0x2
   \   000028   12....       LCALL   ??HalLedBlink?relay
   \   00002B   8022         SJMP    ??zclZigbeeReceiver_ProcessIdentifyTimeChange_2
    286            }
    287            else
    288              {
    289                if ( zclZigbeeRecv_OnOff )
   \                     ??zclZigbeeReceiver_ProcessIdentifyTimeChange_1:
   \   00002D   90....       MOV     DPTR,#zclZigbeeRecv_OnOff
   \   000030   E0           MOVX    A,@DPTR
   \   000031   6009         JZ      ??zclZigbeeReceiver_ProcessIdentifyTimeChange_3
    290                {
    291                  HalLedSet ( HAL_LED_1, HAL_LED_MODE_ON );
   \   000033                ; Setup parameters for call to function HalLedSet
   \   000033   7A01         MOV     R2,#0x1
   \   000035   7901         MOV     R1,#0x1
   \   000037   12....       LCALL   ??HalLedSet?relay
   \   00003A   8013         SJMP    ??zclZigbeeReceiver_ProcessIdentifyTimeChange_2
    292                }
    293                else
    294                  {
    295                    HalLedSet ( HAL_LED_1, HAL_LED_MODE_OFF );
   \                     ??zclZigbeeReceiver_ProcessIdentifyTimeChange_3:
   \   00003C                ; Setup parameters for call to function HalLedSet
   \   00003C   7A00         MOV     R2,#0x0
   \   00003E   7901         MOV     R1,#0x1
   \   000040   12....       LCALL   ??HalLedSet?relay
    296                    osal_stop_timerEx( zclZigbeeReceiver_TaskID, SAMPLELIGHT_IDENTIFY_TIMEOUT_EVT );
   \   000043                ; Setup parameters for call to function osal_stop_timerEx
   \   000043   7A01         MOV     R2,#0x1
   \   000045   7B00         MOV     R3,#0x0
   \   000047   90....       MOV     DPTR,#zclZigbeeReceiver_TaskID
   \   00004A   E0           MOVX    A,@DPTR
   \   00004B   F9           MOV     R1,A
   \   00004C   12....       LCALL   ??osal_stop_timerEx?relay
    297                  }
    298              }
    299          }
   \                     ??zclZigbeeReceiver_ProcessIdentifyTimeChange_2:
   \   00004F                REQUIRE ?Subroutine1
   \   00004F                ; // Fall through to label ?Subroutine1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
    300          
    301          /*********************************************************************
    302           * @fn      zclZigbeeReceiver_BasicResetCB
    303           * @brief   Callback from the ZCL General Cluster Library
    304           *          to set all the Basic Cluster attributes to default values.
    305           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    306          static void zclZigbeeReceiver_BasicResetCB( void )
   \                     zclZigbeeReceiver_BasicResetCB:
    307          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    308            // Reset all attributes to default values
    309          }
   \   000000   02....       LJMP    ?BRET
    310          
    311          /*********************************************************************
    312           * @fn      zclZigbeeReceiver_IdentifyCB
    313           * @brief   Callback from the ZCL General Cluster Library when
    314           *          it received an Identity Command for this application.
    315           * @param   srcAddr - source address and endpoint of the response message
    316           *          identifyTime - the number of seconds to identify yourself
    317           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    318          static void zclZigbeeReceiver_IdentifyCB( zclIdentify_t *pCmd )
   \                     zclZigbeeReceiver_IdentifyCB:
    319          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    320            zclZigbeeRecv_IdentifyTime = pCmd->identifyTime;
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   F8           MOV     R0,A
   \   00000C   A3           INC     DPTR
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   F9           MOV     R1,A
   \   00000F   90....       MOV     DPTR,#zclZigbeeRecv_IdentifyTime
   \   000012   E8           MOV     A,R0
   \   000013   F0           MOVX    @DPTR,A
   \   000014   A3           INC     DPTR
   \   000015   E9           MOV     A,R1
   \   000016   F0           MOVX    @DPTR,A
    321            zclZigbeeReceiver_ProcessIdentifyTimeChange();
   \   000017                ; Setup parameters for call to function zclZigbeeReceiver_ProcessIdentifyTimeChange
   \   000017   12....       LCALL   ??zclZigbeeReceiver_ProcessIdentifyTimeChange?r
    322          }
   \   00001A   80..         SJMP    ?Subroutine1
    323          
    324          /*********************************************************************
    325           * @fn      zclZigbeeReceiver_IdentifyQueryRspCB
    326           * @brief   Callback from the ZCL General Cluster Library when
    327           *          it received an Identity Query Response Command for this application.
    328           * @param   srcAddr - requestor's address
    329           *          timeout - number of seconds to identify yourself (valid for query response)
    330           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    331          static void zclZigbeeReceiver_IdentifyQueryRspCB( zclIdentifyQueryRsp_t *pRsp )
   \                     zclZigbeeReceiver_IdentifyQueryRspCB:
    332          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    333            (void)pRsp; // Query Response (with timeout value)
    334          }
   \   000000   02....       LJMP    ?BRET
    335          
    336          /*********************************************************************
    337           * @fn      zclZigbeeReceiver_OnOffCB
    338           * @brief   Callback from the ZCL General Cluster Library when
    339           *          it received an On/Off Command for this application.
    340           * @param   cmd - COMMAND_ON, COMMAND_OFF or COMMAND_TOGGLE
    341           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    342          static void zclZigbeeReceiver_OnOffCB( uint8 cmd )
   \                     zclZigbeeReceiver_OnOffCB:
    343          { 
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    344            if ( cmd == COMMAND_ON ) // Turn on the light
   \   000004   7401         MOV     A,#0x1
   \   000006   69           XRL     A,R1
   \   000007   700E         JNZ     ??zclZigbeeReceiver_OnOffCB_0
    345              zclZigbeeRecv_OnOff = LIGHT_ON;
   \                     ??zclZigbeeReceiver_OnOffCB_1:
   \   000009   7401         MOV     A,#0x1
   \                     ??zclZigbeeReceiver_OnOffCB_2:
   \   00000B   90....       MOV     DPTR,#zclZigbeeRecv_OnOff
   \   00000E   F0           MOVX    @DPTR,A
    346          
    347            else if ( cmd == COMMAND_OFF ) // Turn off the light
    348              zclZigbeeRecv_OnOff = LIGHT_OFF;
    349          
    350            else // Toggle the light
    351            {
    352              if ( zclZigbeeRecv_OnOff == LIGHT_OFF )
    353                    zclZigbeeRecv_OnOff = LIGHT_ON;
    354              else
    355                    zclZigbeeRecv_OnOff = LIGHT_OFF;
    356            }
    357          
    358            // In this sample app, we use LED4 to simulate the Light  
    359            if ( zclZigbeeRecv_OnOff == LIGHT_ON )
    360            {
    361              HalLedSet( HAL_LED_2, HAL_LED_MODE_ON ); // setting the LED_1 on
   \   00000F                ; Setup parameters for call to function HalLedSet
   \   00000F   FA           MOV     R2,A
   \   000010   7902         MOV     R1,#0x2
   \   000012   12....       LCALL   ??HalLedSet?relay
    362            }
    363            else
    364              HalLedSet( HAL_LED_2, HAL_LED_MODE_OFF ); // setting the LED_1 off
    365          }
   \   000015   80..         SJMP    ?Subroutine1
   \                     ??zclZigbeeReceiver_OnOffCB_0:
   \   000017   E9           MOV     A,R1
   \   000018   7003         JNZ     ??zclZigbeeReceiver_OnOffCB_3
   \                     ??zclZigbeeReceiver_OnOffCB_4:
   \   00001A   E4           CLR     A
   \   00001B   80EE         SJMP    ??zclZigbeeReceiver_OnOffCB_2
   \                     ??zclZigbeeReceiver_OnOffCB_3:
   \   00001D   90....       MOV     DPTR,#zclZigbeeRecv_OnOff
   \   000020   E0           MOVX    A,@DPTR
   \   000021   70F7         JNZ     ??zclZigbeeReceiver_OnOffCB_4
   \   000023   80E4         SJMP    ??zclZigbeeReceiver_OnOffCB_1
    366          /****************************************************************************** 
    367           * 
    368           *  Functions for processing ZCL Foundation incoming Command/Response messages
    369           *
    370           *****************************************************************************/
    371          
    372          /*********************************************************************
    373           * @fn      zclZigbeeReceiver_ProcessIncomingMsg
    374           * @brief   Process ZCL Foundation incoming message
    375           * @param   pInMsg - pointer to the received message
    376           */
    377          static void zclZigbeeReceiver_ProcessIncomingMsg( zclIncomingMsg_t *pInMsg)
    378          {
    379            switch ( pInMsg->zclHdr.commandID )
    380            {
    381          #ifdef ZCL_READ
    382              case ZCL_CMD_READ_RSP:
    383                zclZigbeeReceiver_ProcessInReadRspCmd( pInMsg );
    384                break;
    385          #endif
    386                
    387          #ifdef ZCL_WRITE    
    388              case ZCL_CMD_WRITE_RSP:
    389                zclZigbeeReceiver_ProcessInWriteRspCmd( pInMsg );
    390                break;
    391          #endif
    392                
    393          #ifdef ZCL_REPORT
    394              case ZCL_CMD_CONFIG_REPORT: // See ZCL Test Applicaiton (zcl_testapp.c) for sample code on Attribute Reporting
    395                //zclSampleLight_ProcessInConfigReportCmd( pInMsg );
    396                break;
    397              
    398              case ZCL_CMD_CONFIG_REPORT_RSP:
    399                //zclSampleLight_ProcessInConfigReportRspCmd( pInMsg );
    400                break;
    401              
    402              case ZCL_CMD_READ_REPORT_CFG:
    403                //zclSampleLight_ProcessInReadReportCfgCmd( pInMsg );
    404                break;
    405              
    406              case ZCL_CMD_READ_REPORT_CFG_RSP:
    407                //zclSampleLight_ProcessInReadReportCfgRspCmd( pInMsg );
    408                break;
    409              
    410              case ZCL_CMD_REPORT:
    411                //zclSampleLight_ProcessInReportCmd( pInMsg );
    412                break;
    413          #endif   
    414                
    415              case ZCL_CMD_DEFAULT_RSP:
    416                zclZigbeeReceiver_ProcessInDefaultRspCmd( pInMsg );
    417                break;
    418                
    419          #ifdef ZCL_DISCOVER     
    420              case ZCL_CMD_DISCOVER_RSP:
    421                zclZigbeeReceiver_ProcessInDiscRspCmd( pInMsg );
    422                break;
    423          #endif
    424                
    425              default:
    426                break;
    427            }
    428            if ( pInMsg->attrCmd )
    429              osal_mem_free( pInMsg->attrCmd );
    430          }
    431          
    432          #ifdef ZCL_READ
    433          /*********************************************************************
    434           * @fn      zclZigbeeReceiver_ProcessInReadRspCmd
    435           * @brief   Process the "Profile" Read Response Command
    436           * @param   pInMsg - incoming message to process
    437           */
    438          static uint8 zclZigbeeReceiver_ProcessInReadRspCmd( zclIncomingMsg_t *pInMsg )
    439          {
    440            zclReadRspCmd_t *readRspCmd;
    441            uint8 i;
    442          
    443            readRspCmd = (zclReadRspCmd_t *)pInMsg->attrCmd;
    444            for (i = 0; i < readRspCmd->numAttr; i++)
    445            {
    446              // Notify the originator of the results of the original read attributes attempt and, 
    447              // for each successfull request, the value of the requested attribute
    448            }
    449            return TRUE; 
    450          }
    451          #endif // ZCL_READ
    452          
    453          #ifdef ZCL_WRITE
    454          /*********************************************************************
    455           * @fn      zclZigbeeReceiver_ProcessInWriteRspCmd
    456           * @brief   Process the "Profile" Write Response Command
    457           * @param   pInMsg - incoming message to process
    458           */
    459          static uint8 zclZigbeeReceiver_ProcessInWriteRspCmd( zclIncomingMsg_t *pInMsg )
    460          {
    461            zclWriteRspCmd_t *writeRspCmd;
    462            uint8 i;
    463          
    464            writeRspCmd = (zclWriteRspCmd_t *)pInMsg->attrCmd;
    465            for (i = 0; i < writeRspCmd->numAttr; i++)
    466            {
    467              // Notify the device of the results of the its original write attributes command.
    468            }
    469            return TRUE; 
    470          }
    471          #endif // ZCL_WRITE
    472          
    473          /*********************************************************************
    474           * @fn      zclZigbeeReceiver_ProcessInDefaultRspCmd
    475           * @brief   Process the "Profile" Default Response Command
    476           * @param   pInMsg - incoming message to process
    477           */
    478          static uint8 zclZigbeeReceiver_ProcessInDefaultRspCmd( zclIncomingMsg_t *pInMsg )
    479          {
    480            // zclDefaultRspCmd_t *defaultRspCmd = (zclDefaultRspCmd_t *)pInMsg->attrCmd; 
    481            // Device is notified of the Default Response command.
    482            (void)pInMsg;
    483            return TRUE; 
    484          }
    485          
    486          #ifdef ZCL_DISCOVER
    487          /*********************************************************************
    488           * @fn      zclZigbeeReceiver_ProcessInDiscRspCmd
    489           * @brief   Process the "Profile" Discover Response Command
    490           * @param   pInMsg - incoming message to process
    491           */
    492          static uint8 zclZigbeeReceiver_ProcessInDiscRspCmd( zclIncomingMsg_t *pInMsg )
    493          {
    494            zclDiscoverRspCmd_t *discoverRspCmd;
    495            uint8 i;
    496            
    497            discoverRspCmd = (zclDiscoverRspCmd_t *)pInMsg->attrCmd;
    498            for ( i = 0; i < discoverRspCmd->numAttr; i++ )
    499            {
    500              // Device is notified of the result of its attribute discovery command.
    501            }
    502            return TRUE;
    503          }
    504          #endif // ZCL_DISCOVER
    505          
    506          /****************************************************************************
    507          ****************************************************************************/
    508          
    509          /*********************************************************************
    510           * @fn      zclUARTMsg_CallBack
    511           * @brief   Send data OTA.
    512           * @param   port - UART port.
    513           * @param   event - the UART port event flag.
    514           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    515          void zclUARTMsg_CallBack(uint8 port, uint8 event)
   \                     zclUARTMsg_CallBack:
    516          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    517            (void)port;
    518            
    519            if(Hal_UART_RxBufLen( MT_UART_DEFAULT_PORT) > 0 )
   \   000005                ; Setup parameters for call to function Hal_UART_RxBufLen
   \   000005   7900         MOV     R1,#0x0
   \   000007   12....       LCALL   ??Hal_UART_RxBufLen?relay
   \   00000A   EA           MOV     A,R2
   \   00000B   7001         JNZ     ??zclUARTMsg_CallBack_0
   \   00000D   EB           MOV     A,R3
   \                     ??zclUARTMsg_CallBack_0:
   \   00000E   6022         JZ      ??zclUARTMsg_CallBack_1
    520            {
    521                len = Hal_UART_RxBufLen( MT_UART_DEFAULT_PORT );
   \   000010                ; Setup parameters for call to function Hal_UART_RxBufLen
   \   000010   7900         MOV     R1,#0x0
   \   000012   12....       LCALL   ??Hal_UART_RxBufLen?relay
   \   000015   EA           MOV     A,R2
   \   000016   90....       MOV     DPTR,#len
   \   000019   F0           MOVX    @DPTR,A
    522                HalUARTRead( MT_UART_DEFAULT_PORT, TransmitApp_Msg, len );
   \   00001A                ; Setup parameters for call to function HalUARTRead
   \   00001A   FC           MOV     R4,A
   \   00001B   7D00         MOV     R5,#0x0
   \   00001D   7A..         MOV     R2,#(TransmitApp_Msg & 0xff)
   \   00001F   7B..         MOV     R3,#((TransmitApp_Msg >> 8) & 0xff)
   \   000021   7900         MOV     R1,#0x0
   \   000023   12....       LCALL   ??HalUARTRead?relay
    523                osal_set_event( zclZigbeeReceiver_TaskID, UART_MSG_EVT );
   \   000026                ; Setup parameters for call to function osal_set_event
   \   000026   7A02         MOV     R2,#0x2
   \   000028   7B00         MOV     R3,#0x0
   \   00002A   90....       MOV     DPTR,#zclZigbeeReceiver_TaskID
   \   00002D   E0           MOVX    A,@DPTR
   \   00002E   F9           MOV     R1,A
   \   00002F   12....       LCALL   ??osal_set_event?relay
    524            }
    525          }
   \                     ??zclUARTMsg_CallBack_1:
   \   000032                REQUIRE ?Subroutine2
   \   000032                ; // Fall through to label ?Subroutine2

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    526          
    527          /*********************************************************************
    528           * @fn      zclUartReceiver
    529           * @brief   The coordinator receive command.
    530           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    531          void zclUartReceiver( void )
   \                     zclUartReceiver:
    532          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 20
   \   000005   74EC         MOV     A,#-0x14
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    533            uint8 len;
    534            uint8 uart_recv[20]; // Receive the UART command
    535            
    536            for(len = 0; len < 20; len++)
   \   00000A   7A00         MOV     R2,#0x0
    537            {
    538              uart_recv[len] = TransmitApp_Msg[len];
   \                     ??zclUartReceiver_0:
   \   00000C   8A82         MOV     DPL,R2
   \   00000E   A882         MOV     R0,DPL
   \   000010   E8           MOV     A,R0
   \   000011   24..         ADD     A,#(TransmitApp_Msg & 0xff)
   \   000013   F582         MOV     DPL,A
   \   000015   E4           CLR     A
   \   000016   34..         ADDC    A,#((TransmitApp_Msg >> 8) & 0xff)
   \   000018   F583         MOV     DPH,A
   \   00001A   E0           MOVX    A,@DPTR
   \   00001B   C0E0         PUSH    A
   \   00001D   85..82       MOV     DPL,?XSP + 0
   \   000020   85..83       MOV     DPH,?XSP + 1
   \   000023   E582         MOV     A,DPL
   \   000025   28           ADD     A,R0
   \   000026   F582         MOV     DPL,A
   \   000028   E583         MOV     A,DPH
   \   00002A   3400         ADDC    A,#0x0
   \   00002C   F583         MOV     DPH,A
   \   00002E   D0E0         POP     A
   \   000030   F0           MOVX    @DPTR,A
    539            #if defined( LCD_SUPPORTED )
    540              HalLcdWriteChar(HAL_LCD_LINE_4, len, uart_recv[len]);
    541            #endif
    542            }
   \   000031   0A           INC     R2
   \   000032   EA           MOV     A,R2
   \   000033   C3           CLR     C
   \   000034   9414         SUBB    A,#0x14
   \   000036   40D4         JC      ??zclUartReceiver_0
    543            
    544            // Set the End Device state
    545            zclZigbeeRecv_DstAddr.endPoint = 12;
   \   000038   740C         MOV     A,#0xc
   \   00003A   90....       MOV     DPTR,#(zclZigbeeRecv_DstAddr + 9)
   \   00003D   F0           MOVX    @DPTR,A
    546            zclZigbeeRecv_DstAddr.addr.shortAddr = 0xFFFF;
   \   00003E   90....       MOV     DPTR,#zclZigbeeRecv_DstAddr
   \   000041   74FF         MOV     A,#-0x1
   \   000043   F0           MOVX    @DPTR,A
   \   000044   A3           INC     DPTR
   \   000045   F0           MOVX    @DPTR,A
    547            zclZigbeeRecv_DstAddr.addrMode = (afAddrMode_t)AddrBroadcast;
   \   000046   740F         MOV     A,#0xf
   \   000048   90....       MOV     DPTR,#(zclZigbeeRecv_DstAddr + 8)
   \   00004B   F0           MOVX    @DPTR,A
    548              
    549            // Transmit the UART command to End Device
    550            uint8 send = zcl_SendCommand( ZIGBEERECV_ENDPOINT, 
    551                                          &zclZigbeeRecv_DstAddr,
    552                                          ZCL_CLUSTER_ID_GEN_ON_OFF,
    553                                          COMMAND_TOGGLE,
    554                                          TRUE,
    555                                          ZCL_FRAME_CLIENT_SERVER_DIR,
    556                                          false,
    557                                          0,
    558                                          0,
    559                                          10,
    560                                          uart_recv );
   \   00004C                ; Setup parameters for call to function zcl_SendCommand
   \   00004C   85..82       MOV     DPL,?XSP + 0
   \   00004F   85..83       MOV     DPH,?XSP + 1
   \   000052   8582..       MOV     ?V0 + 0,DPL
   \   000055   8583..       MOV     ?V0 + 1,DPH
   \   000058   78..         MOV     R0,#?V0 + 0
   \   00005A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005D   75..0A       MOV     ?V0 + 0,#0xa
   \   000060   75..00       MOV     ?V0 + 1,#0x0
   \   000063   78..         MOV     R0,#?V0 + 0
   \   000065   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000068   75..00       MOV     ?V0 + 0,#0x0
   \   00006B   78..         MOV     R0,#?V0 + 0
   \   00006D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000070   78..         MOV     R0,#?V0 + 0
   \   000072   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000075   78..         MOV     R0,#?V0 + 0
   \   000077   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00007A   78..         MOV     R0,#?V0 + 0
   \   00007C   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00007F   75..01       MOV     ?V0 + 0,#0x1
   \   000082   78..         MOV     R0,#?V0 + 0
   \   000084   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000087   75..02       MOV     ?V0 + 0,#0x2
   \   00008A   78..         MOV     R0,#?V0 + 0
   \   00008C   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00008F   7C06         MOV     R4,#0x6
   \   000091   7D00         MOV     R5,#0x0
   \   000093   7A..         MOV     R2,#(zclZigbeeRecv_DstAddr & 0xff)
   \   000095   7B..         MOV     R3,#((zclZigbeeRecv_DstAddr >> 8) & 0xff)
   \   000097   790D         MOV     R1,#0xd
   \   000099   12....       LCALL   ??zcl_SendCommand?relay
   \   00009C   740B         MOV     A,#0xb
   \   00009E   12....       LCALL   ?DEALLOC_XSTACK8
    561          }
   \   0000A1   7414         MOV     A,#0x14
   \   0000A3   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000A6   02....       LJMP    ?Subroutine2 & 0xFFFF

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for bindingInClusters>`:
   \   000000   06000800     DW 6, 8

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zigbeeReceiver_TestEp>`:
   \   000000   14           DB 20
   \   000001   ....0000     DW zclZigbeeReceiver_TaskID, 0H
   \   000005   00           DB 0

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclZigbeeReceiver_CmdCallbac`:
   \   000000   ....         DW ??zclZigbeeReceiver_BasicResetCB?relay
   \   000002   ....         DW ??zclZigbeeReceiver_IdentifyCB?relay
   \   000004   ....         DW ??zclZigbeeReceiver_IdentifyQueryRspCB?relay
   \   000006   ....0000     DW ??zclZigbeeReceiver_OnOffCB?relay, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H
   \            00000000
   \            00000000
   \            00000000
   \            0000    
   \   000018   00000000     DW 0H, 0H
   \   00001C   0000         DB 0, 0

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeRecv_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeRecv_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeRecv_event_loop?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeRecv_event_loop

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeReceiver_ProcessIdentifyTimeChange?r:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeReceiver_ProcessIdentifyTimeChange

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeReceiver_BasicResetCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeReceiver_BasicResetCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeReceiver_IdentifyCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeReceiver_IdentifyCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeReceiver_IdentifyQueryRspCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeReceiver_IdentifyQueryRspCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeReceiver_OnOffCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeReceiver_OnOffCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclUARTMsg_CallBack?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclUARTMsg_CallBack

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclUartReceiver?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclUartReceiver

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "RECV_GROUP">`:
   \   000000   52454356     DB "RECV_GROUP"
   \            5F47524F
   \            555000  

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     zclUARTMsg_CallBack                0      0     10
       -> Hal_UART_RxBufLen             0      0     20
       -> Hal_UART_RxBufLen             0      0     20
       -> HalUARTRead                   0      0     20
       -> osal_set_event                0      0     20
     zclUartReceiver                    1      0     64
       -> zcl_SendCommand               0      0     82
     zclZigbeeReceiver_BasicResetCB     0      0      0
     zclZigbeeReceiver_IdentifyCB       2      0      0
       -> zclZigbeeReceiver_ProcessIdentifyTimeChange
                                        4      0      0
     zclZigbeeReceiver_IdentifyQueryRspCB
                                        0      0      0
     zclZigbeeReceiver_OnOffCB          2      0      0
       -> HalLedSet                     4      0      0
       -> HalLedSet                     4      0      0
     zclZigbeeReceiver_ProcessIdentifyTimeChange
                                        2      0     23
       -> osal_start_timerEx            4      0      0
       -> HalLedBlink                   4      0      0
       -> HalLedSet                     4      0      0
       -> HalLedSet                     4      0      0
       -> osal_stop_timerEx             4      0      0
     zclZigbeeRecv_Init                 0      0     14
       -> zclZD_Init                    0      0     22
       -> zclGeneral_RegisterCmdCallbacks
                                        0      0     22
       -> zcl_registerAttrList          0      0     22
       -> zcl_registerForMsg            0      0     22
       -> RegisterForKeys               0      0     22
       -> osal_memcpy                   0      0     28
       -> aps_AddGroup                  0      0     22
       -> afRegister                    0      0     22
     zclZigbeeRecv_event_loop           1      0     32
       -> zclZigbeeReceiver_ProcessIdentifyTimeChange
                                        0      0     46
       -> NLME_GetShortAddr             0      0     64
       -> ZDP_EndDeviceBindReq          0      0     64
       -> osal_msg_deallocate           0      0     46
       -> osal_msg_receive              0      0     46
       -> osal_mem_free                 0      0     46
       -> zclUartReceiver               0      0     46
       -> HalLcdWriteChar               0      0     46


   Segment part sizes:

     Function/Label                                  Bytes
     --------------                                  -----
     zclZigbeeReceiver_TaskID                           1
     len                                                1
     TransmitApp_Msg                                  102
     UartTransmit_Msg                                 102
     zclZigbeeRecv_DstAddr                             12
     zclZigbeeRecv_Group                               18
     bindingInClusters                                  4
     zigbeeReceiver_TestEp                              6
     zclZigbeeReceiver_CmdCallbacks                    30
     zclZigbeeRecv_Init                               136
     zclZigbeeRecv_event_loop                         364
     ?Subroutine0                                      22
     zclZigbeeReceiver_ProcessIdentifyTimeChange
                                                       79
     ?Subroutine1                                       7
     zclZigbeeReceiver_BasicResetCB                     3
     zclZigbeeReceiver_IdentifyCB                      28
     zclZigbeeReceiver_IdentifyQueryRspCB
                                                        3
     zclZigbeeReceiver_OnOffCB                         37
     zclUARTMsg_CallBack                               50
     ?Subroutine2                                       5
     zclUartReceiver                                  169
     ?<Initializer for bindingInClusters>               4
     ?<Initializer for zigbeeReceiver_TestEp>           6
     ?<Initializer for zclZigbeeReceiver_CmdCallbac    30
     ??zclZigbeeRecv_Init?relay                         6
     ??zclZigbeeRecv_event_loop?relay                   6
     ??zclZigbeeReceiver_ProcessIdentifyTimeChange?r    6
     ??zclZigbeeReceiver_BasicResetCB?relay             6
     ??zclZigbeeReceiver_IdentifyCB?relay               6
     ??zclZigbeeReceiver_IdentifyQueryRspCB?relay       6
     ??zclZigbeeReceiver_OnOffCB?relay                  6
     ??zclUARTMsg_CallBack?relay                        6
     ??zclUartReceiver?relay                            6
     ?<Constant "RECV_GROUP">                          11

 
 903 bytes in segment BANKED_CODE
  54 bytes in segment BANK_RELAYS
  40 bytes in segment XDATA_I
  40 bytes in segment XDATA_ID
  11 bytes in segment XDATA_ROM_C
 236 bytes in segment XDATA_Z
 
 997 bytes of CODE  memory
  11 bytes of CONST memory
 276 bytes of XDATA memory

Errors: none
Warnings: none
