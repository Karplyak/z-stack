###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                02/Sep/2013  22:55:43 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\Source\zcl_zigbee receiver.c                #
#    Command line       =  -f "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.c #
#                          fg" (-DCPU32MHZ -DROOT=__near_func                 #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f       #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig. #
#                          cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0             #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=TRUE      #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440)   #
#                          -f "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg #
#                          " (-DZCL_READ -DZCL_WRITE -DZCL_BASIC              #
#                          -DZCL_IDENTIFY -DZCL_ON_OFF -DZCL_KEY_ESTABLISH    #
#                          -DZCL_LOAD_CONTROL -DZCL_SIMPLE_METERING           #
#                          -DZCL_PRICING) -DZCL_MESSAGE                       #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\Source\zcl_zigbee receiver.c" -D CC2530 -D  #
#                          ZTOOL_P1 -D MT_TASK -D MT_APP_FUNC -D MT_SYS_FUNC  #
#                          -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -D           #
#                          Coor_receiver -D xHAL_KEYPAD -D xPA2591 -lC        #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\Coordinator_KB_PA\List\" -lA       #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\Coordinator_KB_PA\List\"           #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\Coordinator_KB_PA\Obj\" -e         #
#                          --require_prototypes --debug --core=plain          #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "D:\GitHub\z-stack\Sensor  #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\" -I "D:\GitHub\z-stack\Sensor     #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\SOURCE\" -I                     #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\SOURCE\" -I                  #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I       #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MT\" -I  #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCL #
#                          UDE\" -I "D:\GitHub\z-stack\Sensor Network         #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARG #
#                          ET\CC2530KB\" -I "D:\GitHub\z-stack\Sensor         #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MCU #
#                          \CCSOC\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\INC #
#                          LUDE\" -I "D:\GitHub\z-stack\Sensor Network        #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF #
#                          \" -I "D:\GitHub\z-stack\Sensor Network            #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NW #
#                          K\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SE #
#                          C\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SA #
#                          PI\" -I "D:\GitHub\z-stack\Sensor Network          #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SY #
#                          S\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZC #
#                          L\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZD #
#                          O\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8W #
#                          \" -I "D:\GitHub\z-stack\Sensor Network            #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\"   #
#                          -I "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES #
#                          \SADDR\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES #
#                          \SDATA\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INCL #
#                          UDE\" -I "D:\GitHub\z-stack\Sensor Network         #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIGH #
#                          _LEVEL\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\" -I "D:\GitHub\z-stack\Sensor         #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\SINGLE_CHIP\" -I "C:\Program Files     #
#                          (x86)\IAR Systems\Embedded Workbench               #
#                          5.3\8051\INC\" -I "C:\Program Files (x86)\IAR      #
#                          Systems\Embedded Workbench 5.3\8051\INC\CLIB\"     #
#                          -Ohz                                               #
#    List file          =  D:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\Coordinator_KB_PA\List\zcl_zigbee  #
#                          receiver.lst                                       #
#    Object file        =  D:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\Coordinator_KB_PA\Obj\zcl_zigbee   #
#                          receiver.r51                                       #
#                                                                             #
#                                                                             #
###############################################################################

D:\GitHub\z-stack\Sensor Network Example\Projects\zstack\Sensor Network Application\ZIGBEE Coordinator & Router\Source\zcl_zigbee receiver.c
      1          #include <stdio.h>
      2          #include <string.h>
      3          #include <stdlib.h>
      4          #include "ZComDef.h"
      5          #include "OSAL.h"
      6          #include "AF.h"
      7          #include "ZDApp.h"
      8          
      9          /* ZCL */
     10          #include "zcl.h"
     11          #include "zcl_general.h"
     12          #include "zcl_ha.h"
     13          #include "zcl_zigbee receiver.h"
     14          
     15          /* HAL */
     16          #include "onboard.h"
     17          #include "hal_lcd.h"
     18          #include "hal_led.h"
     19          #include "hal_timer.h"
     20          #include "hal_uart.h"
     21          #include "hal_key.h"
     22          #include "hal_keypad.h"
     23          
     24          /* MAC_high-level */
     25          #include "mac_high_level.h"
     26          
     27          /* MT */
     28          #include "MT_UART.h"
     29          #include "MT.h"
     30          #include "ZComDef.h"
     31          
     32          #define TRANSMITAPP_MAX_DATA_LEN    102
     33          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     34          uint8 send_msg_counter = 0;
   \                     send_msg_counter:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     35          byte zclZigbeeReceiver_TaskID; // The zigbee task_ID
   \                     zclZigbeeReceiver_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     36          byte ZDO_MSG_SEND_ID; // The zigbee task_ID
   \                     ZDO_MSG_SEND_ID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     37          
     38          // The UART transmit variable and array, the transmit data length

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     39          uint8 len; 
   \                     len:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     40          // Transmit message array

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     41          byte TransmitApp_Msg[ TRANSMITAPP_MAX_DATA_LEN ]; 
   \                     TransmitApp_Msg:
   \   000000                DS 102
   \   000066                REQUIRE __INIT_XDATA_Z
     42          // The coordinator send to device message array

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     43          byte UartTransmit_Msg[ TRANSMITAPP_MAX_DATA_LEN ]; 
   \                     UartTransmit_Msg:
   \   000000                DS 102
   \   000066                REQUIRE __INIT_XDATA_Z
     44          // Receive the UART command

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     45          uint8 uart_recv[TRANSMITAPP_MAX_DATA_LEN]; 
   \                     uart_recv:
   \   000000                DS 102
   \   000066                REQUIRE __INIT_XDATA_Z
     46          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     47          afAddrType_t zclZigbeeRecv_DstAddr;  // AF address type
   \                     zclZigbeeRecv_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     48          aps_Group_t zclZigbeeRecv_Group;
   \                     zclZigbeeRecv_Group:
   \   000000                DS 18
   \   000012                REQUIRE __INIT_XDATA_Z
     49          
     50          #define ZCLZIGBEERECV_BINDINGLIST       2
     51          
     52          static cId_t bindingInClusters[ZCLZIGBEERECV_BINDINGLIST] =
     53          {
     54            ZCL_CLUSTER_ID_GEN_ON_OFF,
     55            ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL
     56          };
     57          
     58          // Test Endpoint to allow SYS_APP_MSGs

   \                                 In  segment XDATA_I, align 1, keep-with-next
     59          static endPointDesc_t zigbeeReceiver_TestEp =
   \                     zigbeeReceiver_TestEp:
   \   000000                DS 6
   \   000006                REQUIRE `?<Initializer for zigbeeReceiver_TestEp>`
   \   000006                REQUIRE __INIT_XDATA_I
     60          {
     61            20,                                 // Test endpoint
     62            &zclZigbeeReceiver_TaskID,
     63            (SimpleDescriptionFormat_t *)NULL,  // No Simple description for this test endpoint
     64            (afNetworkLatencyReq_t)0            // No Network Latency req
     65          };
     66          
     67          static void zclZigbeeReceiver_HandleKeys( byte shift, byte keys );
     68          static void zclZigbeeReceiver_BasicResetCB( void );
     69          static void zclZigbeeReceiver_IdentifyCB( zclIdentify_t *pCmd );
     70          static void zclZigbeeReceiver_IdentifyQueryRspCB( zclIdentifyQueryRsp_t *pRsp );
     71          static void zclZigbeeReceiver_OnOffCB( uint8 cmd );
     72          static void zclZigbeeReceiver_ProcessIdentifyTimeChange( void );
     73          
     74          void zclUARTMsg_CallBack(uint8 port, uint8 event); // The UART Message callback
     75          void zclUartReceiver( void ); // The coordinator receive command function
     76          
     77          // Functions to process ZCL Foundation incoming Command/Response messages 
     78          static void zclZigbeeReceiver_ProcessIncomingMsg( zclIncomingMsg_t *msg );
     79          #ifdef ZCL_READ
     80            static uint8 zclZigbeeReceiver_ProcessInReadRspCmd( zclIncomingMsg_t *pInMsg );
     81          #endif
     82          #ifdef ZCL_WRITE
     83            static uint8 zclZigbeeReceiver_ProcessInWriteRspCmd( zclIncomingMsg_t *pInMsg );
     84          #endif
     85            static uint8 zclZigbeeReceiver_ProcessInDefaultRspCmd( zclIncomingMsg_t *pInMsg );
     86          #ifdef ZCL_DISCOVER
     87            static uint8 zclZigbeeReceiver_ProcessInDiscRspCmd( zclIncomingMsg_t *pInMsg );
     88          #endif
     89          

   \                                 In  segment XDATA_I, align 1, keep-with-next
     90          static zclGeneral_AppCallbacks_t zclZigbeeReceiver_CmdCallbacks =
   \                     zclZigbeeReceiver_CmdCallbacks:
   \   000000                DS 30
   \   00001E                REQUIRE `?<Initializer for zclZigbeeReceiver_CmdCallbac`
   \   00001E                REQUIRE __INIT_XDATA_I
     91          {
     92            zclZigbeeReceiver_BasicResetCB,              // Basic Cluster Reset command
     93            zclZigbeeReceiver_IdentifyCB,                // Identify command  
     94            zclZigbeeReceiver_IdentifyQueryRspCB,        // Identify Query Response command
     95            zclZigbeeReceiver_OnOffCB,                   // On/Off cluster command
     96            NULL,                                        // Level Control Move to Level command
     97            NULL,                                        // Level Control Move command
     98            NULL,                                        // Level Control Step command
     99            NULL,                                        // Group Response commands
    100            NULL,                                        // Scene Store Request command
    101            NULL,                                        // Scene Recall Request command
    102            NULL,                                        // Scene Response command
    103            NULL,                                        // Alarm (Response) command
    104            NULL,                                        // RSSI Location commands
    105            NULL,                                        // RSSI Location Response commands
    106          };
    107          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    108          void ZSendMsgProcess(void)
   \                     ZSendMsgProcess:
    109          {      
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    110              // Write receive coordinator command to UART
    111          //    HalUARTWrite(MT_UART_DEFAULORT, device_manager.DataT_P, device_manager.DataLength-2);  
    112          //    HalUARTWrite(MT_UART_DEFAULT_PORT, "\r\n", 3);
    113              HalUARTWrite(MT_UART_DEFAULT_PORT, "3", 1);//Cmd Type
   \   000005                ; Setup parameters for call to function HalUARTWrite
   \   000005   7C01         MOV     R4,#0x1
   \   000007   7D00         MOV     R5,#0x0
   \   000009   7A..         MOV     R2,#(`?<Constant "3">` & 0xff)
   \   00000B   7B..         MOV     R3,#((`?<Constant "3">` >> 8) & 0xff)
   \   00000D   12....       LCALL   ?Subroutine1 & 0xFFFF
    114              HalUARTWrite(MT_UART_DEFAULT_PORT, ",", 1);//Comma   
    115              HalUARTWrite(MT_UART_DEFAULT_PORT, global_entry, 4);//Device ID
                                                        ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??CrossCallReturnLabel_2:
   \   000010                ; Setup parameters for call to function HalUARTWrite
   \   000010   7C04         MOV     R4,#0x4
   \   000012   7D00         MOV     R5,#0x0
   \   000014   7A..         MOV     R2,#(global_entry & 0xff)
   \   000016   7B..         MOV     R3,#((global_entry >> 8) & 0xff)
   \   000018   12....       LCALL   ?Subroutine1 & 0xFFFF
    116              HalUARTWrite(MT_UART_DEFAULT_PORT, ",", 1);//Comma
    117              HalUARTWrite(MT_UART_DEFAULT_PORT, global_recv_data, global_data_length);//Device Data
   \                     ??CrossCallReturnLabel_3:
   \   00001B                ; Setup parameters for call to function HalUARTWrite
   \   00001B   90....       MOV     DPTR,#global_data_length
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   FC           MOV     R4,A
   \   000020   7D00         MOV     R5,#0x0
   \   000022   7A..         MOV     R2,#(global_recv_data & 0xff)
   \   000024   7B..         MOV     R3,#((global_recv_data >> 8) & 0xff)
   \   000026   7900         MOV     R1,#0x0
   \   000028   12....       LCALL   ??HalUARTWrite?relay
    118              HalUARTWrite(MT_UART_DEFAULT_PORT, "$\r\n", 3);//$\n  
   \   00002B                ; Setup parameters for call to function HalUARTWrite
   \   00002B   7C03         MOV     R4,#0x3
   \   00002D   7D00         MOV     R5,#0x0
   \   00002F   7A..         MOV     R2,#(`?<Constant "$\\r\\n">` & 0xff)
   \   000031   7B..         MOV     R3,#((`?<Constant "$\\r\\n">` >> 8) & 0xff)
   \   000033   7900         MOV     R1,#0x0
   \   000035   12....       LCALL   ??HalUARTWrite?relay
    119          
    120              osal_start_timerEx( zclZigbeeReceiver_TaskID, ZDO_MSG_SEND_EVT, 3000 );        
   \   000038                ; Setup parameters for call to function osal_start_timerEx
   \   000038   7CB8         MOV     R4,#-0x48
   \   00003A   7D0B         MOV     R5,#0xb
   \   00003C   7A00         MOV     R2,#0x0
   \   00003E   7B08         MOV     R3,#0x8
   \   000040   90....       MOV     DPTR,#zclZigbeeReceiver_TaskID
   \   000043   E0           MOVX    A,@DPTR
   \   000044   F9           MOV     R1,A
   \   000045   12....       LCALL   ??osal_start_timerEx?relay
    121          }
   \   000048   7F01         MOV     R7,#0x1
   \   00004A   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7900         MOV     R1,#0x0
   \   000002   12....       LCALL   ??HalUARTWrite?relay
   \   000005                ; Setup parameters for call to function HalUARTWrite
   \   000005                ; Setup parameters for call to function HalUARTWrite
   \   000005   7C01         MOV     R4,#0x1
   \   000007   7D00         MOV     R5,#0x0
   \   000009   7A..         MOV     R2,#(`?<Constant ",">` & 0xff)
   \   00000B   7B..         MOV     R3,#((`?<Constant ",">` >> 8) & 0xff)
   \   00000D   7900         MOV     R1,#0x0
   \   00000F   12....       LCALL   ??HalUARTWrite?relay
   \   000012   22           RET
    122          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    123          void zclZigbeeRecv_Init( byte task_id )
   \                     zclZigbeeRecv_Init:
    124          {
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
    125            zclZigbeeReceiver_TaskID = task_id;
   \   000005   E9           MOV     A,R1
   \   000006   90....       MOV     DPTR,#zclZigbeeReceiver_TaskID
   \   000009   F0           MOVX    @DPTR,A
    126            
    127            // Setup for the flash command's destination address ( Group )
    128            zclZigbeeRecv_DstAddr.addrMode = (afAddrMode_t)afAddrGroup;  // transmit mode - Group address
   \   00000A   7401         MOV     A,#0x1
   \   00000C   90....       MOV     DPTR,#(zclZigbeeRecv_DstAddr + 8)
   \   00000F   F0           MOVX    @DPTR,A
    129            zclZigbeeRecv_DstAddr.endPoint = ZIGBEERECV_ENDPOINT;        // end-point number:20
   \   000010   740D         MOV     A,#0xd
   \   000012   90....       MOV     DPTR,#(zclZigbeeRecv_DstAddr + 9)
   \   000015   F0           MOVX    @DPTR,A
    130            zclZigbeeRecv_DstAddr.addr.shortAddr = RECV_GROUP;           // Group short address
   \   000016   90....       MOV     DPTR,#zclZigbeeRecv_DstAddr
   \   000019   7410         MOV     A,#0x10
   \   00001B   F0           MOVX    @DPTR,A
   \   00001C   A3           INC     DPTR
   \   00001D   7420         MOV     A,#0x20
   \   00001F   F0           MOVX    @DPTR,A
    131            
    132            // This App is part of the Zigbee Device Profile
    133            zclZD_Init( &zclZigbeeRecv_SimpleDesc ); 
   \   000020                ; Setup parameters for call to function zclZD_Init
   \   000020   7A..         MOV     R2,#(zclZigbeeRecv_SimpleDesc & 0xff)
   \   000022   7B..         MOV     R3,#((zclZigbeeRecv_SimpleDesc >> 8) & 0xff)
   \   000024   12....       LCALL   ??zclZD_Init?relay
    134            
    135            // Register the ZCL General Cluster Library callback functions
    136            zclGeneral_RegisterCmdCallbacks( ZIGBEERECV_ENDPOINT, &zclZigbeeReceiver_CmdCallbacks ); 
   \   000027                ; Setup parameters for call to function zclGeneral_RegisterCmdCallbacks
   \   000027   7A..         MOV     R2,#(zclZigbeeReceiver_CmdCallbacks & 0xff)
   \   000029   7B..         MOV     R3,#((zclZigbeeReceiver_CmdCallbacks >> 8) & 0xff)
   \   00002B   790D         MOV     R1,#0xd
   \   00002D   12....       LCALL   ??zclGeneral_RegisterCmdCallbacks?relay
    137            
    138            // Register the application's attribute list
    139            zcl_registerAttrList( ZIGBEERECV_ENDPOINT, ZIGBEERECV_MAX_ATTRIBUTES, zclZigbeeRecv_Attrs ); 
   \   000030                ; Setup parameters for call to function zcl_registerAttrList
   \   000030   7C..         MOV     R4,#(zclZigbeeRecv_Attrs & 0xff)
   \   000032   7D..         MOV     R5,#((zclZigbeeRecv_Attrs >> 8) & 0xff)
   \   000034   7A0C         MOV     R2,#0xc
   \   000036   790D         MOV     R1,#0xd
   \   000038   12....       LCALL   ??zcl_registerAttrList?relay
    140            
    141            // Register the Application to receive the unprocessed Foundation command/response messages
    142            zcl_registerForMsg( zclZigbeeReceiver_TaskID ); 
   \   00003B                ; Setup parameters for call to function zcl_registerForMsg
   \   00003B   90....       MOV     DPTR,#zclZigbeeReceiver_TaskID
   \   00003E   E0           MOVX    A,@DPTR
   \   00003F   F9           MOV     R1,A
   \   000040   12....       LCALL   ??zcl_registerForMsg?relay
    143            
    144            // Register for all key events - This app will handle all key events
    145            RegisterForKeys( zclZigbeeReceiver_TaskID ); 
   \   000043                ; Setup parameters for call to function RegisterForKeys
   \   000043   90....       MOV     DPTR,#zclZigbeeReceiver_TaskID
   \   000046   E0           MOVX    A,@DPTR
   \   000047   F9           MOV     R1,A
   \   000048   12....       LCALL   ??RegisterForKeys?relay
    146            
    147            // By default, all devices start out in Group 1 ( register grouop )
    148            zclZigbeeRecv_Group.ID = RECV_GROUP;
   \   00004B   90....       MOV     DPTR,#zclZigbeeRecv_Group
   \   00004E   7410         MOV     A,#0x10
   \   000050   F0           MOVX    @DPTR,A
   \   000051   A3           INC     DPTR
   \   000052   7420         MOV     A,#0x20
   \   000054   F0           MOVX    @DPTR,A
    149            osal_memcpy( zclZigbeeRecv_Group.name, "RECV_GROUP", 8  );
   \   000055                ; Setup parameters for call to function osal_memcpy
   \   000055   75....       MOV     ?V0 + 0,#(`?<Constant "RECV_GROUP">` & 0xff)
   \   000058   75....       MOV     ?V0 + 1,#((`?<Constant "RECV_GROUP">` >> 8) & 0xff)
   \   00005B   75..00       MOV     ?V0 + 2,#0x0
   \   00005E   78..         MOV     R0,#?V0 + 0
   \   000060   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000063   7C08         MOV     R4,#0x8
   \   000065   7D00         MOV     R5,#0x0
   \   000067   7A..         MOV     R2,#((zclZigbeeRecv_Group + 2) & 0xff)
   \   000069   7B..         MOV     R3,#(((zclZigbeeRecv_Group + 2) >> 8) & 0xff)
   \   00006B   12....       LCALL   ??osal_memcpy?relay
   \   00006E   7403         MOV     A,#0x3
   \   000070   12....       LCALL   ?DEALLOC_XSTACK8
    150            aps_AddGroup( ZIGBEERECV_ENDPOINT, &zclZigbeeRecv_Group ); 
   \   000073                ; Setup parameters for call to function aps_AddGroup
   \   000073   7A..         MOV     R2,#(zclZigbeeRecv_Group & 0xff)
   \   000075   7B..         MOV     R3,#((zclZigbeeRecv_Group >> 8) & 0xff)
   \   000077   790D         MOV     R1,#0xd
   \   000079   12....       LCALL   ??aps_AddGroup?relay
    151            
    152            // Register for a test endpoint
    153            afRegister( &zigbeeReceiver_TestEp ); 
   \   00007C                ; Setup parameters for call to function afRegister
   \   00007C   7A..         MOV     R2,#(zigbeeReceiver_TestEp & 0xff)
   \   00007E   7B..         MOV     R3,#((zigbeeReceiver_TestEp >> 8) & 0xff)
   \   000080   12....       LCALL   ??afRegister?relay
    154           
    155            // Set osal event for zclZigbeeReceiver_TaskID, chris
    156            osal_set_event( zclZigbeeReceiver_TaskID, NWK_RETRY_DELAY);  
   \   000083                ; Setup parameters for call to function osal_set_event
   \   000083   7AE8         MOV     R2,#-0x18
   \   000085   7B03         MOV     R3,#0x3
   \   000087   90....       MOV     DPTR,#zclZigbeeReceiver_TaskID
   \   00008A   E0           MOVX    A,@DPTR
   \   00008B   F9           MOV     R1,A
   \   00008C   12....       LCALL   ??osal_set_event?relay
    157          }
   \   00008F   7F03         MOV     R7,#0x3
   \   000091   02....       LJMP    ?BANKED_LEAVE_XDATA
    158          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    159          uint16 zclZigbeeRecv_event_loop( uint8 task_id, uint16 events )
   \                     zclZigbeeRecv_event_loop:
    160          {   
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
    161              afIncomingMSGPacket_t *MSGpkt;
    162              (void)task_id;  // Intentionally unreferenced parameter
    163            
    164              if ( events & SYS_EVENT_MSG ) // SYSTEM Message event
   \   000009   7480         MOV     A,#-0x80
   \   00000B   55..         ANL     A,?V0 + 1
   \   00000D   F9           MOV     R1,A
   \   00000E   E4           CLR     A
   \   00000F   7001         JNZ     ??zclZigbeeRecv_event_loop_0
   \   000011   E9           MOV     A,R1
   \                     ??zclZigbeeRecv_event_loop_0:
   \   000012   7027         JNZ     ??zclZigbeeRecv_event_loop_1
    165              {
    166                while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( zclZigbeeReceiver_TaskID )) )
    167                {   
    168                  switch ( MSGpkt->hdr.event )
    169                  {       
    170                  case ZCL_INCOMING_MSG: //0x34 : Incoming ZCL foundation message
    171                      // Incoming ZCL Foundation command/response messages
    172                      zclZigbeeReceiver_ProcessIncomingMsg( (zclIncomingMsg_t *)MSGpkt ); 
    173                      break;          
    174                  case AF_DATA_CONFIRM_CMD:   
    175                      break;         
    176                  case ZDO_STATE_CHANGE:       
    177                      ZSendMsgProcess();            
    178                      break;                 
    179                  default:
    180                      break;
    181                  }
    182                  osal_msg_deallocate( (uint8 *)MSGpkt ); // Release the memory
    183                }
    184                return (events ^ SYS_EVENT_MSG); // return unprocessed events
    185              }
    186            
    187              // The user define application events
    188              switch ( events )
   \   000014   78..         MOV     R0,#?V0 + 0
   \   000016   12....       LCALL   ?US_SWITCH_SPARSE
   \                     `?<Jumptable for zclZigbeeRecv_event_loop>_0`:
   \   000019   0000         DW        0
   \   00001B   0300         DW        3
   \   00001D   0100         DW        1
   \   00001F   ....         DW        ??zclZigbeeRecv_event_loop_2
   \   000021   0200         DW        2
   \   000023   ....         DW        ??zclZigbeeRecv_event_loop_3
   \   000025   0008         DW        2048
   \   000027   ....         DW        ??zclZigbeeRecv_event_loop_4
   \   000029   ....         DW        ??zclZigbeeRecv_event_loop_5
    189              {
    190                case ZDO_MSG_SEND_EVT:
    191                      ZSendMsgProcess();                
   \                     ??zclZigbeeRecv_event_loop_4:
   \   00002B                ; Setup parameters for call to function ZSendMsgProcess
   \   00002B   12....       LCALL   ??ZSendMsgProcess?relay
   \   00002E   02....       LJMP    ??zclZigbeeRecv_event_loop_5 & 0xFFFF
   \                     ??zclZigbeeRecv_event_loop_6:
   \   000031                ; Setup parameters for call to function ZSendMsgProcess
   \   000031   12....       LCALL   ??ZSendMsgProcess?relay
   \                     ??zclZigbeeRecv_event_loop_7:
   \   000034                ; Setup parameters for call to function osal_msg_deallocate
   \   000034   EE           MOV     A,R6
   \   000035   FA           MOV     R2,A
   \   000036   EF           MOV     A,R7
   \   000037   FB           MOV     R3,A
   \   000038   12....       LCALL   ??osal_msg_deallocate?relay
   \                     ??zclZigbeeRecv_event_loop_1:
   \   00003B                ; Setup parameters for call to function osal_msg_receive
   \   00003B   90....       MOV     DPTR,#zclZigbeeReceiver_TaskID
   \   00003E   E0           MOVX    A,@DPTR
   \   00003F   F9           MOV     R1,A
   \   000040   12....       LCALL   ??osal_msg_receive?relay
   \   000043   8A..         MOV     ?V0 + 2,R2
   \   000045   8B..         MOV     ?V0 + 3,R3
   \   000047   AE..         MOV     R6,?V0 + 2
   \   000049   AF..         MOV     R7,?V0 + 3
   \   00004B   EE           MOV     A,R6
   \   00004C   7001         JNZ     ??zclZigbeeRecv_event_loop_8
   \   00004E   EF           MOV     A,R7
   \                     ??zclZigbeeRecv_event_loop_8:
   \   00004F   6057         JZ      ??zclZigbeeRecv_event_loop_9
   \   000051   8E82         MOV     DPL,R6
   \   000053   8F83         MOV     DPH,R7
   \   000055   E0           MOVX    A,@DPTR
   \   000056   12....       LCALL   ?UC_SWITCH_SPARSE
   \                     `?<Jumptable for zclZigbeeRecv_event_loop>_1`:
   \   000059   00           DB        0
   \   00005A   02           DB        2
   \   00005B   34           DB        52
   \   00005C   ....         DW        ??zclZigbeeRecv_event_loop_10
   \   00005E   D1           DB        209
   \   00005F   ....         DW        ??zclZigbeeRecv_event_loop_6
   \   000061   ....         DW        ??zclZigbeeRecv_event_loop_7
   \                     ??zclZigbeeRecv_event_loop_10:
   \   000063   8E82         MOV     DPL,R6
   \   000065   8F83         MOV     DPH,R7
   \   000067   A3           INC     DPTR
   \   000068   A3           INC     DPTR
   \   000069   A3           INC     DPTR
   \   00006A   A3           INC     DPTR
   \   00006B   A3           INC     DPTR
   \   00006C   A3           INC     DPTR
   \   00006D   A3           INC     DPTR
   \   00006E   E0           MOVX    A,@DPTR
   \   00006F   12....       LCALL   ?UC_SWITCH_SPARSE
   \                     `?<Jumptable for zclZigbeeRecv_event_loop>_2`:
   \   000072   00           DB        0
   \   000073   02           DB        2
   \   000074   01           DB        1
   \   000075   ....         DW        ??zclZigbeeRecv_event_loop_11
   \   000077   04           DB        4
   \   000078   ....         DW        ??zclZigbeeRecv_event_loop_12
   \   00007A   ....         DW        ??zclZigbeeRecv_event_loop_13
   \                     ??zclZigbeeRecv_event_loop_11:
   \   00007C   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   00007F   E0           MOVX    A,@DPTR
   \   000080   FA           MOV     R2,A
   \   000081   EB           MOV     A,R3
   \   000082   C3           CLR     C
   \   000083   9A           SUBB    A,R2
   \   000084   5010         JNC     ??zclZigbeeRecv_event_loop_13
   \   000086   0B           INC     R3
   \   000087   80F6         SJMP    ??CrossCallReturnLabel_0
   \                     ??zclZigbeeRecv_event_loop_12:
   \   000089   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   00008C   8001         SJMP    ??zclZigbeeRecv_event_loop_14
   \                     ??zclZigbeeRecv_event_loop_15:
   \   00008E   0B           INC     R3
   \                     ??zclZigbeeRecv_event_loop_14:
   \   00008F   E0           MOVX    A,@DPTR
   \   000090   FA           MOV     R2,A
   \   000091   EB           MOV     A,R3
   \   000092   C3           CLR     C
   \   000093   9A           SUBB    A,R2
   \   000094   40F8         JC      ??zclZigbeeRecv_event_loop_15
   \                     ??zclZigbeeRecv_event_loop_13:
   \   000096   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_4:
   \   000099   FA           MOV     R2,A
   \   00009A   A3           INC     DPTR
   \   00009B   E0           MOVX    A,@DPTR
   \   00009C   FB           MOV     R3,A
   \   00009D   EA           MOV     A,R2
   \   00009E   7001         JNZ     ??zclZigbeeRecv_event_loop_16
   \   0000A0   EB           MOV     A,R3
   \                     ??zclZigbeeRecv_event_loop_16:
   \   0000A1   6091         JZ      ??zclZigbeeRecv_event_loop_7
   \   0000A3                ; Setup parameters for call to function osal_mem_free
   \   0000A3   12....       LCALL   ??osal_mem_free?relay
   \   0000A6   808C         SJMP    ??zclZigbeeRecv_event_loop_7
   \                     ??zclZigbeeRecv_event_loop_9:
   \   0000A8   AA..         MOV     R2,?V0 + 0
   \   0000AA   7480         MOV     A,#-0x80
   \   0000AC   65..         XRL     A,?V0 + 1
   \   0000AE   FB           MOV     R3,A
   \   0000AF   8022         SJMP    ??zclZigbeeRecv_event_loop_17
    192                      break;
    193                case SAMPLELIGHT_IDENTIFY_TIMEOUT_EVT: // ZIGBEE Receiver identify timeout event
    194                  if ( zclZigbeeRecv_IdentifyTime > 0 )
   \                     ??zclZigbeeRecv_event_loop_2:
   \   0000B1   90....       MOV     DPTR,#zclZigbeeRecv_IdentifyTime
   \   0000B4   E0           MOVX    A,@DPTR
   \   0000B5   7002         JNZ     ??zclZigbeeRecv_event_loop_18
   \   0000B7   A3           INC     DPTR
   \   0000B8   E0           MOVX    A,@DPTR
   \                     ??zclZigbeeRecv_event_loop_18:
   \   0000B9   600C         JZ      ??zclZigbeeRecv_event_loop_19
    195                       zclZigbeeRecv_IdentifyTime--;
   \   0000BB   90....       MOV     DPTR,#zclZigbeeRecv_IdentifyTime
   \   0000BE   E0           MOVX    A,@DPTR
   \   0000BF   24FF         ADD     A,#-0x1
   \   0000C1   F0           MOVX    @DPTR,A
   \   0000C2   A3           INC     DPTR
   \   0000C3   E0           MOVX    A,@DPTR
   \   0000C4   34FF         ADDC    A,#-0x1
   \   0000C6   F0           MOVX    @DPTR,A
    196                       zclZigbeeReceiver_ProcessIdentifyTimeChange();
   \                     ??zclZigbeeRecv_event_loop_19:
   \   0000C7                ; Setup parameters for call to function zclZigbeeReceiver_ProcessIdentifyTimeChange
   \   0000C7   12....       LCALL   ??zclZigbeeReceiver_ProcessIdentifyTimeChange?r
   \   0000CA   8003         SJMP    ??zclZigbeeRecv_event_loop_5
    197                  break;   
    198                case UART_MSG_EVT: // The UART Message event
    199                  //Chris Msg incoming
    200                  zclUartReceiver();
   \                     ??zclZigbeeRecv_event_loop_3:
   \   0000CC                ; Setup parameters for call to function zclUartReceiver
   \   0000CC   12....       LCALL   ??zclUartReceiver?relay
    201                  break;
    202              }    
    203              return 0; // Discard unknown events
   \                     ??zclZigbeeRecv_event_loop_5:
   \   0000CF   7A00         MOV     R2,#0x0
   \   0000D1   7B00         MOV     R3,#0x0
   \                     ??zclZigbeeRecv_event_loop_17:
   \   0000D3   7F04         MOV     R7,#0x4
   \   0000D5   02....       LJMP    ?BANKED_LEAVE_XDATA
    204          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_5:
   \   000003   F8           MOV     R0,A
   \   000004   A3           INC     DPTR
   \   000005   E0           MOVX    A,@DPTR
   \   000006   F9           MOV     R1,A
   \   000007   8882         MOV     DPL,R0
   \   000009   8983         MOV     DPH,R1
   \   00000B   7B00         MOV     R3,#0x0
   \   00000D   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   EE           MOV     A,R6
   \   000001   2416         ADD     A,#0x16
   \   000003   F582         MOV     DPL,A
   \   000005   EF           MOV     A,R7
   \   000006   3400         ADDC    A,#0x0
   \   000008   F583         MOV     DPH,A
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   22           RET
    205          
    206          static void zclZigbeeReceiver_HandleKeys( byte shift, byte keys )
                             ^
Warning[Pe177]: function "zclZigbeeReceiver_HandleKeys" was declared but never
          referenced
    207          {
    208            zAddrType_t dstAddr;
    209            (void)shift; // Intentionally unreferenced parameter
    210            
    211          #if defined(Coor_receiver) || defined (Router_receiver)
    212          
    213            if ( keys & HAL_KEY_SW1 ) // Init EndDevice bind reequest, and use cluster list important to binding.
    214            {
    215              dstAddr.addrMode = afAddr16Bit;
    216              dstAddr.addr.shortAddr = 0x0000;   // Coordinator makes the match
    217              ZDP_EndDeviceBindReq( &dstAddr, NLME_GetShortAddr(), ZIGBEERECV_ENDPOINT, // ZIGBEERECV_ENDPOINT = 13 is coordinator
    218                                    ZCL_HA_PROFILE_ID, ZCLZIGBEERECV_BINDINGLIST, bindingInClusters, 0,
    219                                    NULL, // No Outgoing clusters to bind
    220                                    TRUE );
    221            }
    222          #endif
    223          }
    224          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    225          static void zclZigbeeReceiver_ProcessIdentifyTimeChange( void )
   \                     zclZigbeeReceiver_ProcessIdentifyTimeChange:
    226          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    227            if ( zclZigbeeRecv_IdentifyTime > 0 )
   \   000004   90....       MOV     DPTR,#zclZigbeeRecv_IdentifyTime
   \   000007   E0           MOVX    A,@DPTR
   \   000008   7002         JNZ     ??zclZigbeeReceiver_ProcessIdentifyTimeChange_0
   \   00000A   A3           INC     DPTR
   \   00000B   E0           MOVX    A,@DPTR
   \                     ??zclZigbeeReceiver_ProcessIdentifyTimeChange_0:
   \   00000C   601F         JZ      ??zclZigbeeReceiver_ProcessIdentifyTimeChange_1
    228            {
    229              osal_start_timerEx( zclZigbeeReceiver_TaskID, SAMPLELIGHT_IDENTIFY_TIMEOUT_EVT, 1000 );
   \   00000E                ; Setup parameters for call to function osal_start_timerEx
   \   00000E   7CE8         MOV     R4,#-0x18
   \   000010   7D03         MOV     R5,#0x3
   \   000012   7A01         MOV     R2,#0x1
   \   000014   7B00         MOV     R3,#0x0
   \   000016   90....       MOV     DPTR,#zclZigbeeReceiver_TaskID
   \   000019   E0           MOVX    A,@DPTR
   \   00001A   F9           MOV     R1,A
   \   00001B   12....       LCALL   ??osal_start_timerEx?relay
    230              HalLedBlink ( HAL_LED_2, 0xFF, HAL_LED_DEFAULT_DUTY_CYCLE, HAL_LED_DEFAULT_FLASH_TIME );
   \   00001E                ; Setup parameters for call to function HalLedBlink
   \   00001E   7CE8         MOV     R4,#-0x18
   \   000020   7D03         MOV     R5,#0x3
   \   000022   7B05         MOV     R3,#0x5
   \   000024   7AFF         MOV     R2,#-0x1
   \   000026   7902         MOV     R1,#0x2
   \   000028   12....       LCALL   ??HalLedBlink?relay
   \   00002B   8022         SJMP    ??zclZigbeeReceiver_ProcessIdentifyTimeChange_2
    231            }
    232            else
    233              {
    234                if ( zclZigbeeRecv_OnOff )
   \                     ??zclZigbeeReceiver_ProcessIdentifyTimeChange_1:
   \   00002D   90....       MOV     DPTR,#zclZigbeeRecv_OnOff
   \   000030   E0           MOVX    A,@DPTR
   \   000031   6009         JZ      ??zclZigbeeReceiver_ProcessIdentifyTimeChange_3
    235                {
    236                  HalLedSet ( HAL_LED_1, HAL_LED_MODE_ON );
   \   000033                ; Setup parameters for call to function HalLedSet
   \   000033   7A01         MOV     R2,#0x1
   \   000035   7901         MOV     R1,#0x1
   \   000037   12....       LCALL   ??HalLedSet?relay
   \   00003A   8013         SJMP    ??zclZigbeeReceiver_ProcessIdentifyTimeChange_2
    237                }
    238                else
    239                  {
    240                    HalLedSet ( HAL_LED_1, HAL_LED_MODE_OFF );
   \                     ??zclZigbeeReceiver_ProcessIdentifyTimeChange_3:
   \   00003C                ; Setup parameters for call to function HalLedSet
   \   00003C   7A00         MOV     R2,#0x0
   \   00003E   7901         MOV     R1,#0x1
   \   000040   12....       LCALL   ??HalLedSet?relay
    241                    osal_stop_timerEx( zclZigbeeReceiver_TaskID, SAMPLELIGHT_IDENTIFY_TIMEOUT_EVT );
   \   000043                ; Setup parameters for call to function osal_stop_timerEx
   \   000043   7A01         MOV     R2,#0x1
   \   000045   7B00         MOV     R3,#0x0
   \   000047   90....       MOV     DPTR,#zclZigbeeReceiver_TaskID
   \   00004A   E0           MOVX    A,@DPTR
   \   00004B   F9           MOV     R1,A
   \   00004C   12....       LCALL   ??osal_stop_timerEx?relay
    242                  }
    243              }
    244          }
   \                     ??zclZigbeeReceiver_ProcessIdentifyTimeChange_2:
   \   00004F                REQUIRE ?Subroutine3
   \   00004F                ; // Fall through to label ?Subroutine3

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
    245          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    246          static void zclZigbeeReceiver_BasicResetCB( void )
   \                     zclZigbeeReceiver_BasicResetCB:
    247          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    248            // Reset all attributes to default values
    249          }
   \   000000   02....       LJMP    ?BRET
    250          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    251          static void zclZigbeeReceiver_IdentifyCB( zclIdentify_t *pCmd )
   \                     zclZigbeeReceiver_IdentifyCB:
    252          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    253            zclZigbeeRecv_IdentifyTime = pCmd->identifyTime;
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   F8           MOV     R0,A
   \   00000C   A3           INC     DPTR
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   F9           MOV     R1,A
   \   00000F   90....       MOV     DPTR,#zclZigbeeRecv_IdentifyTime
   \   000012   E8           MOV     A,R0
   \   000013   F0           MOVX    @DPTR,A
   \   000014   A3           INC     DPTR
   \   000015   E9           MOV     A,R1
   \   000016   F0           MOVX    @DPTR,A
    254            zclZigbeeReceiver_ProcessIdentifyTimeChange();
   \   000017                ; Setup parameters for call to function zclZigbeeReceiver_ProcessIdentifyTimeChange
   \   000017   12....       LCALL   ??zclZigbeeReceiver_ProcessIdentifyTimeChange?r
    255          }
   \   00001A   80..         SJMP    ?Subroutine3
    256          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    257          static void zclZigbeeReceiver_IdentifyQueryRspCB( zclIdentifyQueryRsp_t *pRsp )
   \                     zclZigbeeReceiver_IdentifyQueryRspCB:
    258          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    259            (void)pRsp; // Query Response (with timeout value)
    260          }
   \   000000   02....       LJMP    ?BRET
    261          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    262          static void zclZigbeeReceiver_OnOffCB( uint8 cmd )
   \                     zclZigbeeReceiver_OnOffCB:
    263          { 
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    264            if ( cmd == COMMAND_ON ) // Turn on the light
   \   000004   7401         MOV     A,#0x1
   \   000006   69           XRL     A,R1
   \   000007   700E         JNZ     ??zclZigbeeReceiver_OnOffCB_0
    265              zclZigbeeRecv_OnOff = LIGHT_ON;
   \                     ??zclZigbeeReceiver_OnOffCB_1:
   \   000009   7401         MOV     A,#0x1
   \                     ??zclZigbeeReceiver_OnOffCB_2:
   \   00000B   90....       MOV     DPTR,#zclZigbeeRecv_OnOff
   \   00000E   F0           MOVX    @DPTR,A
    266          
    267            else if ( cmd == COMMAND_OFF ) // Turn off the light
    268              zclZigbeeRecv_OnOff = LIGHT_OFF;
    269          
    270            else // Toggle the light
    271            {
    272              if ( zclZigbeeRecv_OnOff == LIGHT_OFF )
    273                    zclZigbeeRecv_OnOff = LIGHT_ON;
    274              else
    275                    zclZigbeeRecv_OnOff = LIGHT_OFF;
    276            }
    277          
    278            // In this sample app, we use LED4 to simulate the Light  
    279            if ( zclZigbeeRecv_OnOff == LIGHT_ON )
    280            {
    281              HalLedSet( HAL_LED_2, HAL_LED_MODE_ON ); // setting the LED_1 on
   \   00000F                ; Setup parameters for call to function HalLedSet
   \   00000F   FA           MOV     R2,A
   \   000010   7902         MOV     R1,#0x2
   \   000012   12....       LCALL   ??HalLedSet?relay
    282            }
    283            else
    284              HalLedSet( HAL_LED_2, HAL_LED_MODE_OFF ); // setting the LED_1 off
    285          }
   \   000015   80..         SJMP    ?Subroutine3
   \                     ??zclZigbeeReceiver_OnOffCB_0:
   \   000017   E9           MOV     A,R1
   \   000018   7003         JNZ     ??zclZigbeeReceiver_OnOffCB_3
   \                     ??zclZigbeeReceiver_OnOffCB_4:
   \   00001A   E4           CLR     A
   \   00001B   80EE         SJMP    ??zclZigbeeReceiver_OnOffCB_2
   \                     ??zclZigbeeReceiver_OnOffCB_3:
   \   00001D   90....       MOV     DPTR,#zclZigbeeRecv_OnOff
   \   000020   E0           MOVX    A,@DPTR
   \   000021   70F7         JNZ     ??zclZigbeeReceiver_OnOffCB_4
   \   000023   80E4         SJMP    ??zclZigbeeReceiver_OnOffCB_1
    286          
    287          static void zclZigbeeReceiver_ProcessIncomingMsg( zclIncomingMsg_t *pInMsg)
    288          {
    289            switch ( pInMsg->zclHdr.commandID )
    290            {
    291          #ifdef ZCL_READ
    292              case ZCL_CMD_READ_RSP:
    293                zclZigbeeReceiver_ProcessInReadRspCmd( pInMsg );
    294                break;
    295          #endif
    296                
    297          #ifdef ZCL_WRITE    
    298              case ZCL_CMD_WRITE_RSP:
    299                zclZigbeeReceiver_ProcessInWriteRspCmd( pInMsg );
    300                break;
    301          #endif
    302                
    303          #ifdef ZCL_REPORT
    304              case ZCL_CMD_CONFIG_REPORT: // See ZCL Test Applicaiton (zcl_testapp.c) for sample code on Attribute Reporting
    305                break;
    306              case ZCL_CMD_CONFIG_REPORT_RSP:
    307                break;
    308              case ZCL_CMD_READ_REPORT_CFG:
    309                break;
    310              case ZCL_CMD_READ_REPORT_CFG_RSP:
    311                break;
    312              case ZCL_CMD_REPORT:
    313                break;
    314          #endif   
    315              case ZCL_CMD_DEFAULT_RSP:
    316                zclZigbeeReceiver_ProcessInDefaultRspCmd( pInMsg );
    317                break;
    318          #ifdef ZCL_DISCOVER     
    319              case ZCL_CMD_DISCOVER_RSP:
    320                zclZigbeeReceiver_ProcessInDiscRspCmd( pInMsg );
    321                break;
    322          #endif
    323                
    324              default:
    325                break;
    326            }
    327            if ( pInMsg->attrCmd )
    328              osal_mem_free( pInMsg->attrCmd );
    329          }
    330          
    331          #ifdef ZCL_READ
    332          
    333          static uint8 zclZigbeeReceiver_ProcessInReadRspCmd( zclIncomingMsg_t *pInMsg )
    334          {
    335            zclReadRspCmd_t *readRspCmd;
    336            uint8 i;
    337          
    338            readRspCmd = (zclReadRspCmd_t *)pInMsg->attrCmd;
    339            for (i = 0; i < readRspCmd->numAttr; i++)
    340            {
    341              // Notify the originator of the results of the original read attributes attempt and, 
    342              // for each successfull request, the value of the requested attribute
    343            }
    344            return TRUE; 
    345          }
    346          #endif // ZCL_READ
    347          
    348          #ifdef ZCL_WRITE
    349          
    350          static uint8 zclZigbeeReceiver_ProcessInWriteRspCmd( zclIncomingMsg_t *pInMsg )
    351          {
    352            zclWriteRspCmd_t *writeRspCmd;
    353            uint8 i;
    354          
    355            writeRspCmd = (zclWriteRspCmd_t *)pInMsg->attrCmd;
    356            for (i = 0; i < writeRspCmd->numAttr; i++)
    357            {
    358              // Notify the device of the results of the its original write attributes command.
    359            }
    360            return TRUE; 
    361          }
    362          #endif // ZCL_WRITE
    363          
    364          static uint8 zclZigbeeReceiver_ProcessInDefaultRspCmd( zclIncomingMsg_t *pInMsg )
    365          {
    366            // Device is notified of the Default Response command.
    367            (void)pInMsg;
    368            return TRUE; 
    369          }
    370          
    371          #ifdef ZCL_DISCOVER
    372          static uint8 zclZigbeeReceiver_ProcessInDiscRspCmd( zclIncomingMsg_t *pInMsg )
    373          {
    374            zclDiscoverRspCmd_t *discoverRspCmd;
    375            uint8 i;
    376            
    377            discoverRspCmd = (zclDiscoverRspCmd_t *)pInMsg->attrCmd;
    378            for ( i = 0; i < discoverRspCmd->numAttr; i++ )
    379            {
    380              // Device is notified of the result of its attribute discovery command.
    381            }
    382            return TRUE;
    383          }
    384          #endif // ZCL_DISCOVER
    385          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    386          void zclUARTMsg_CallBack(uint8 port, uint8 event)
   \                     zclUARTMsg_CallBack:
    387          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    388            (void)port;
    389            
    390            if(Hal_UART_RxBufLen( MT_UART_DEFAULT_PORT) > 0 )
   \   000005                ; Setup parameters for call to function Hal_UART_RxBufLen
   \   000005   7900         MOV     R1,#0x0
   \   000007   12....       LCALL   ??Hal_UART_RxBufLen?relay
   \   00000A   EA           MOV     A,R2
   \   00000B   7001         JNZ     ??zclUARTMsg_CallBack_0
   \   00000D   EB           MOV     A,R3
   \                     ??zclUARTMsg_CallBack_0:
   \   00000E   6022         JZ      ??zclUARTMsg_CallBack_1
    391            {
    392                len = Hal_UART_RxBufLen( MT_UART_DEFAULT_PORT );
   \   000010                ; Setup parameters for call to function Hal_UART_RxBufLen
   \   000010   7900         MOV     R1,#0x0
   \   000012   12....       LCALL   ??Hal_UART_RxBufLen?relay
   \   000015   EA           MOV     A,R2
   \   000016   90....       MOV     DPTR,#len
   \   000019   F0           MOVX    @DPTR,A
    393                HalUARTRead( MT_UART_DEFAULT_PORT, TransmitApp_Msg, len );
   \   00001A                ; Setup parameters for call to function HalUARTRead
   \   00001A   FC           MOV     R4,A
   \   00001B   7D00         MOV     R5,#0x0
   \   00001D   7A..         MOV     R2,#(TransmitApp_Msg & 0xff)
   \   00001F   7B..         MOV     R3,#((TransmitApp_Msg >> 8) & 0xff)
   \   000021   7900         MOV     R1,#0x0
   \   000023   12....       LCALL   ??HalUARTRead?relay
    394                osal_set_event( zclZigbeeReceiver_TaskID, UART_MSG_EVT );
   \   000026                ; Setup parameters for call to function osal_set_event
   \   000026   7A02         MOV     R2,#0x2
   \   000028   7B00         MOV     R3,#0x0
   \   00002A   90....       MOV     DPTR,#zclZigbeeReceiver_TaskID
   \   00002D   E0           MOVX    A,@DPTR
   \   00002E   F9           MOV     R1,A
   \   00002F   12....       LCALL   ??osal_set_event?relay
    395            }
    396          }
   \                     ??zclUARTMsg_CallBack_1:
   \   000032                REQUIRE ?Subroutine4
   \   000032                ; // Fall through to label ?Subroutine4

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    397          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    398          void zclUartReceiver( void )
   \                     zclUartReceiver:
    399          { 
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    400            for(uint8 length = 0; length < len; length++)
   \   000005   7A00         MOV     R2,#0x0
   \   000007   801F         SJMP    ??zclUartReceiver_0
    401            {
    402              uart_recv[length] = TransmitApp_Msg[length];
   \                     ??zclUartReceiver_1:
   \   000009   8A82         MOV     DPL,R2
   \   00000B   A882         MOV     R0,DPL
   \   00000D   E8           MOV     A,R0
   \   00000E   24..         ADD     A,#(TransmitApp_Msg & 0xff)
   \   000010   F582         MOV     DPL,A
   \   000012   E4           CLR     A
   \   000013   34..         ADDC    A,#((TransmitApp_Msg >> 8) & 0xff)
   \   000015   F583         MOV     DPH,A
   \   000017   E0           MOVX    A,@DPTR
   \   000018   C0E0         PUSH    A
   \   00001A   E8           MOV     A,R0
   \   00001B   24..         ADD     A,#(uart_recv & 0xff)
   \   00001D   F582         MOV     DPL,A
   \   00001F   E4           CLR     A
   \   000020   34..         ADDC    A,#((uart_recv >> 8) & 0xff)
   \   000022   F583         MOV     DPH,A
   \   000024   D0E0         POP     A
   \   000026   F0           MOVX    @DPTR,A
    403            }
   \   000027   0A           INC     R2
   \                     ??zclUartReceiver_0:
   \   000028   90....       MOV     DPTR,#len
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   FB           MOV     R3,A
   \   00002D   EA           MOV     A,R2
   \   00002E   C3           CLR     C
   \   00002F   9B           SUBB    A,R3
   \   000030   40D7         JC      ??zclUartReceiver_1
    404          
    405            HalUARTWrite(MT_UART_DEFAULT_PORT, uart_recv, len);    
   \   000032                ; Setup parameters for call to function HalUARTWrite
   \   000032   E0           MOVX    A,@DPTR
   \   000033   FC           MOV     R4,A
   \   000034   7D00         MOV     R5,#0x0
   \   000036   7A..         MOV     R2,#(uart_recv & 0xff)
   \   000038   7B..         MOV     R3,#((uart_recv >> 8) & 0xff)
   \   00003A   7900         MOV     R1,#0x0
   \   00003C   12....       LCALL   ??HalUARTWrite?relay
    406            
    407            // Set the End Device state
    408            zclZigbeeRecv_DstAddr.endPoint = 12;
   \   00003F   740C         MOV     A,#0xc
   \   000041   90....       MOV     DPTR,#(zclZigbeeRecv_DstAddr + 9)
   \   000044   F0           MOVX    @DPTR,A
    409            zclZigbeeRecv_DstAddr.addr.shortAddr = 0xFFFF;
   \   000045   90....       MOV     DPTR,#zclZigbeeRecv_DstAddr
   \   000048   74FF         MOV     A,#-0x1
   \   00004A   F0           MOVX    @DPTR,A
   \   00004B   A3           INC     DPTR
   \   00004C   F0           MOVX    @DPTR,A
    410            zclZigbeeRecv_DstAddr.addrMode = (afAddrMode_t)AddrBroadcast;
   \   00004D   740F         MOV     A,#0xf
   \   00004F   90....       MOV     DPTR,#(zclZigbeeRecv_DstAddr + 8)
   \   000052   F0           MOVX    @DPTR,A
    411              
    412            // Transmit the UART command to End Device
    413            uint8 send = zcl_SendCommand( ZIGBEERECV_ENDPOINT, 
    414                                          &zclZigbeeRecv_DstAddr,
    415                                          ZCL_CLUSTER_ID_GEN_ON_OFF,
    416                                          COMMAND_TOGGLE,
    417                                          TRUE,
    418                                          ZCL_FRAME_CLIENT_SERVER_DIR,
    419                                          false,
    420                                          0,
    421                                          0,
    422                                          10,
    423                                          uart_recv );
   \   000053                ; Setup parameters for call to function zcl_SendCommand
   \   000053   75....       MOV     ?V0 + 0,#(uart_recv & 0xff)
   \   000056   75....       MOV     ?V0 + 1,#((uart_recv >> 8) & 0xff)
   \   000059   78..         MOV     R0,#?V0 + 0
   \   00005B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005E   75..0A       MOV     ?V0 + 0,#0xa
   \   000061   75..00       MOV     ?V0 + 1,#0x0
   \   000064   78..         MOV     R0,#?V0 + 0
   \   000066   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000069   75..00       MOV     ?V0 + 0,#0x0
   \   00006C   78..         MOV     R0,#?V0 + 0
   \   00006E   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000071   78..         MOV     R0,#?V0 + 0
   \   000073   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000076   78..         MOV     R0,#?V0 + 0
   \   000078   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00007B   78..         MOV     R0,#?V0 + 0
   \   00007D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000080   75..01       MOV     ?V0 + 0,#0x1
   \   000083   78..         MOV     R0,#?V0 + 0
   \   000085   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000088   75..02       MOV     ?V0 + 0,#0x2
   \   00008B   78..         MOV     R0,#?V0 + 0
   \   00008D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000090   7C06         MOV     R4,#0x6
   \   000092   7D00         MOV     R5,#0x0
   \   000094   7A..         MOV     R2,#(zclZigbeeRecv_DstAddr & 0xff)
   \   000096   7B..         MOV     R3,#((zclZigbeeRecv_DstAddr >> 8) & 0xff)
   \   000098   790D         MOV     R1,#0xd
   \   00009A   12....       LCALL   ??zcl_SendCommand?relay
   \   00009D   740B         MOV     A,#0xb
   \   00009F   12....       LCALL   ?DEALLOC_XSTACK8
    424          }
   \   0000A2   02....       LJMP    ?Subroutine4 & 0xFFFF

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zigbeeReceiver_TestEp>`:
   \   000000   14           DB 20
   \   000001   ....0000     DW zclZigbeeReceiver_TaskID, 0H
   \   000005   00           DB 0

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclZigbeeReceiver_CmdCallbac`:
   \   000000   ....         DW ??zclZigbeeReceiver_BasicResetCB?relay
   \   000002   ....         DW ??zclZigbeeReceiver_IdentifyCB?relay
   \   000004   ....         DW ??zclZigbeeReceiver_IdentifyQueryRspCB?relay
   \   000006   ....0000     DW ??zclZigbeeReceiver_OnOffCB?relay, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H
   \            00000000
   \            00000000
   \            00000000
   \            0000    
   \   000018   00000000     DW 0H, 0H
   \   00001C   0000         DB 0, 0

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??ZSendMsgProcess?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ZSendMsgProcess

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeRecv_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeRecv_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeRecv_event_loop?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeRecv_event_loop

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeReceiver_ProcessIdentifyTimeChange?r:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeReceiver_ProcessIdentifyTimeChange

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeReceiver_BasicResetCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeReceiver_BasicResetCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeReceiver_IdentifyCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeReceiver_IdentifyCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeReceiver_IdentifyQueryRspCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeReceiver_IdentifyQueryRspCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeReceiver_OnOffCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeReceiver_OnOffCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclUARTMsg_CallBack?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclUARTMsg_CallBack

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclUartReceiver?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclUartReceiver

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "3">`:
   \   000000   3300         DB "3"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant ",">`:
   \   000000   2C00         DB ","

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "$\\r\\n">`:
   \   000000   240D0A00     DB "$\015\012"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "RECV_GROUP">`:
   \   000000   52454356     DB "RECV_GROUP"
   \            5F47524F
   \            555000  

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     ZSendMsgProcess                    0      0     21
       -> HalUARTWrite                  0      0     18
       -> HalUARTWrite                  0      0     18
       -> HalUARTWrite                  0      0     18
       -> HalUARTWrite                  0      0     18
       -> HalUARTWrite                  0      0     18
       -> HalUARTWrite                  0      0     18
       -> osal_start_timerEx            0      0     18
     zclUARTMsg_CallBack                0      0     10
       -> Hal_UART_RxBufLen             0      0     20
       -> Hal_UART_RxBufLen             0      0     20
       -> HalUARTRead                   0      0     20
       -> osal_set_event                0      0     20
     zclUartReceiver                    1      0     33
       -> HalUARTWrite                  0      0     20
       -> zcl_SendCommand               0      0     42
     zclZigbeeReceiver_BasicResetCB     0      0      0
     zclZigbeeReceiver_IdentifyCB       2      0      0
       -> zclZigbeeReceiver_ProcessIdentifyTimeChange
                                        4      0      0
     zclZigbeeReceiver_IdentifyQueryRspCB
                                        0      0      0
     zclZigbeeReceiver_OnOffCB          2      0      0
       -> HalLedSet                     4      0      0
       -> HalLedSet                     4      0      0
     zclZigbeeReceiver_ProcessIdentifyTimeChange
                                        2      0     12
       -> osal_start_timerEx            4      0      0
       -> HalLedBlink                   4      0      0
       -> HalLedSet                     4      0      0
       -> HalLedSet                     4      0      0
       -> osal_stop_timerEx             4      0      0
     zclZigbeeRecv_Init                 0      0     14
       -> zclZD_Init                    0      0     22
       -> zclGeneral_RegisterCmdCallbacks
                                        0      0     22
       -> zcl_registerAttrList          0      0     22
       -> zcl_registerForMsg            0      0     22
       -> RegisterForKeys               0      0     22
       -> osal_memcpy                   0      0     28
       -> aps_AddGroup                  0      0     22
       -> afRegister                    0      0     22
       -> osal_set_event                0      0     22
     zclZigbeeRecv_event_loop           1      0     12
       -> ZSendMsgProcess               0      0     24
       -> ZSendMsgProcess               0      0     24
       -> osal_msg_deallocate           0      0     24
       -> osal_msg_receive              0      0     24
       -> osal_mem_free                 0      0     24
       -> zclZigbeeReceiver_ProcessIdentifyTimeChange
                                        0      0     24
       -> zclUartReceiver               0      0     24


   Segment part sizes:

     Function/Label                                  Bytes
     --------------                                  -----
     send_msg_counter                                   1
     zclZigbeeReceiver_TaskID                           1
     ZDO_MSG_SEND_ID                                    1
     len                                                1
     TransmitApp_Msg                                  102
     UartTransmit_Msg                                 102
     uart_recv                                        102
     zclZigbeeRecv_DstAddr                             12
     zclZigbeeRecv_Group                               18
     zigbeeReceiver_TestEp                              6
     zclZigbeeReceiver_CmdCallbacks                    30
     ZSendMsgProcess                                   77
     ?Subroutine1                                      19
     zclZigbeeRecv_Init                               148
     zclZigbeeRecv_event_loop                         216
     ?Subroutine0                                      14
     ?Subroutine2                                      12
     zclZigbeeReceiver_ProcessIdentifyTimeChange
                                                       79
     ?Subroutine3                                       7
     zclZigbeeReceiver_BasicResetCB                     3
     zclZigbeeReceiver_IdentifyCB                      28
     zclZigbeeReceiver_IdentifyQueryRspCB
                                                        3
     zclZigbeeReceiver_OnOffCB                         37
     zclUARTMsg_CallBack                               50
     ?Subroutine4                                       5
     zclUartReceiver                                  165
     ?<Initializer for zigbeeReceiver_TestEp>           6
     ?<Initializer for zclZigbeeReceiver_CmdCallbac    30
     ??ZSendMsgProcess?relay                            6
     ??zclZigbeeRecv_Init?relay                         6
     ??zclZigbeeRecv_event_loop?relay                   6
     ??zclZigbeeReceiver_ProcessIdentifyTimeChange?r    6
     ??zclZigbeeReceiver_BasicResetCB?relay             6
     ??zclZigbeeReceiver_IdentifyCB?relay               6
     ??zclZigbeeReceiver_IdentifyQueryRspCB?relay       6
     ??zclZigbeeReceiver_OnOffCB?relay                  6
     ??zclUARTMsg_CallBack?relay                        6
     ??zclUartReceiver?relay                            6
     ?<Constant "3">                                    2
     ?<Constant ",">                                    2
     ?<Constant "$\r\n">                                4
     ?<Constant "RECV_GROUP">                          11

 
 863 bytes in segment BANKED_CODE
  60 bytes in segment BANK_RELAYS
  36 bytes in segment XDATA_I
  36 bytes in segment XDATA_ID
  19 bytes in segment XDATA_ROM_C
 340 bytes in segment XDATA_Z
 
 959 bytes of CODE  memory
  19 bytes of CONST memory
 376 bytes of XDATA memory

Errors: none
Warnings: 2
