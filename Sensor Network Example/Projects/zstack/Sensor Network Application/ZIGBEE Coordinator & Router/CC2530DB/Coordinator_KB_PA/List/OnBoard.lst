###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                19/Aug/2013  00:53:48 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\ZMain\TI2530DB\OnBoard.c   #
#    Command line       =  -f "C:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.c #
#                          fg" (-DCPU32MHZ -DROOT=__near_func                 #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f       #
#                          "C:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig. #
#                          cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0             #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=TRUE      #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440)   #
#                          -f "C:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg #
#                          " (-DZCL_READ -DZCL_WRITE -DZCL_BASIC              #
#                          -DZCL_IDENTIFY -DZCL_ON_OFF -DZCL_KEY_ESTABLISH    #
#                          -DZCL_LOAD_CONTROL -DZCL_SIMPLE_METERING           #
#                          -DZCL_PRICING) -DZCL_MESSAGE                       #
#                          "C:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\ZMain\TI2530DB\OnBoard.c"  #
#                          -D CC2530 -D ZTOOL_P1 -D MT_TASK -D MT_APP_FUNC    #
#                          -D MT_SYS_FUNC -D MT_ZDO_FUNC -D                   #
#                          LCD_SUPPORTED=DEBUG -D Coor_receiver -D            #
#                          xHAL_KEYPAD -D xPA2591 -lC                         #
#                          "C:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\Coordinator_KB_PA\List\" -lA       #
#                          "C:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\Coordinator_KB_PA\List\"           #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "C:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\Coordinator_KB_PA\Obj\" -e         #
#                          --require_prototypes --debug --core=plain          #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "C:\GitHub\z-stack\Sensor  #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\" -I "C:\GitHub\z-stack\Sensor     #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\SOURCE\" -I                     #
#                          "C:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\SOURCE\" -I                  #
#                          "C:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I       #
#                          "C:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MT\" -I  #
#                          "C:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCL #
#                          UDE\" -I "C:\GitHub\z-stack\Sensor Network         #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARG #
#                          ET\CC2530KB\" -I "C:\GitHub\z-stack\Sensor         #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MCU #
#                          \CCSOC\" -I "C:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\INC #
#                          LUDE\" -I "C:\GitHub\z-stack\Sensor Network        #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF #
#                          \" -I "C:\GitHub\z-stack\Sensor Network            #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NW #
#                          K\" -I "C:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SE #
#                          C\" -I "C:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SA #
#                          PI\" -I "C:\GitHub\z-stack\Sensor Network          #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SY #
#                          S\" -I "C:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZC #
#                          L\" -I "C:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZD #
#                          O\" -I "C:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8W #
#                          \" -I "C:\GitHub\z-stack\Sensor Network            #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\"   #
#                          -I "C:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES #
#                          \SADDR\" -I "C:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES #
#                          \SDATA\" -I "C:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INCL #
#                          UDE\" -I "C:\GitHub\z-stack\Sensor Network         #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIGH #
#                          _LEVEL\" -I "C:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\" -I "C:\GitHub\z-stack\Sensor         #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\SINGLE_CHIP\" -I "C:\Program           #
#                          Files\IAR Systems\Embedded Workbench               #
#                          5.3\8051\INC\" -I "C:\Program Files\IAR            #
#                          Systems\Embedded Workbench 5.3\8051\INC\CLIB\"     #
#                          -Ohz                                               #
#    List file          =  C:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\Coordinator_KB_PA\List\OnBoard.lst #
#    Object file        =  C:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Coordinator &                   #
#                          Router\CC2530DB\Coordinator_KB_PA\Obj\OnBoard.r51  #
#                                                                             #
#                                                                             #
###############################################################################

C:\GitHub\z-stack\Sensor Network Example\Projects\zstack\ZMain\TI2530DB\OnBoard.c
      1          /**************************************************************************************************
      2            Filename:       OnBoard.c
      3            Revised:        $Date: 2009-12-16 17:44:49 -0800 (Wed, 16 Dec 2009) $
      4            Revision:       $Revision: 21351 $
      5          
      6            Description:    This file contains the UI and control for the
      7                            peripherals on the EVAL development board
      8            Notes:          This file targets the Chipcon CC2530
      9          
     10          
     11            Copyright 2005-2009 Texas Instruments Incorporated. All rights reserved.
     12          
     13            Should you have any questions regarding your right to use this Software,
     14            contact Texas Instruments Incorporated at www.TI.com.
     15          **************************************************************************************************/
     16          #include "ZComDef.h"
     17          #include "OnBoard.h"

   \                                 In  segment SFR_AN, at 0x9d
   \   unsigned char volatile __sfr SLEEPSTA
   \                     SLEEPSTA:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1
     18          #include "OSAL.h"
     19          #include "MT.h"
     20          #include "MT_SYS.h"
     21          #include "DebugTrace.h"
     22          
     23          /* Hal */
     24          #include "hal_lcd.h"
     25          #include "hal_mcu.h"
     26          #include "hal_timer.h"
     27          #include "hal_key.h"
     28          #include "hal_led.h"
     29          
     30          /* Allow access macRandomByte() */
     31          #include "mac_radio_defs.h"
     32          
     33          // Task ID not initialized
     34          #define NO_TASK_ID 0xFF
     35          
     36          // Minimum length RAM "pattern" for Stack check
     37          #define MIN_RAM_INIT 12
     38          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     39          uint8 OnboardKeyIntEnable;
   \                     OnboardKeyIntEnable:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     40          
     41          #if defined MAKE_CRC_SHDW
     42          #pragma location="CRC_SHDW"
     43          const CODE uint16 _crcShdw = 0xFFFF;
     44          #pragma required=_crcShdw
     45          #endif
     46          
     47          // 64-bit Extended Address of this device

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     48          uint8 aExtendedAddress[8];
   \                     aExtendedAddress:
   \   000000                DS 8
   \   000008                REQUIRE __INIT_XDATA_Z
     49          
     50          // Registered keys task ID, initialized to NOT USED.

   \                                 In  segment XDATA_I, align 1, keep-with-next
     51          static uint8 registeredKeysTaskID = NO_TASK_ID;
   \                     registeredKeysTaskID:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for registeredKeysTaskID>`
   \   000001                REQUIRE __INIT_XDATA_I
     52          
     53          static void ChkReset( void );
     54          
     55          /*********************************************************************
     56           * @fn      InitBoard()
     57           * @brief   Initialize the CC2420DB Board Peripherals
     58           * @param   level: COLD,WARM,READY
     59           * @return  None
     60           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     61          void InitBoard( uint8 level )
   \                     InitBoard:
     62          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
     63            if ( level == OB_COLD )
   \   000005   E9           MOV     A,R1
   \   000006   7053         JNZ     ??InitBoard_0
     64            {
     65              // Interrupts off
     66              osal_int_disable( INTS_ALL );
   \   000008                ; Setup parameters for call to function osal_int_disable
   \   000008   79FF         MOV     R1,#-0x1
   \   00000A   12....       LCALL   ??osal_int_disable?relay
     67              // Turn all LEDs off
     68              HalLedSet( HAL_LED_ALL, HAL_LED_MODE_OFF );
   \   00000D                ; Setup parameters for call to function HalLedSet
   \   00000D   7A00         MOV     R2,#0x0
   \   00000F   790F         MOV     R1,#0xf
   \   000011   12....       LCALL   ??HalLedSet?relay
     69              // Check for Brown-Out reset
     70              ChkReset();
   \   000014   7418         MOV     A,#0x18
   \   000016   559D         ANL     A,0x9d
   \   000018   FA           MOV     R2,A
   \   000019   604D         JZ      ??InitBoard_1
   \   00001B   7408         MOV     A,#0x8
   \   00001D   6A           XRL     A,R2
   \   00001E   6048         JZ      ??InitBoard_1
   \   000020   7410         MOV     A,#0x10
   \   000022   6A           XRL     A,R2
   \   000023   6043         JZ      ??InitBoard_1
   \   000025   C2AF         CLR     0xa8.7
   \                     ??InitBoard_2:
   \   000027   7E02         MOV     R6,#0x2
   \                     ??InitBoard_3:
   \   000029                ; Setup parameters for call to function HalLedSet
   \   000029   7A01         MOV     R2,#0x1
   \   00002B   EE           MOV     A,R6
   \   00002C   F9           MOV     R1,A
   \   00002D   12....       LCALL   ??HalLedSet?relay
   \   000030                ; Setup parameters for call to function Onboard_wait
   \   000030   7A24         MOV     R2,#0x24
   \   000032   7BF4         MOV     R3,#-0xc
   \   000034   12....       LCALL   ??Onboard_wait?relay
   \   000037                ; Setup parameters for call to function Onboard_wait
   \   000037   7A24         MOV     R2,#0x24
   \   000039   7BF4         MOV     R3,#-0xc
   \   00003B   12....       LCALL   ??Onboard_wait?relay
   \   00003E                ; Setup parameters for call to function HalLedSet
   \   00003E   7A00         MOV     R2,#0x0
   \   000040   EE           MOV     A,R6
   \   000041   F9           MOV     R1,A
   \   000042   12....       LCALL   ??HalLedSet?relay
   \   000045                ; Setup parameters for call to function Onboard_wait
   \   000045   7A7C         MOV     R2,#0x7c
   \   000047   7B92         MOV     R3,#-0x6e
   \   000049   12....       LCALL   ??Onboard_wait?relay
   \   00004C                ; Setup parameters for call to function Onboard_wait
   \   00004C   7A7C         MOV     R2,#0x7c
   \   00004E   7B92         MOV     R3,#-0x6e
   \   000050   12....       LCALL   ??Onboard_wait?relay
   \   000053   EE           MOV     A,R6
   \   000054   C3           CLR     C
   \   000055   13           RRC     A
   \   000056   FE           MOV     R6,A
   \   000057   70D0         JNZ     ??InitBoard_3
   \   000059   80CC         SJMP    ??InitBoard_2
     71            }
     72            else  // !OB_COLD
     73            {
     74              /* Initialize Key stuff */
     75              OnboardKeyIntEnable = HAL_KEY_INTERRUPT_DISABLE;
   \                     ??InitBoard_0:
   \   00005B   E4           CLR     A
   \   00005C   90....       MOV     DPTR,#OnboardKeyIntEnable
   \   00005F   F0           MOVX    @DPTR,A
     76              HalKeyConfig( OnboardKeyIntEnable, OnBoard_KeyCallback);
   \   000060                ; Setup parameters for call to function HalKeyConfig
   \   000060   7A..         MOV     R2,#(??OnBoard_KeyCallback?relay & 0xff)
   \   000062   7B..         MOV     R3,#((??OnBoard_KeyCallback?relay >> 8) & 0xff)
   \   000064   F9           MOV     R1,A
   \   000065   12....       LCALL   ??HalKeyConfig?relay
     77            }
     78          }
   \                     ??InitBoard_1:
   \   000068   7F01         MOV     R7,#0x1
   \   00006A   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00006D                REQUIRE SLEEPSTA
   \   00006D                REQUIRE _A_IEN0
     79          
     80          /*********************************************************************
     81           * @fn      ChkReset()
     82           * @brief   Check reset bits - if reset cause is unknown, assume a
     83           *          brown-out (low power), assume batteries are not reliable,
     84           *          hang in a loop and sequence through the LEDs.
     85           * @param   None
     86           * @return  None
     87           *********************************************************************/
     88          void ChkReset( void )
     89          {
     90            uint8 led;
     91            uint8 rib;
     92          
     93            // Isolate reset indicator bits
     94            rib = SLEEPSTA & LRESET;
     95          
     96            if ( rib == RESETPO )
     97            {
     98              // Put code here to handle Power-On reset
     99            }
    100            else if ( rib == RESETEX )
    101            {
    102              // Put code here to handle External reset
    103            }
    104            else if ( rib == RESETWD )
    105            {
    106              // Put code here to handle WatchDog reset
    107            }
    108            else
    109            {
    110              // Unknown, hang and blink
    111              HAL_DISABLE_INTERRUPTS();
    112              led = HAL_LED_2;
    113              
    114              while ( 1 ) 
    115              {
    116                HalLedSet( led, HAL_LED_MODE_ON );
    117                MicroWait( 62500 );
    118                MicroWait( 62500 );
    119                HalLedSet( led, HAL_LED_MODE_OFF );
    120                MicroWait( 37500 );
    121                MicroWait( 37500 );
    122                
    123                if ( !(led >>= 1) )
    124                  led = HAL_LED_2;
    125              }
    126            }
    127          }
    128          
    129          /*********************************************************************
    130           *                        "Keyboard" Support
    131           *********************************************************************/
    132          
    133          /*********************************************************************
    134           * Keyboard Register function
    135           *
    136           * The keyboard handler is setup to send all keyboard changes to
    137           * one task (if a task is registered).
    138           *
    139           * If a task registers, it will get all the keys. You can change this
    140           * to register for individual keys.
    141           *********************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    142          uint8 RegisterForKeys( uint8 task_id )
   \                     RegisterForKeys:
    143          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    144            // Allow only the first task
    145            if ( registeredKeysTaskID == NO_TASK_ID )
   \   000004   90....       MOV     DPTR,#registeredKeysTaskID
   \   000007   E0           MOVX    A,@DPTR
   \   000008   64FF         XRL     A,#0xff
   \   00000A   7006         JNZ     ??RegisterForKeys_0
    146            {
    147              registeredKeysTaskID = task_id;
   \   00000C   E9           MOV     A,R1
   \   00000D   F0           MOVX    @DPTR,A
    148              return ( true );
   \   00000E   7901         MOV     R1,#0x1
   \   000010   8002         SJMP    ??RegisterForKeys_1
    149            }
    150            else
    151              return ( false );
   \                     ??RegisterForKeys_0:
   \   000012   7900         MOV     R1,#0x0
   \                     ??RegisterForKeys_1:
   \   000014   02....       LJMP    ?Subroutine0 & 0xFFFF
    152          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
    153          
    154          /*********************************************************************
    155           * @fn      OnBoard_SendKeys
    156           *
    157           * @brief   Send "Key Pressed" message to application.
    158           *
    159           * @param   keys  - keys that were pressed
    160           *          state - shifted
    161           *
    162           * @return  status
    163           *********************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    164          uint8 OnBoard_SendKeys( uint8 keys, uint8 state )
   \                     OnBoard_SendKeys:
    165          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
   \   000007   EA           MOV     A,R2
   \   000008   FF           MOV     R7,A
    166            keyChange_t *msgPtr;
    167          
    168            if ( registeredKeysTaskID != NO_TASK_ID )
   \   000009   90....       MOV     DPTR,#registeredKeysTaskID
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   64FF         XRL     A,#0xff
   \   00000F   602D         JZ      ??OnBoard_SendKeys_0
    169            {
    170              // Send the address to the task
    171              msgPtr = (keyChange_t *)osal_msg_allocate( sizeof(keyChange_t) );
   \   000011                ; Setup parameters for call to function osal_msg_allocate
   \   000011   7A04         MOV     R2,#0x4
   \   000013   7B00         MOV     R3,#0x0
   \   000015   12....       LCALL   ??osal_msg_allocate?relay
    172              if ( msgPtr )
   \   000018   EA           MOV     A,R2
   \   000019   7001         JNZ     ??OnBoard_SendKeys_1
   \   00001B   EB           MOV     A,R3
   \                     ??OnBoard_SendKeys_1:
   \   00001C   601C         JZ      ??OnBoard_SendKeys_2
    173              {
    174                msgPtr->hdr.event = KEY_CHANGE;
   \   00001E   74C0         MOV     A,#-0x40
   \   000020   8A82         MOV     DPL,R2
   \   000022   8B83         MOV     DPH,R3
   \   000024   F0           MOVX    @DPTR,A
    175                msgPtr->state = state;
   \   000025   EF           MOV     A,R7
   \   000026   A3           INC     DPTR
   \   000027   A3           INC     DPTR
   \   000028   F0           MOVX    @DPTR,A
    176                msgPtr->keys = keys;
   \   000029   EE           MOV     A,R6
   \   00002A   8A82         MOV     DPL,R2
   \   00002C   8B83         MOV     DPH,R3
   \   00002E   A3           INC     DPTR
   \   00002F   A3           INC     DPTR
   \   000030   A3           INC     DPTR
   \   000031   F0           MOVX    @DPTR,A
    177          
    178                osal_msg_send( registeredKeysTaskID, (uint8 *)msgPtr );
   \   000032                ; Setup parameters for call to function osal_msg_send
   \   000032   90....       MOV     DPTR,#registeredKeysTaskID
   \   000035   E0           MOVX    A,@DPTR
   \   000036   F9           MOV     R1,A
   \   000037   12....       LCALL   ??osal_msg_send?relay
    179              }
    180              return ( ZSuccess );
   \                     ??OnBoard_SendKeys_2:
   \   00003A   7900         MOV     R1,#0x0
   \   00003C   8002         SJMP    ??OnBoard_SendKeys_3
    181            }
    182            else
    183              return ( ZFailure );
   \                     ??OnBoard_SendKeys_0:
   \   00003E   7901         MOV     R1,#0x1
   \                     ??OnBoard_SendKeys_3:
   \   000040   7F02         MOV     R7,#0x2
   \   000042   02....       LJMP    ?BANKED_LEAVE_XDATA
    184          }
    185          
    186          /*********************************************************************
    187           * @fn      OnBoard_KeyCallback
    188           *
    189           * @brief   Callback service for keys
    190           *
    191           * @param   keys  - keys that were pressed
    192           *          state - shifted
    193           *
    194           * @return  void
    195           *********************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    196          void OnBoard_KeyCallback ( uint8 keys, uint8 state )
   \                     OnBoard_KeyCallback:
    197          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    198            uint8 shift;
    199            (void)state;
    200          
    201            /* Get shift key status */
    202            shift = (( keys & HAL_KEY_SW_6 ) ? true : false);
    203          
    204            if ( OnBoard_SendKeys( keys, shift ) != ZSuccess )
   \   000004                ; Setup parameters for call to function OnBoard_SendKeys
   \   000004   E9           MOV     A,R1
   \   000005   A2E5         MOV     C,0xE0 /* A   */.5
   \   000007   E4           CLR     A
   \   000008   92E0         MOV     0xE0 /* A   */.0,C
   \   00000A   FA           MOV     R2,A
   \   00000B   12....       LCALL   ??OnBoard_SendKeys?relay
    205            {
    206              // Process SW1 here
    207              if ( keys & HAL_KEY_SW1 )  // Switch 1
    208              {
    209              }
    210              // Process SW2 here
    211              if ( keys & HAL_KEY_SW2 )  // Switch 2
    212              {
    213              } 
    214            }
    215          }
   \   00000E   80..         SJMP    ?Subroutine0
    216          
    217          /*********************************************************************
    218           * @fn      OnBoard_stack_used
    219           *
    220           * @brief   Runs through the stack looking for touched memory.
    221           *
    222           * @param   none
    223           *
    224           * @return  Maximum number of bytes used by the stack.
    225           *********************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    226          uint16 OnBoard_stack_used(void)
   \                     OnBoard_stack_used:
    227          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    228            uint8 const *ptr;
    229            uint8 cnt = 0;
   \   000004   7A00         MOV     R2,#0x0
    230          
    231            for (ptr = XSTACK_END; ptr > XSTACK_BEG; ptr--)
   \   000006   7582..       MOV     DPL,#((SFE(XSTACK) + 255) & 0xff)
   \   000009   7583..       MOV     DPH,#(((SFE(XSTACK) - 1) >> 8) & 0xff)
   \   00000C   800E         SJMP    ??OnBoard_stack_used_0
    232            {
    233              if (STACK_INIT_VALUE == *ptr)
    234              {
    235                if (++cnt >= MIN_RAM_INIT)
    236                {
    237                  ptr += MIN_RAM_INIT;
    238                  break;
    239                }
    240              }
    241              else
    242              {
    243                cnt = 0;
   \                     ??OnBoard_stack_used_1:
   \   00000E   7A00         MOV     R2,#0x0
    244              }
   \                     ??OnBoard_stack_used_2:
   \   000010   E582         MOV     A,DPL
   \   000012   24FF         ADD     A,#-0x1
   \   000014   F582         MOV     DPL,A
   \   000016   E583         MOV     A,DPH
   \   000018   34FF         ADDC    A,#-0x1
   \   00001A   F583         MOV     DPH,A
   \                     ??OnBoard_stack_used_0:
   \   00001C   C3           CLR     C
   \   00001D   74..         MOV     A,#(SFB(XSTACK) & 0xff)
   \   00001F   9582         SUBB    A,DPL
   \   000021   74..         MOV     A,#((SFB(XSTACK) >> 8) & 0xff)
   \   000023   9583         SUBB    A,DPH
   \   000025   5018         JNC     ??OnBoard_stack_used_3
   \   000027   E0           MOVX    A,@DPTR
   \   000028   64CD         XRL     A,#0xcd
   \   00002A   70E2         JNZ     ??OnBoard_stack_used_1
   \   00002C   0A           INC     R2
   \   00002D   EA           MOV     A,R2
   \   00002E   C3           CLR     C
   \   00002F   940C         SUBB    A,#0xc
   \   000031   40DD         JC      ??OnBoard_stack_used_2
   \   000033   E582         MOV     A,DPL
   \   000035   240C         ADD     A,#0xc
   \   000037   F582         MOV     DPL,A
   \   000039   E583         MOV     A,DPH
   \   00003B   3400         ADDC    A,#0x0
   \   00003D   F583         MOV     DPH,A
    245            }
    246          
    247            return (uint16)(XSTACK_END - ptr + 1);
   \                     ??OnBoard_stack_used_3:
   \   00003F   74..         MOV     A,#((SFE(XSTACK) + 255) & 0xff)
   \   000041   C3           CLR     C
   \   000042   9582         SUBB    A,DPL
   \   000044   F8           MOV     R0,A
   \   000045   74..         MOV     A,#(((SFE(XSTACK) - 1) >> 8) & 0xff)
   \   000047   9583         SUBB    A,DPH
   \   000049   F9           MOV     R1,A
   \   00004A   7401         MOV     A,#0x1
   \   00004C   28           ADD     A,R0
   \   00004D   FA           MOV     R2,A
   \   00004E   E4           CLR     A
   \   00004F   39           ADDC    A,R1
   \   000050   FB           MOV     R3,A
   \   000051                REQUIRE ?Subroutine0
   \   000051                ; // Fall through to label ?Subroutine0
    248          }
    249          
    250          /*********************************************************************
    251           * @fn      _itoa
    252           *
    253           * @brief   convert a 16bit number to ASCII
    254           *
    255           * @param   num -
    256           *          buf -
    257           *          radix -
    258           *
    259           * @return  void
    260           *
    261           *********************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    262          void _itoa(uint16 num, uint8 *buf, uint8 radix)
   \                     _itoa:
    263          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 5
   \   000005   74FB         MOV     A,#-0x5
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EA           MOV     A,R2
   \   00000B   FE           MOV     R6,A
   \   00000C   EB           MOV     A,R3
   \   00000D   FF           MOV     R7,A
   \   00000E   8C..         MOV     ?V0 + 0,R4
   \   000010   8D..         MOV     ?V0 + 1,R5
    264            char c,i;
    265            uint8 *p, rst[5];
    266          
    267            p = rst;
   \   000012   85..82       MOV     DPL,?XSP + 0
   \   000015   85..83       MOV     DPH,?XSP + 1
   \   000018   AC82         MOV     R4,DPL
   \   00001A   AD83         MOV     R5,DPH
    268            for ( i=0; i<5; i++,p++ )
   \   00001C   75..00       MOV     ?V0 + 4,#0x0
   \   00001F   8982         MOV     DPL,R1
   \   000021   8582..       MOV     ?V0 + 2,DPL
    269            {
    270              c = num % radix;  // Isolate a digit
   \                     ??_itoa_0:
   \   000024   EE           MOV     A,R6
   \   000025   F8           MOV     R0,A
   \   000026   EF           MOV     A,R7
   \   000027   F9           MOV     R1,A
   \   000028   AA..         MOV     R2,?V0 + 2
   \   00002A   7B00         MOV     R3,#0x0
   \   00002C   12....       LCALL   ?US_DIV_MOD
   \   00002F   EA           MOV     A,R2
    271              *p = c + (( c < 10 ) ? '0' : '7');  // Convert to Ascii
   \   000030   940A         SUBB    A,#0xa
   \   000032   5004         JNC     ??_itoa_1
   \   000034   7830         MOV     R0,#0x30
   \   000036   8002         SJMP    ??_itoa_2
   \                     ??_itoa_1:
   \   000038   7837         MOV     R0,#0x37
   \                     ??_itoa_2:
   \   00003A   E8           MOV     A,R0
   \   00003B   2A           ADD     A,R2
   \   00003C   8C82         MOV     DPL,R4
   \   00003E   8D83         MOV     DPH,R5
   \   000040   F0           MOVX    @DPTR,A
    272              num /= radix;
   \   000041   EE           MOV     A,R6
   \   000042   F8           MOV     R0,A
   \   000043   EF           MOV     A,R7
   \   000044   F9           MOV     R1,A
   \   000045   AA..         MOV     R2,?V0 + 2
   \   000047   7B00         MOV     R3,#0x0
   \   000049   12....       LCALL   ?US_DIV_MOD
   \   00004C   88..         MOV     ?V0 + 6,R0
   \   00004E   89..         MOV     ?V0 + 7,R1
   \   000050   AE..         MOV     R6,?V0 + 6
   \   000052   AF..         MOV     R7,?V0 + 7
    273              if ( !num )
   \   000054   EE           MOV     A,R6
   \   000055   7001         JNZ     ??_itoa_3
   \   000057   EF           MOV     A,R7
   \                     ??_itoa_3:
   \   000058   600D         JZ      ??_itoa_4
    274                break;
    275            }
   \   00005A   05..         INC     ?V0 + 4
   \   00005C   A3           INC     DPTR
   \   00005D   AC82         MOV     R4,DPL
   \   00005F   AD83         MOV     R5,DPH
   \   000061   E5..         MOV     A,?V0 + 4
   \   000063   9405         SUBB    A,#0x5
   \   000065   40BD         JC      ??_itoa_0
    276          
    277            for ( c=0 ; c<=i; c++ )
   \                     ??_itoa_4:
   \   000067   7A00         MOV     R2,#0x0
    278              *buf++ = *p--;  // Reverse character order
   \                     ??_itoa_5:
   \   000069   8C82         MOV     DPL,R4
   \   00006B   8D83         MOV     DPH,R5
   \   00006D   E0           MOVX    A,@DPTR
   \   00006E   85..82       MOV     DPL,?V0 + 0
   \   000071   85..83       MOV     DPH,?V0 + 1
   \   000074   F0           MOVX    @DPTR,A
   \   000075   EC           MOV     A,R4
   \   000076   24FF         ADD     A,#-0x1
   \   000078   1C           DEC     R4
   \   000079   ED           MOV     A,R5
   \   00007A   34FF         ADDC    A,#-0x1
   \   00007C   FD           MOV     R5,A
   \   00007D   A3           INC     DPTR
   \   00007E   8582..       MOV     ?V0 + 0,DPL
   \   000081   8583..       MOV     ?V0 + 1,DPH
   \   000084   0A           INC     R2
   \   000085   E5..         MOV     A,?V0 + 4
   \   000087   C3           CLR     C
   \   000088   9A           SUBB    A,R2
   \   000089   50DE         JNC     ??_itoa_5
    279          
    280            *buf = '\0';
   \   00008B   E4           CLR     A
   \   00008C   F0           MOVX    @DPTR,A
    281          }
   \   00008D   7405         MOV     A,#0x5
   \   00008F   12....       LCALL   ?DEALLOC_XSTACK8
   \   000092   7F08         MOV     R7,#0x8
   \   000094   02....       LJMP    ?BANKED_LEAVE_XDATA
    282          
    283          /*********************************************************************
    284           * @fn        Onboard_rand
    285           *
    286           * @brief    Random number generator
    287           *
    288           * @param   none
    289           *
    290           * @return  uint16 - new random number
    291           *
    292           *********************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    293          uint16 Onboard_rand( void )
   \                     Onboard_rand:
    294          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    295            return ( MAC_RADIO_RANDOM_WORD() );
   \   000004                ; Setup parameters for call to function macMcuRandomWord
   \   000004   12....       LCALL   ??macMcuRandomWord?relay
   \   000007   02....       LJMP    ?Subroutine0 & 0xFFFF
    296          }
    297          
    298          /*********************************************************************
    299           * @fn        Onboard_wait
    300           *
    301           * @brief    Delay wait
    302           *
    303           * @param   uint16 - time to wait
    304           *
    305           * @return  none
    306           *
    307           *********************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    308          void Onboard_wait( uint16 timeout )
   \                     Onboard_wait:
    309          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
   \   000000   8003         SJMP    ??Onboard_wait_0
    310            while (timeout--)
    311            {
    312              asm("NOP");
   \                     ??Onboard_wait_1:
   \   000002   00           NOP
    313              asm("NOP");
   \   000003   00           NOP
    314              asm("NOP");
   \   000004   00           NOP
    315            }
   \                     ??Onboard_wait_0:
   \   000005   EA           MOV     A,R2
   \   000006   F8           MOV     R0,A
   \   000007   EB           MOV     A,R3
   \   000008   F9           MOV     R1,A
   \   000009   74FF         MOV     A,#-0x1
   \   00000B   28           ADD     A,R0
   \   00000C   1A           DEC     R2
   \   00000D   74FF         MOV     A,#-0x1
   \   00000F   39           ADDC    A,R1
   \   000010   FB           MOV     R3,A
   \   000011   E8           MOV     A,R0
   \   000012   7001         JNZ     ??Onboard_wait_2
   \   000014   E9           MOV     A,R1
   \                     ??Onboard_wait_2:
   \   000015   70EB         JNZ     ??Onboard_wait_1
    316          }
   \   000017   02....       LJMP    ?BRET
    317          
    318          /*********************************************************************
    319           *                    EXTERNAL I/O FUNCTIONS
    320           *
    321           * User defined functions to control external devices. Add your code
    322           * to the following functions to control devices wired to DB outputs.
    323           *
    324           *********************************************************************/
    325          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    326          void BigLight_On( void )
   \                     BigLight_On:
    327          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    328            // Put code here to turn on an external light
    329          }
   \   000000   02....       LJMP    ?BRET
    330          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    331          void BigLight_Off( void )
   \                     BigLight_Off:
    332          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    333            // Put code here to turn off an external light
    334          }
   \   000000   02....       LJMP    ?BRET
    335          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    336          void BuzzerControl( uint8 on )
   \                     BuzzerControl:
    337          { 
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    338            // Put code here to turn a buzzer on/off
    339            (void)on;
    340          }
   \   000000   02....       LJMP    ?BRET
    341          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    342          void Dimmer( uint8 lvl )
   \                     Dimmer:
    343          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    344            // Put code here to control a dimmer
    345            (void)lvl;
    346          }
   \   000000   02....       LJMP    ?BRET
    347          
    348          // No dip switches on this board

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    349          uint8 GetUserDipSw( void )
   \                     GetUserDipSw:
    350          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    351            return 0;
   \   000000   7900         MOV     R1,#0x0
   \   000002   02....       LJMP    ?BRET
    352          }

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for registeredKeysTaskID>`:
   \   000000   FF           DB 255

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??InitBoard?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    InitBoard

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??RegisterForKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    RegisterForKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??OnBoard_SendKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    OnBoard_SendKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??OnBoard_KeyCallback?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    OnBoard_KeyCallback

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??OnBoard_stack_used?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    OnBoard_stack_used

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??_itoa?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    _itoa

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Onboard_rand?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Onboard_rand

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Onboard_wait?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Onboard_wait

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??BigLight_On?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    BigLight_On

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??BigLight_Off?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    BigLight_Off

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??BuzzerControl?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    BuzzerControl

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Dimmer?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Dimmer

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GetUserDipSw?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GetUserDipSw

   Maximum stack usage in bytes:

     Function               ISTACK PSTACK XSTACK
     --------               ------ ------ ------
     BigLight_Off               0      0      0
     BigLight_On                0      0      0
     BuzzerControl              0      0      0
     Dimmer                     0      0      0
     GetUserDipSw               0      0      0
     InitBoard                  0      0      9
       -> osal_int_disable      0      0     18
       -> HalLedSet             0      0     18
       -> HalLedSet             0      0     18
       -> Onboard_wait          0      0     18
       -> Onboard_wait          0      0     18
       -> HalLedSet             0      0     18
       -> Onboard_wait          0      0     18
       -> Onboard_wait          0      0     18
       -> HalKeyConfig          0      0     18
     OnBoard_KeyCallback        2      0      0
       -> OnBoard_SendKeys      4      0      0
     OnBoard_SendKeys           1      0     10
       -> osal_msg_allocate     0      0     20
       -> osal_msg_send         0      0     20
     OnBoard_stack_used         2      0      0
     Onboard_rand               2      0      0
       -> macMcuRandomWord      4      0      0
     Onboard_wait               0      0      9
     RegisterForKeys            2      0      0
     _itoa                      1      0     21


   Segment part sizes:

     Function/Label                          Bytes
     --------------                          -----
     SLEEPSTA                                   1
     _A_IEN0                                    1
     OnboardKeyIntEnable                        1
     aExtendedAddress                           8
     registeredKeysTaskID                       1
     InitBoard                                109
     RegisterForKeys                           23
     ?Subroutine0                               7
     OnBoard_SendKeys                          69
     OnBoard_KeyCallback                       16
     OnBoard_stack_used                        81
     _itoa                                    151
     Onboard_rand                              10
     Onboard_wait                              26
     BigLight_On                                3
     BigLight_Off                               3
     BuzzerControl                              3
     Dimmer                                     3
     GetUserDipSw                               5
     ?<Initializer for registeredKeysTaskID>    1
     ??InitBoard?relay                          6
     ??RegisterForKeys?relay                    6
     ??OnBoard_SendKeys?relay                   6
     ??OnBoard_KeyCallback?relay                6
     ??OnBoard_stack_used?relay                 6
     ??_itoa?relay                              6
     ??Onboard_rand?relay                       6
     ??Onboard_wait?relay                       6
     ??BigLight_On?relay                        6
     ??BigLight_Off?relay                       6
     ??BuzzerControl?relay                      6
     ??Dimmer?relay                             6
     ??GetUserDipSw?relay                       6

 
 509 bytes in segment BANKED_CODE
  78 bytes in segment BANK_RELAYS
   2 bytes in segment SFR_AN
   1 byte  in segment XDATA_I
   1 byte  in segment XDATA_ID
   9 bytes in segment XDATA_Z
 
 588 bytes of CODE  memory
   0 bytes of DATA  memory (+ 2 bytes shared)
  10 bytes of XDATA memory

Errors: none
Warnings: none
