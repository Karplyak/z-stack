///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V7.51A/W32 for 8051               01/Dec/2010  08:47:43 /
// Copyright 2004-2009 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fin /
//                          al Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1.4 /
//                          .0\Sensor Network Example\Projects\zstack\Sensor  /
//                          Network Application\ZIGBEE Coordinator &          /
//                          Router\Source\zcl_zigbee receiver.c               /
//    Command line       =  -f "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530) /
//                          _Final Version\ZIGBEE Example\CC2530_ZStack-2.3.0 /
//                          -1.4.0\Sensor Network Example\Projects\zstack\Sen /
//                          sor Network Application\ZIGBEE Coordinator &      /
//                          Router\CC2530DB\..\..\..\Tools\CC2530DB\f8wRouter /
//                          .cfg" (-DCPU32MHZ -DROOT=__near_func              /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE -DRTR_NWK        /
//                          -DBLINK_LEDS) -f "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X /
//                          ³f¥úºÐ(CC2530)_Final Version\ZIGBEE               /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig /
//                          .cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0           /
//                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800         /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=TRUE -DPOLL_RATE=1000        /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100   /
//                          -DREJOIN_POLL_RATE=440) -f                        /
//                          "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fi /
//                          nal Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1. /
//                          4.0\Sensor Network Example\Projects\zstack\Sensor /
//                           Network Application\ZIGBEE Coordinator &         /
//                          Router\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cf /
//                          g" (-DZCL_READ -DZCL_WRITE -DZCL_BASIC            /
//                          -DZCL_IDENTIFY -DZCL_ON_OFF -DZCL_KEY_ESTABLISH   /
//                          -DZCL_LOAD_CONTROL -DZCL_SIMPLE_METERING          /
//                          -DZCL_PRICING) -DZCL_MESSAGE                      /
//                          "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fi /
//                          nal Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1. /
//                          4.0\Sensor Network Example\Projects\zstack\Sensor /
//                           Network Application\ZIGBEE Coordinator &         /
//                          Router\Source\zcl_zigbee receiver.c" -D ZTOOL_P1  /
//                          -D MT_TASK -D MT_APP_FUNC -D MT_SYS_FUNC -D       /
//                          MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -D             /
//                          Router_receiver -D xHAL_KEYPAD -D xPA2591 -lC     /
//                          "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fi /
//                          nal Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1. /
//                          4.0\Sensor Network Example\Projects\zstack\Sensor /
//                           Network Application\ZIGBEE Coordinator &         /
//                          Router\CC2530DB\Router_KB_PA\List\" -lA           /
//                          "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fi /
//                          nal Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1. /
//                          4.0\Sensor Network Example\Projects\zstack\Sensor /
//                           Network Application\ZIGBEE Coordinator &         /
//                          Router\CC2530DB\Router_KB_PA\List\"               /
//                          --diag_suppress Pe001,Pa010 -o                    /
//                          "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fi /
//                          nal Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1. /
//                          4.0\Sensor Network Example\Projects\zstack\Sensor /
//                           Network Application\ZIGBEE Coordinator &         /
//                          Router\CC2530DB\Router_KB_PA\Obj\" -e             /
//                          --require_prototypes --debug --core=plain         /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fi /
//                          nal Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1. /
//                          4.0\Sensor Network Example\Projects\zstack\Sensor /
//                           Network Application\ZIGBEE Coordinator &         /
//                          Router\CC2530DB\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½ /
//                          ¥q¥X³f¥úºÐ(CC2530)_Final Version\ZIGBEE           /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\SOURCE\" -I                    /
//                          "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fi /
//                          nal Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1. /
//                          4.0\Sensor Network Example\Projects\zstack\Sensor /
//                           Network Application\ZIGBEE Coordinator &         /
//                          Router\CC2530DB\..\..\SOURCE\" -I                 /
//                          "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fi /
//                          nal Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1. /
//                          4.0\Sensor Network Example\Projects\zstack\Sensor /
//                           Network Application\ZIGBEE Coordinator &         /
//                          Router\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I      /
//                          "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fi /
//                          nal Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1. /
//                          4.0\Sensor Network Example\Projects\zstack\Sensor /
//                           Network Application\ZIGBEE Coordinator &         /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MT\"    /
//                          -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530) /
//                          _Final Version\ZIGBEE Example\CC2530_ZStack-2.3.0 /
//                          -1.4.0\Sensor Network Example\Projects\zstack\Sen /
//                          sor Network Application\ZIGBEE Coordinator &      /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INC /
//                          LUDE\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ( /
//                          CC2530)_Final Version\ZIGBEE                      /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TAR /
//                          GET\CC2530KB\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥ /
//                          X³f¥úºÐ(CC2530)_Final Version\ZIGBEE              /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MC /
//                          U\CCSOC\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥ú /
//                          ºÐ(CC2530)_Final Version\ZIGBEE                   /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\IN /
//                          CLUDE\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ /
//                          (CC2530)_Final Version\ZIGBEE                     /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\A /
//                          F\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2 /
//                          530)_Final Version\ZIGBEE                         /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\N /
//                          WK\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC /
//                          2530)_Final Version\ZIGBEE                        /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\S /
//                          EC\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC /
//                          2530)_Final Version\ZIGBEE                        /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\S /
//                          API\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(C /
//                          C2530)_Final Version\ZIGBEE                       /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\S /
//                          YS\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC /
//                          2530)_Final Version\ZIGBEE                        /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\Z /
//                          CL\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC /
//                          2530)_Final Version\ZIGBEE                        /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\Z /
//                          DO\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC /
//                          2530)_Final Version\ZIGBEE                        /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8 /
//                          W\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2 /
//                          530)_Final Version\ZIGBEE                         /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\"  /
//                          -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530) /
//                          _Final Version\ZIGBEE Example\CC2530_ZStack-2.3.0 /
//                          -1.4.0\Sensor Network Example\Projects\zstack\Sen /
//                          sor Network Application\ZIGBEE Coordinator &      /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICE /
//                          S\SADDR\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥ú /
//                          ºÐ(CC2530)_Final Version\ZIGBEE                   /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICE /
//                          S\SDATA\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥ú /
//                          ºÐ(CC2530)_Final Version\ZIGBEE                   /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INC /
//                          LUDE\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ( /
//                          CC2530)_Final Version\ZIGBEE                      /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIG /
//                          H_LEVEL\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥ú /
//                          ºÐ(CC2530)_Final Version\ZIGBEE                   /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW /
//                          _LEVEL\srf04\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥ /
//                          X³f¥úºÐ(CC2530)_Final Version\ZIGBEE              /
//                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Coordinator &                  /
//                          Router\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW /
//                          _LEVEL\srf04\SINGLE_CHIP\" -I "C:\IAR             /
//                          Systems\Embedded Workbench for MCS-51             /
//                          V7.51\8051\INC\" -I "C:\IAR Systems\Embedded      /
//                          Workbench for MCS-51 V7.51\8051\INC\CLIB\" -Ohz   /
//    List file          =  D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fin /
//                          al Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1.4 /
//                          .0\Sensor Network Example\Projects\zstack\Sensor  /
//                          Network Application\ZIGBEE Coordinator &          /
//                          Router\CC2530DB\Router_KB_PA\List\zcl_zigbee      /
//                          receiver.s51                                      /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME `zcl_zigbee receiver`

        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ??zclUartReceiver?relay
        EXTERN ??zclZigbeeReceiver_ProcessIdentifyTimeChange?r
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?UC_SWITCH_SPARSE
        EXTERN ?US_SWITCH_DENSE
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC ??zclUARTMsg_CallBack?relay
        FUNCTION ??zclUARTMsg_CallBack?relay,0203H
        PUBLIC ??zclUartReceiver?relay
        FUNCTION ??zclUartReceiver?relay,0203H
        FUNCTION ??zclZigbeeReceiver_BasicResetCB?relay,0203H
        FUNCTION ??zclZigbeeReceiver_IdentifyCB?relay,0203H
        FUNCTION ??zclZigbeeReceiver_IdentifyQueryRspCB?relay,0203H
        FUNCTION ??zclZigbeeReceiver_OnOffCB?relay,0203H
        FUNCTION ??zclZigbeeReceiver_ProcessIdentifyTimeChange?r,0203H
        PUBLIC ??zclZigbeeRecv_Init?relay
        FUNCTION ??zclZigbeeRecv_Init?relay,0203H
        PUBLIC ??zclZigbeeRecv_event_loop?relay
        FUNCTION ??zclZigbeeRecv_event_loop?relay,0203H
        PUBLIC TransmitApp_Msg
        PUBLIC UartTransmit_Msg
        PUBLIC len
        PUBLIC uart_recv
        PUBLIC zclUARTMsg_CallBack
        FUNCTION zclUARTMsg_CallBack,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC zclUartReceiver
        FUNCTION zclUartReceiver,021203H
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        FUNCTION zclZigbeeReceiver_BasicResetCB,0603H
        ARGFRAME XSTACK, 0, STACK
        FUNCTION zclZigbeeReceiver_IdentifyCB,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        FUNCTION zclZigbeeReceiver_IdentifyQueryRspCB,0603H
        ARGFRAME XSTACK, 0, STACK
        FUNCTION zclZigbeeReceiver_OnOffCB,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        FUNCTION zclZigbeeReceiver_ProcessIdentifyTimeChange,021203H
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC zclZigbeeReceiver_TaskID
        PUBLIC zclZigbeeRecv_DstAddr
        PUBLIC zclZigbeeRecv_Group
        PUBLIC zclZigbeeRecv_Init
        FUNCTION zclZigbeeRecv_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC zclZigbeeRecv_event_loop
        FUNCTION zclZigbeeRecv_event_loop,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 32, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
zclZD_Init          SYMBOL "zclZD_Init"
zclGeneral_RegisterCmdCallbacks SYMBOL "zclGeneral_RegisterCmdCallbacks"
zcl_registerAttrList SYMBOL "zcl_registerAttrList"
zcl_registerForMsg  SYMBOL "zcl_registerForMsg"
RegisterForKeys     SYMBOL "RegisterForKeys"
osal_memcpy         SYMBOL "osal_memcpy"
aps_AddGroup        SYMBOL "aps_AddGroup"
afRegister          SYMBOL "afRegister"
NLME_GetShortAddr   SYMBOL "NLME_GetShortAddr"
ZDP_EndDeviceBindReq SYMBOL "ZDP_EndDeviceBindReq"
osal_msg_deallocate SYMBOL "osal_msg_deallocate"
osal_msg_receive    SYMBOL "osal_msg_receive"
osal_mem_free       SYMBOL "osal_mem_free"
HalLcdWriteChar     SYMBOL "HalLcdWriteChar"
osal_start_timerEx  SYMBOL "osal_start_timerEx"
HalLedBlink         SYMBOL "HalLedBlink"
HalLedSet           SYMBOL "HalLedSet"
osal_stop_timerEx   SYMBOL "osal_stop_timerEx"
Hal_UART_RxBufLen   SYMBOL "Hal_UART_RxBufLen"
HalUARTRead         SYMBOL "HalUARTRead"
osal_set_event      SYMBOL "osal_set_event"
zcl_SendCommand     SYMBOL "zcl_SendCommand"
??HalLcdWriteChar?relay SYMBOL "?relay", HalLcdWriteChar
??HalLedBlink?relay SYMBOL "?relay", HalLedBlink
??HalLedSet?relay   SYMBOL "?relay", HalLedSet
??HalUARTRead?relay SYMBOL "?relay", HalUARTRead
??Hal_UART_RxBufLen?relay SYMBOL "?relay", Hal_UART_RxBufLen
??NLME_GetShortAddr?relay SYMBOL "?relay", NLME_GetShortAddr
??RegisterForKeys?relay SYMBOL "?relay", RegisterForKeys
??ZDP_EndDeviceBindReq?relay SYMBOL "?relay", ZDP_EndDeviceBindReq
??afRegister?relay  SYMBOL "?relay", afRegister
??aps_AddGroup?relay SYMBOL "?relay", aps_AddGroup
??osal_mem_free?relay SYMBOL "?relay", osal_mem_free
??osal_memcpy?relay SYMBOL "?relay", osal_memcpy
??osal_msg_deallocate?relay SYMBOL "?relay", osal_msg_deallocate
??osal_msg_receive?relay SYMBOL "?relay", osal_msg_receive
??osal_set_event?relay SYMBOL "?relay", osal_set_event
??osal_start_timerEx?relay SYMBOL "?relay", osal_start_timerEx
??osal_stop_timerEx?relay SYMBOL "?relay", osal_stop_timerEx
??zclGeneral_RegisterCmdCallbacks?relay SYMBOL "?relay", zclGeneral_RegisterCmdCallbacks
??zclZD_Init?relay  SYMBOL "?relay", zclZD_Init
??zcl_SendCommand?relay SYMBOL "?relay", zcl_SendCommand
??zcl_registerAttrList?relay SYMBOL "?relay", zcl_registerAttrList
??zcl_registerForMsg?relay SYMBOL "?relay", zcl_registerForMsg
zclUARTMsg_CallBack SYMBOL "zclUARTMsg_CallBack"
??zclUARTMsg_CallBack?relay SYMBOL "?relay", zclUARTMsg_CallBack
zclUartReceiver     SYMBOL "zclUartReceiver"
??zclUartReceiver?relay SYMBOL "?relay", zclUartReceiver
zclZigbeeRecv_Init  SYMBOL "zclZigbeeRecv_Init"
??zclZigbeeRecv_Init?relay SYMBOL "?relay", zclZigbeeRecv_Init
zclZigbeeRecv_event_loop SYMBOL "zclZigbeeRecv_event_loop"
??zclZigbeeRecv_event_loop?relay SYMBOL "?relay", zclZigbeeRecv_event_loop

        EXTERN zclZD_Init
        FUNCTION zclZD_Init,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zclGeneral_RegisterCmdCallbacks
        FUNCTION zclGeneral_RegisterCmdCallbacks,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_registerAttrList
        FUNCTION zcl_registerAttrList,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_registerForMsg
        FUNCTION zcl_registerForMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN RegisterForKeys
        FUNCTION RegisterForKeys,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_AddGroup
        FUNCTION aps_AddGroup,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afRegister
        FUNCTION afRegister,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetShortAddr
        FUNCTION NLME_GetShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_EndDeviceBindReq
        FUNCTION ZDP_EndDeviceBindReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_deallocate
        FUNCTION osal_msg_deallocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_receive
        FUNCTION osal_msg_receive,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLcdWriteChar
        FUNCTION HalLcdWriteChar,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLedBlink
        FUNCTION HalLedBlink,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLedSet
        FUNCTION HalLedSet,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_stop_timerEx
        FUNCTION osal_stop_timerEx,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Hal_UART_RxBufLen
        FUNCTION Hal_UART_RxBufLen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTRead
        FUNCTION HalUARTRead,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_set_event
        FUNCTION osal_set_event,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_SendCommand
        FUNCTION zcl_SendCommand,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??HalLcdWriteChar?relay
        FUNCTION ??HalLcdWriteChar?relay,00H
        EXTERN ??HalLedBlink?relay
        FUNCTION ??HalLedBlink?relay,00H
        EXTERN ??HalLedSet?relay
        FUNCTION ??HalLedSet?relay,00H
        EXTERN ??HalUARTRead?relay
        FUNCTION ??HalUARTRead?relay,00H
        EXTERN ??Hal_UART_RxBufLen?relay
        FUNCTION ??Hal_UART_RxBufLen?relay,00H
        EXTERN ??NLME_GetShortAddr?relay
        FUNCTION ??NLME_GetShortAddr?relay,00H
        EXTERN ??RegisterForKeys?relay
        FUNCTION ??RegisterForKeys?relay,00H
        EXTERN ??ZDP_EndDeviceBindReq?relay
        FUNCTION ??ZDP_EndDeviceBindReq?relay,00H
        EXTERN ??afRegister?relay
        FUNCTION ??afRegister?relay,00H
        EXTERN ??aps_AddGroup?relay
        FUNCTION ??aps_AddGroup?relay,00H
        EXTERN ??osal_mem_free?relay
        FUNCTION ??osal_mem_free?relay,00H
        EXTERN ??osal_memcpy?relay
        FUNCTION ??osal_memcpy?relay,00H
        EXTERN ??osal_msg_deallocate?relay
        FUNCTION ??osal_msg_deallocate?relay,00H
        EXTERN ??osal_msg_receive?relay
        FUNCTION ??osal_msg_receive?relay,00H
        EXTERN ??osal_set_event?relay
        FUNCTION ??osal_set_event?relay,00H
        EXTERN ??osal_start_timerEx?relay
        FUNCTION ??osal_start_timerEx?relay,00H
        EXTERN ??osal_stop_timerEx?relay
        FUNCTION ??osal_stop_timerEx?relay,00H
        EXTERN ??zclGeneral_RegisterCmdCallbacks?relay
        FUNCTION ??zclGeneral_RegisterCmdCallbacks?relay,00H
        EXTERN ??zclZD_Init?relay
        FUNCTION ??zclZD_Init?relay,00H
        EXTERN ??zcl_SendCommand?relay
        FUNCTION ??zcl_SendCommand?relay,00H
        EXTERN ??zcl_registerAttrList?relay
        FUNCTION ??zcl_registerAttrList?relay,00H
        EXTERN ??zcl_registerForMsg?relay
        FUNCTION ??zcl_registerForMsg?relay,00H
        EXTERN ch
        EXTERN zclZigbeeRecv_Attrs
        EXTERN zclZigbeeRecv_IdentifyTime
        EXTERN zclZigbeeRecv_OnOff
        EXTERN zclZigbeeRecv_SimpleDesc

// D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Final Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network Example\Projects\zstack\Sensor Network Application\ZIGBEE Coordinator & Router\Source\zcl_zigbee receiver.c
//    1 /**************************************************************************************************
//    2   Filename:       zcl_zigbee receiver.c
//    3   Revised:        $Date: 2009-03-18 15:56:27 -0700 (Wed, 18 Mar 2009) $
//    4   Revision:       $Revision: 19453 $
//    5 
//    6   Description:    Zigbee Cluster Library - ZIGBEE Receiver device application.
//    7 
//    8   Copyright 2006-2009 Texas Instruments Incorporated. All rights reserved.
//    9 
//   10   Should you have any questions regarding your right to use this Software,
//   11   contact Texas Instruments Incorporated at www.TI.com. 
//   12 **************************************************************************************************/
//   13 
//   14 /*************************************************************************************************
//   15   This device will be like a Light device.  This application is not intended to be a Light device, 
//   16   but will use the device description to implement this sample code.
//   17 *************************************************************************************************/
//   18 
//   19 /*********************************************************************
//   20  * INCLUDES
//   21  */
//   22 #include "ZComDef.h"
//   23 #include "OSAL.h"
//   24 #include "AF.h"
//   25 #include "ZDApp.h"
//   26 
//   27 /* ZCL */
//   28 #include "zcl.h"
//   29 #include "zcl_general.h"
//   30 #include "zcl_ha.h"
//   31 #include "zcl_zigbee receiver.h"
//   32 
//   33 /* HAL */
//   34 #include "onboard.h"
//   35 #include "hal_lcd.h"
//   36 #include "hal_led.h"
//   37 #include "hal_timer.h"
//   38 #include "hal_uart.h"
//   39 #include "hal_key.h"
//   40 #include "hal_keypad.h"
//   41 
//   42 /* MAC_high-level */
//   43 #include "mac_high_level.h"
//   44 
//   45 /* MT */
//   46 #include "MT_UART.h"
//   47 #include "MT.h"
//   48 
//   49 /*********************************************************************
//   50  * MACROS
//   51  */
//   52 /*********************************************************************
//   53  * CONSTANTS
//   54  */
//   55  #define TRANSMITAPP_MAX_DATA_LEN    102
//   56 
//   57 /*********************************************************************
//   58  * TYPEDEFS
//   59  */
//   60 /*********************************************************************
//   61  * GLOBAL VARIABLES
//   62  */
//   63 

        RSEG XDATA_Z:XDATA:NOROOT(0)
//   64 byte zclZigbeeReceiver_TaskID; // The zigbee task_ID
zclZigbeeReceiver_TaskID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   65 
//   66 // The UART transmit variable and array
//   67 // the transmit data length

        RSEG XDATA_Z:XDATA:NOROOT(0)
//   68 uint8 len; 
len:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   69 // Transmit message array

        RSEG XDATA_Z:XDATA:NOROOT(0)
//   70 byte TransmitApp_Msg[ TRANSMITAPP_MAX_DATA_LEN ]; 
TransmitApp_Msg:
        DS 102
        REQUIRE __INIT_XDATA_Z
//   71 // The coordinator send to device message array

        RSEG XDATA_Z:XDATA:NOROOT(0)
//   72 byte UartTransmit_Msg[ TRANSMITAPP_MAX_DATA_LEN ]; 
UartTransmit_Msg:
        DS 102
        REQUIRE __INIT_XDATA_Z
//   73 // Receive the UART command

        RSEG XDATA_Z:XDATA:NOROOT(0)
//   74 uint8 uart_recv[TRANSMITAPP_MAX_DATA_LEN]; 
uart_recv:
        DS 102
        REQUIRE __INIT_XDATA_Z
//   75 
//   76 /*********************************************************************
//   77  * GLOBAL FUNCTIONS
//   78  */
//   79 
//   80 /*********************************************************************
//   81  * LOCAL VARIABLES
//   82  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
//   83 afAddrType_t zclZigbeeRecv_DstAddr;  // AF address type
zclZigbeeRecv_DstAddr:
        DS 12
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
//   84 aps_Group_t zclZigbeeRecv_Group;
zclZigbeeRecv_Group:
        DS 18
        REQUIRE __INIT_XDATA_Z
//   85 
//   86 #define ZCLZIGBEERECV_BINDINGLIST       2
//   87 

        RSEG XDATA_I:XDATA:NOROOT(0)
        DATA
//   88 static cId_t bindingInClusters[ZCLZIGBEERECV_BINDINGLIST] =
bindingInClusters:
        DS 4
        REQUIRE `?<Initializer for bindingInClusters>`
        REQUIRE __INIT_XDATA_I
//   89 {
//   90   ZCL_CLUSTER_ID_GEN_ON_OFF,
//   91   ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL
//   92 };
//   93 
//   94 // Test Endpoint to allow SYS_APP_MSGs

        RSEG XDATA_I:XDATA:NOROOT(0)
        DATA
//   95 static endPointDesc_t zigbeeReceiver_TestEp =
zigbeeReceiver_TestEp:
        DS 6
        REQUIRE `?<Initializer for zigbeeReceiver_TestEp>`
        REQUIRE __INIT_XDATA_I
//   96 {
//   97   20,                                 // Test endpoint
//   98   &zclZigbeeReceiver_TaskID,
//   99   (SimpleDescriptionFormat_t *)NULL,  // No Simple description for this test endpoint
//  100   (afNetworkLatencyReq_t)0            // No Network Latency req
//  101 };
//  102 
//  103 /*********************************************************************
//  104  * LOCAL FUNCTIONS
//  105  */
//  106 static void zclZigbeeReceiver_HandleKeys( byte shift, byte keys );
//  107 static void zclZigbeeReceiver_BasicResetCB( void );
//  108 static void zclZigbeeReceiver_IdentifyCB( zclIdentify_t *pCmd );
//  109 static void zclZigbeeReceiver_IdentifyQueryRspCB( zclIdentifyQueryRsp_t *pRsp );
//  110 static void zclZigbeeReceiver_OnOffCB( uint8 cmd );
//  111 static void zclZigbeeReceiver_ProcessIdentifyTimeChange( void );
//  112 
//  113 void zclUARTMsg_CallBack(uint8 port, uint8 event); // The UART Message callback
//  114 void zclUartReceiver( void ); // The coordinator receive command function
//  115 
//  116 // Functions to process ZCL Foundation incoming Command/Response messages 
//  117 static void zclZigbeeReceiver_ProcessIncomingMsg( zclIncomingMsg_t *msg );
//  118 #ifdef ZCL_READ
//  119   static uint8 zclZigbeeReceiver_ProcessInReadRspCmd( zclIncomingMsg_t *pInMsg );
//  120 #endif
//  121 #ifdef ZCL_WRITE
//  122   static uint8 zclZigbeeReceiver_ProcessInWriteRspCmd( zclIncomingMsg_t *pInMsg );
//  123 #endif
//  124   static uint8 zclZigbeeReceiver_ProcessInDefaultRspCmd( zclIncomingMsg_t *pInMsg );
//  125 #ifdef ZCL_DISCOVER
//  126   static uint8 zclZigbeeReceiver_ProcessInDiscRspCmd( zclIncomingMsg_t *pInMsg );
//  127 #endif
//  128   
//  129 /*********************************************************************
//  130  * ZCL General Profile Callback table
//  131  */

        RSEG XDATA_I:XDATA:NOROOT(0)
        DATA
//  132 static zclGeneral_AppCallbacks_t zclZigbeeReceiver_CmdCallbacks =
zclZigbeeReceiver_CmdCallbacks:
        DS 30
        REQUIRE `?<Initializer for zclZigbeeReceiver_CmdCallbac`
        REQUIRE __INIT_XDATA_I
//  133 {
//  134   zclZigbeeReceiver_BasicResetCB,              // Basic Cluster Reset command
//  135   zclZigbeeReceiver_IdentifyCB,                // Identify command  
//  136   zclZigbeeReceiver_IdentifyQueryRspCB,        // Identify Query Response command
//  137   zclZigbeeReceiver_OnOffCB,                   // On/Off cluster command
//  138   NULL,                                        // Level Control Move to Level command
//  139   NULL,                                        // Level Control Move command
//  140   NULL,                                        // Level Control Step command
//  141   NULL,                                        // Group Response commands
//  142   NULL,                                        // Scene Store Request command
//  143   NULL,                                        // Scene Recall Request command
//  144   NULL,                                        // Scene Response command
//  145   NULL,                                        // Alarm (Response) command
//  146   NULL,                                        // RSSI Location commands
//  147   NULL,                                        // RSSI Location Response commands
//  148 };
//  149 
//  150 /*********************************************************************
//  151  * @fn          zclZigbeeRecv_Init
//  152  * @brief       Initialization function for the zclGeneral layer.
//  153  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  154 void zclZigbeeRecv_Init( byte task_id )
zclZigbeeRecv_Init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function zclZigbeeRecv_Init
//  155 {
        FUNCALL zclZigbeeRecv_Init, zclZD_Init
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeRecv_Init, zclGeneral_RegisterCmdCallbacks
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeRecv_Init, zcl_registerAttrList
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeRecv_Init, zcl_registerForMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeRecv_Init, RegisterForKeys
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeRecv_Init, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeRecv_Init, aps_AddGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeRecv_Init, afRegister
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 0
//  156   zclZigbeeReceiver_TaskID = task_id;
        MOV     A,R1
        MOV     DPTR,#zclZigbeeReceiver_TaskID
        MOVX    @DPTR,A
//  157   
//  158   // Setup for the flash command's destination address ( Group )
//  159   zclZigbeeRecv_DstAddr.addrMode = (afAddrMode_t)afAddrGroup;  // transmit mode - Group address
        MOV     A,#0x1
        MOV     DPTR,#(zclZigbeeRecv_DstAddr + 8)
        MOVX    @DPTR,A
//  160   zclZigbeeRecv_DstAddr.endPoint = ZIGBEERECV_ENDPOINT;        // end-point number:20
        MOV     A,#0xd
        MOV     DPTR,#(zclZigbeeRecv_DstAddr + 9)
        MOVX    @DPTR,A
//  161   zclZigbeeRecv_DstAddr.addr.shortAddr = RECV_GROUP;           // Group short address
        MOV     DPTR,#zclZigbeeRecv_DstAddr
        MOV     A,#0x10
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x20
        MOVX    @DPTR,A
//  162   
//  163   // This App is part of the Zigbee Device Profile
//  164   zclZD_Init( &zclZigbeeRecv_SimpleDesc ); 
        ; Setup parameters for call to function zclZD_Init
        MOV     R2,#(zclZigbeeRecv_SimpleDesc & 0xff)
        MOV     R3,#((zclZigbeeRecv_SimpleDesc >> 8) & 0xff)
        LCALL   ??zclZD_Init?relay
//  165   
//  166   // Register the ZCL General Cluster Library callback functions
//  167   zclGeneral_RegisterCmdCallbacks( ZIGBEERECV_ENDPOINT, &zclZigbeeReceiver_CmdCallbacks ); 
        ; Setup parameters for call to function zclGeneral_RegisterCmdCallbacks
        MOV     R2,#(zclZigbeeReceiver_CmdCallbacks & 0xff)
        MOV     R3,#((zclZigbeeReceiver_CmdCallbacks >> 8) & 0xff)
        MOV     R1,#0xd
        LCALL   ??zclGeneral_RegisterCmdCallbacks?relay
//  168   
//  169   // Register the application's attribute list
//  170   zcl_registerAttrList( ZIGBEERECV_ENDPOINT, ZIGBEERECV_MAX_ATTRIBUTES, zclZigbeeRecv_Attrs ); 
        ; Setup parameters for call to function zcl_registerAttrList
        MOV     R4,#(zclZigbeeRecv_Attrs & 0xff)
        MOV     R5,#((zclZigbeeRecv_Attrs >> 8) & 0xff)
        MOV     R2,#0xc
        MOV     R1,#0xd
        LCALL   ??zcl_registerAttrList?relay
//  171   
//  172   // Register the Application to receive the unprocessed Foundation command/response messages
//  173   zcl_registerForMsg( zclZigbeeReceiver_TaskID ); 
        ; Setup parameters for call to function zcl_registerForMsg
        MOV     DPTR,#zclZigbeeReceiver_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??zcl_registerForMsg?relay
//  174   
//  175   // Register for all key events - This app will handle all key events
//  176   RegisterForKeys( zclZigbeeReceiver_TaskID ); 
        ; Setup parameters for call to function RegisterForKeys
        MOV     DPTR,#zclZigbeeReceiver_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??RegisterForKeys?relay
//  177   
//  178   // By default, all devices start out in Group 1 ( register grouop )
//  179   zclZigbeeRecv_Group.ID = RECV_GROUP;
        MOV     DPTR,#zclZigbeeRecv_Group
        MOV     A,#0x10
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x20
        MOVX    @DPTR,A
//  180   osal_memcpy( zclZigbeeRecv_Group.name, "RECV_GROUP", 8  );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0 + 0,#(`?<Constant "RECV_GROUP">` & 0xff)
        MOV     ?V0 + 1,#((`?<Constant "RECV_GROUP">` >> 8) & 0xff)
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_THREE
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     R2,#((zclZigbeeRecv_Group + 2) & 0xff)
        MOV     R3,#(((zclZigbeeRecv_Group + 2) >> 8) & 0xff)
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
//  181   aps_AddGroup( ZIGBEERECV_ENDPOINT, &zclZigbeeRecv_Group ); 
        ; Setup parameters for call to function aps_AddGroup
        MOV     R2,#(zclZigbeeRecv_Group & 0xff)
        MOV     R3,#((zclZigbeeRecv_Group >> 8) & 0xff)
        MOV     R1,#0xd
        LCALL   ??aps_AddGroup?relay
//  182   
//  183   // Register for a test endpoint
//  184   afRegister( &zigbeeReceiver_TestEp ); 
        ; Setup parameters for call to function afRegister
        MOV     R2,#(zigbeeReceiver_TestEp & 0xff)
        MOV     R3,#((zigbeeReceiver_TestEp >> 8) & 0xff)
        LCALL   ??afRegister?relay
//  185 }
        MOV     R7,#0x3
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock0
//  186 
//  187 /*********************************************************************
//  188  * @fn          zclZigbeeRecv_event_loop
//  189  * @brief       Event Loop Processor for zclGeneral.
//  190  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  191 uint16 zclZigbeeRecv_event_loop( uint8 task_id, uint16 events )
zclZigbeeRecv_event_loop:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function zclZigbeeRecv_event_loop
//  192 { 
        FUNCALL zclZigbeeRecv_event_loop, zclZigbeeReceiver_ProcessIdentifyTimeChange
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeRecv_event_loop, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeRecv_event_loop, ZDP_EndDeviceBindReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeRecv_event_loop, osal_msg_deallocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeRecv_event_loop, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeRecv_event_loop, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeRecv_event_loop, zclUartReceiver
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeRecv_event_loop, HalLcdWriteChar
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 9
        MOV     A,#-0x9
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
//  193   afIncomingMSGPacket_t *MSGpkt;
//  194   (void)task_id;  // Intentionally unreferenced parameter
//  195   
//  196   if ( events & SYS_EVENT_MSG ) // SYSTEM Message event
        MOV     A,#-0x80
        ANL     A,?V0 + 3
        MOV     R1,A
        CLR     A
        JNZ     ??zclZigbeeRecv_event_loop_0
        MOV     A,R1
??zclZigbeeRecv_event_loop_0:
        JZ      $+5
        LJMP    ??zclZigbeeRecv_event_loop_1 & 0xFFFF
//  197   {
//  198     while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( zclZigbeeReceiver_TaskID )) )
//  199     { 
//  200       switch ( MSGpkt->hdr.event )
//  201       {
//  202       case ZCL_INCOMING_MSG: //0x34 : Incoming ZCL foundation message
//  203           
//  204           // Incoming ZCL Foundation command/response messages
//  205           zclZigbeeReceiver_ProcessIncomingMsg( (zclIncomingMsg_t *)MSGpkt ); 
//  206           break;
//  207           
//  208       case KEY_CHANGE: //0xC0 : Key Events
//  209           zclZigbeeReceiver_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
//  210           break;
//  211 
//  212         default:
//  213           break;
//  214       }
//  215       osal_msg_deallocate( (uint8 *)MSGpkt ); // Release the memory
//  216     }
//  217     return (events ^ SYS_EVENT_MSG); // return unprocessed events
//  218   }
//  219   
//  220   // The user define application events
//  221   switch ( events )
        MOV     R0,#?V0 + 2
        LCALL   ?US_SWITCH_DENSE
`?<Jumptable for zclZigbeeRecv_event_loop>_0`:
        DATA
        DW        1
        DB        2
        DW        ??zclZigbeeRecv_event_loop_2
        DW        ??zclZigbeeRecv_event_loop_3
        DW        ??zclZigbeeRecv_event_loop_4
        DW        ??zclZigbeeRecv_event_loop_5
        CODE
//  222   {
//  223     case SAMPLELIGHT_IDENTIFY_TIMEOUT_EVT: // ZIGBEE Receiver identify timeout event
//  224       if ( zclZigbeeRecv_IdentifyTime > 0 )
??zclZigbeeRecv_event_loop_3:
        MOV     DPTR,#zclZigbeeRecv_IdentifyTime
        MOVX    A,@DPTR
        JNZ     ??zclZigbeeRecv_event_loop_6
        INC     DPTR
        MOVX    A,@DPTR
??zclZigbeeRecv_event_loop_6:
        JZ      ??zclZigbeeRecv_event_loop_7
//  225            zclZigbeeRecv_IdentifyTime--;
        MOV     DPTR,#zclZigbeeRecv_IdentifyTime
        MOVX    A,@DPTR
        ADD     A,#-0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
        MOVX    @DPTR,A
//  226            zclZigbeeReceiver_ProcessIdentifyTimeChange();
??zclZigbeeRecv_event_loop_7:
        ; Setup parameters for call to function zclZigbeeReceiver_ProcessIdentifyTimeChange
        LCALL   ??zclZigbeeReceiver_ProcessIdentifyTimeChange?r
        LJMP    ??zclZigbeeRecv_event_loop_2 & 0xFFFF
??zclZigbeeRecv_event_loop_8:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        JNC     ??zclZigbeeRecv_event_loop_9
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        ; Setup parameters for call to function ZDP_EndDeviceBindReq
        MOV     ?V0 + 4,#0x1
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 4,#0x0
        MOV     ?V0 + 5,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 26)
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 27)
        MOV     ?V0 + 4,#(bindingInClusters & 0xff)
        MOV     ?V0 + 5,#((bindingInClusters >> 8) & 0xff)
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V0 + 4,#0x2
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0 + 4,#0x4
        MOV     ?V0 + 5,#0x1
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 32)
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   ??NLME_GetShortAddr?relay
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     R1,#0xd
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_EndDeviceBindReq?relay
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 23)
??zclZigbeeRecv_event_loop_9:
        ; Setup parameters for call to function osal_msg_deallocate
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??osal_msg_deallocate?relay
??zclZigbeeRecv_event_loop_1:
        ; Setup parameters for call to function osal_msg_receive
        MOV     DPTR,#zclZigbeeReceiver_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_msg_receive?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R2
        JNZ     ??zclZigbeeRecv_event_loop_10
        MOV     A,R3
??zclZigbeeRecv_event_loop_10:
        JZ      ??zclZigbeeRecv_event_loop_11
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        LCALL   ?UC_SWITCH_SPARSE
`?<Jumptable for zclZigbeeRecv_event_loop>_1`:
        DATA
        DB        0
        DB        2
        DB        52
        DW        ??zclZigbeeRecv_event_loop_12
        DB        192
        DW        ??zclZigbeeRecv_event_loop_8
        DW        ??zclZigbeeRecv_event_loop_9
        CODE
??zclZigbeeRecv_event_loop_12:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        LCALL   ?UC_SWITCH_SPARSE
`?<Jumptable for zclZigbeeRecv_event_loop>_2`:
        DATA
        DB        0
        DB        2
        DB        1
        DW        ??zclZigbeeRecv_event_loop_13
        DB        4
        DW        ??zclZigbeeRecv_event_loop_14
        DW        ??zclZigbeeRecv_event_loop_15
        CODE
??zclZigbeeRecv_event_loop_13:
        LCALL   ?Subroutine0 & 0xFFFF
??CrossCallReturnLabel_0:
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R3
        CLR     C
        SUBB    A,R2
        JNC     ??zclZigbeeRecv_event_loop_15
        INC     R3
        SJMP    ??CrossCallReturnLabel_0
??zclZigbeeRecv_event_loop_14:
        LCALL   ?Subroutine0 & 0xFFFF
??CrossCallReturnLabel_1:
        SJMP    ??zclZigbeeRecv_event_loop_16
??zclZigbeeRecv_event_loop_17:
        INC     R3
??zclZigbeeRecv_event_loop_16:
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R3
        CLR     C
        SUBB    A,R2
        JC      ??zclZigbeeRecv_event_loop_17
??zclZigbeeRecv_event_loop_15:
        MOV     A,?V0 + 0
        ADD     A,#0x16
        MOV     DPL,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R2
        JNZ     ??zclZigbeeRecv_event_loop_18
        MOV     A,R3
??zclZigbeeRecv_event_loop_18:
        JZ      ??zclZigbeeRecv_event_loop_9
        ; Setup parameters for call to function osal_mem_free
        LCALL   ??osal_mem_free?relay
        SJMP    ??zclZigbeeRecv_event_loop_9
??zclZigbeeRecv_event_loop_11:
        MOV     R2,?V0 + 2
        MOV     A,#-0x80
        XRL     A,?V0 + 3
        MOV     R3,A
        SJMP    ??zclZigbeeRecv_event_loop_19
//  227       break;
//  228     
//  229     case UART_MSG_EVT: // The UART Message event
//  230       zclUartReceiver();
??zclZigbeeRecv_event_loop_4:
        ; Setup parameters for call to function zclUartReceiver
        LCALL   ??zclUartReceiver?relay
        SJMP    ??zclZigbeeRecv_event_loop_2
//  231       break;
//  232     
//  233     case KEYPAD_MSG_EVT: // The KEYPAD keyin event
//  234       #if defined( LCD_SUPPORTED )
//  235         HalLcdWriteChar(HAL_LCD_LINE_3, 0, ch);
??zclZigbeeRecv_event_loop_5:
        ; Setup parameters for call to function HalLcdWriteChar
        MOV     DPTR,#ch
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     R2,#0x0
        MOV     R1,#0x3
        LCALL   ??HalLcdWriteChar?relay
//  236       #endif
//  237       break;
//  238   }
//  239   
//  240   return 0; // Discard unknown events
??zclZigbeeRecv_event_loop_2:
        MOV     R2,#0x0
        MOV     R3,#0x0
??zclZigbeeRecv_event_loop_19:
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//  241 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiCond2 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_0
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond3 Using cfiCommon0
        CFI (cfiCond3) NoFunction
        CFI (cfiCond3) Conditional ??CrossCallReturnLabel_1
        CFI (cfiCond3) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond3) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond3) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond3) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond3) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond3) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond3) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond3) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond3) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond3) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond3) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond3) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond3) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond3) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond3) CFA_SP SP+0
        CFI (cfiCond3) CFA_XSP16 add(XSP16, 23)
        CFI Block cfiPicker4 Using cfiCommon1
        CFI (cfiPicker4) NoFunction
        CFI (cfiPicker4) Picker
        MOV     A,R2
        ADD     A,#0x16
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     R3,#0x0
        RET
        CFI EndBlock cfiCond2
        CFI EndBlock cfiCond3
        CFI EndBlock cfiPicker4
//  242 
//  243 /*********************************************************************
//  244  * @fn      zclZigbeeReceiver_HandleKeys
//  245  * @brief   Handles all key events for this device.
//  246  * @param   shift - true if in shift/alt.
//  247  * @param   keys - bit field for key events.
//  248  *          Valid entries: HAL_KEY_SW_1(MCU-K1)                        
//  249  */
//  250 static void zclZigbeeReceiver_HandleKeys( byte shift, byte keys )
//  251 {
//  252   zAddrType_t dstAddr;
//  253   (void)shift; // Intentionally unreferenced parameter
//  254   
//  255 #if defined(Coor_receiver) || defined (Router_receiver)
//  256 
//  257   if ( keys & HAL_KEY_SW1 ) // Init EndDevice bind reequest, and use cluster list important to binding.
//  258   {
//  259     dstAddr.addrMode = afAddr16Bit;
//  260     dstAddr.addr.shortAddr = 0x0000;   // Coordinator makes the match
//  261     ZDP_EndDeviceBindReq( &dstAddr, NLME_GetShortAddr(), ZIGBEERECV_ENDPOINT, // ZIGBEERECV_ENDPOINT = 13 is coordinator
//  262                           ZCL_HA_PROFILE_ID, ZCLZIGBEERECV_BINDINGLIST, bindingInClusters, 0,
//  263                           NULL, // No Outgoing clusters to bind
//  264                           TRUE );
//  265   }
//  266   
//  267   if ( keys & HAL_KEY_SW2 ) 
//  268   {
//  269     
//  270   }
//  271   
//  272 #endif
//  273 }
//  274 
//  275 /*********************************************************************
//  276  * @fn      zclZigbeeReceiver_ProcessIdentifyTimeChange
//  277  * @brief   Called to process any change to the IdentifyTime attribute.
//  278  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  279 static void zclZigbeeReceiver_ProcessIdentifyTimeChange( void )
zclZigbeeReceiver_ProcessIdentifyTimeChange:
        CFI Block cfiBlock5 Using cfiCommon0
        CFI Function zclZigbeeReceiver_ProcessIdentifyTimeChange
//  280 {
        FUNCALL zclZigbeeReceiver_ProcessIdentifyTimeChange, osal_start_timerEx
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeReceiver_ProcessIdentifyTimeChange, HalLedBlink
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeReceiver_ProcessIdentifyTimeChange, HalLedSet
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeReceiver_ProcessIdentifyTimeChange, HalLedSet
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeReceiver_ProcessIdentifyTimeChange, osal_stop_timerEx
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  281   if ( zclZigbeeRecv_IdentifyTime > 0 )
        MOV     DPTR,#zclZigbeeRecv_IdentifyTime
        MOVX    A,@DPTR
        JNZ     ??zclZigbeeReceiver_ProcessIdentifyTimeChange_0
        INC     DPTR
        MOVX    A,@DPTR
??zclZigbeeReceiver_ProcessIdentifyTimeChange_0:
        JZ      ??zclZigbeeReceiver_ProcessIdentifyTimeChange_1
//  282   {
//  283     osal_start_timerEx( zclZigbeeReceiver_TaskID, SAMPLELIGHT_IDENTIFY_TIMEOUT_EVT, 1000 );
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#-0x18
        MOV     R5,#0x3
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#zclZigbeeReceiver_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//  284     HalLedBlink ( HAL_LED_2, 0xFF, HAL_LED_DEFAULT_DUTY_CYCLE, HAL_LED_DEFAULT_FLASH_TIME );
        ; Setup parameters for call to function HalLedBlink
        MOV     R4,#-0x18
        MOV     R5,#0x3
        MOV     R3,#0x5
        MOV     R2,#-0x1
        MOV     R1,#0x2
        LCALL   ??HalLedBlink?relay
        SJMP    ??zclZigbeeReceiver_ProcessIdentifyTimeChange_2
//  285   }
//  286   else
//  287     {
//  288       if ( zclZigbeeRecv_OnOff )
??zclZigbeeReceiver_ProcessIdentifyTimeChange_1:
        MOV     DPTR,#zclZigbeeRecv_OnOff
        MOVX    A,@DPTR
        JZ      ??zclZigbeeReceiver_ProcessIdentifyTimeChange_3
//  289       {
//  290         HalLedSet ( HAL_LED_1, HAL_LED_MODE_ON );
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x1
        MOV     R1,#0x1
        LCALL   ??HalLedSet?relay
        SJMP    ??zclZigbeeReceiver_ProcessIdentifyTimeChange_2
//  291       }
//  292       else
//  293         {
//  294           HalLedSet ( HAL_LED_1, HAL_LED_MODE_OFF );
??zclZigbeeReceiver_ProcessIdentifyTimeChange_3:
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x0
        MOV     R1,#0x1
        LCALL   ??HalLedSet?relay
//  295           osal_stop_timerEx( zclZigbeeReceiver_TaskID, SAMPLELIGHT_IDENTIFY_TIMEOUT_EVT );
        ; Setup parameters for call to function osal_stop_timerEx
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#zclZigbeeReceiver_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_stop_timerEx?relay
        CFI EndBlock cfiBlock5
//  296         }
//  297     }
//  298 }
??zclZigbeeReceiver_ProcessIdentifyTimeChange_2:
        REQUIRE ?Subroutine1
        ; // Fall through to label ?Subroutine1

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
        CFI CFA_SP SP+-4
        CFI DPH0 SameValue
        POP     DPL
        CFI CFA_SP SP+-3
        CFI DPL0 SameValue
        LJMP    ?BRET
        CFI EndBlock cfiBlock6
//  299 
//  300 /*********************************************************************
//  301  * @fn      zclZigbeeReceiver_BasicResetCB
//  302  * @brief   Callback from the ZCL General Cluster Library
//  303  *          to set all the Basic Cluster attributes to default values.
//  304  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  305 static void zclZigbeeReceiver_BasicResetCB( void )
zclZigbeeReceiver_BasicResetCB:
        CFI Block cfiBlock7 Using cfiCommon0
        CFI Function zclZigbeeReceiver_BasicResetCB
//  306 {
        ; Saved register size: 0
        ; Auto size: 0
//  307   // Reset all attributes to default values
//  308 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock7
//  309 
//  310 /*********************************************************************
//  311  * @fn      zclZigbeeReceiver_IdentifyCB
//  312  * @brief   Callback from the ZCL General Cluster Library when
//  313  *          it received an Identity Command for this application.
//  314  * @param   srcAddr - source address and endpoint of the response message
//  315  *          identifyTime - the number of seconds to identify yourself
//  316  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  317 static void zclZigbeeReceiver_IdentifyCB( zclIdentify_t *pCmd )
zclZigbeeReceiver_IdentifyCB:
        CFI Block cfiBlock8 Using cfiCommon0
        CFI Function zclZigbeeReceiver_IdentifyCB
//  318 {
        FUNCALL zclZigbeeReceiver_IdentifyCB, zclZigbeeReceiver_ProcessIdentifyTimeChange
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  319   zclZigbeeRecv_IdentifyTime = pCmd->identifyTime;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPTR,#zclZigbeeRecv_IdentifyTime
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
//  320   zclZigbeeReceiver_ProcessIdentifyTimeChange();
        ; Setup parameters for call to function zclZigbeeReceiver_ProcessIdentifyTimeChange
        LCALL   ??zclZigbeeReceiver_ProcessIdentifyTimeChange?r
//  321 }
        SJMP    ?Subroutine1
        CFI EndBlock cfiBlock8
//  322 
//  323 /*********************************************************************
//  324  * @fn      zclZigbeeReceiver_IdentifyQueryRspCB
//  325  * @brief   Callback from the ZCL General Cluster Library when
//  326  *          it received an Identity Query Response Command for this application.
//  327  * @param   srcAddr - requestor's address
//  328  *          timeout - number of seconds to identify yourself (valid for query response)
//  329  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  330 static void zclZigbeeReceiver_IdentifyQueryRspCB( zclIdentifyQueryRsp_t *pRsp )
zclZigbeeReceiver_IdentifyQueryRspCB:
        CFI Block cfiBlock9 Using cfiCommon0
        CFI Function zclZigbeeReceiver_IdentifyQueryRspCB
//  331 {
        ; Saved register size: 0
        ; Auto size: 0
//  332   (void)pRsp; // Query Response (with timeout value)
//  333 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock9
//  334 
//  335 /*********************************************************************
//  336  * @fn      zclZigbeeReceiver_OnOffCB
//  337  * @brief   Callback from the ZCL General Cluster Library when
//  338  *          it received an On/Off Command for this application.
//  339  * @param   cmd - COMMAND_ON, COMMAND_OFF or COMMAND_TOGGLE
//  340  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  341 static void zclZigbeeReceiver_OnOffCB( uint8 cmd )
zclZigbeeReceiver_OnOffCB:
        CFI Block cfiBlock10 Using cfiCommon0
        CFI Function zclZigbeeReceiver_OnOffCB
//  342 { 
        FUNCALL zclZigbeeReceiver_OnOffCB, HalLedSet
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclZigbeeReceiver_OnOffCB, HalLedSet
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  343   if ( cmd == COMMAND_ON ) // Turn on the light
        MOV     A,#0x1
        XRL     A,R1
        JNZ     ??zclZigbeeReceiver_OnOffCB_0
//  344     zclZigbeeRecv_OnOff = LIGHT_ON;
??zclZigbeeReceiver_OnOffCB_1:
        MOV     A,#0x1
??zclZigbeeReceiver_OnOffCB_2:
        MOV     DPTR,#zclZigbeeRecv_OnOff
        MOVX    @DPTR,A
//  345 
//  346   else if ( cmd == COMMAND_OFF ) // Turn off the light
//  347     zclZigbeeRecv_OnOff = LIGHT_OFF;
//  348 
//  349   else // Toggle the light
//  350   {
//  351     if ( zclZigbeeRecv_OnOff == LIGHT_OFF )
//  352           zclZigbeeRecv_OnOff = LIGHT_ON;
//  353     else
//  354           zclZigbeeRecv_OnOff = LIGHT_OFF;
//  355   }
//  356 
//  357   // In this sample app, we use LED4 to simulate the Light  
//  358   if ( zclZigbeeRecv_OnOff == LIGHT_ON )
//  359   {
//  360     HalLedSet( HAL_LED_2, HAL_LED_MODE_ON ); // setting the LED_1 on
        ; Setup parameters for call to function HalLedSet
        MOV     R2,A
        MOV     R1,#0x2
        LCALL   ??HalLedSet?relay
//  361   }
//  362   else
//  363     HalLedSet( HAL_LED_2, HAL_LED_MODE_OFF ); // setting the LED_1 off
//  364 }
        SJMP    ?Subroutine1
??zclZigbeeReceiver_OnOffCB_0:
        MOV     A,R1
        JNZ     ??zclZigbeeReceiver_OnOffCB_3
??zclZigbeeReceiver_OnOffCB_4:
        CLR     A
        SJMP    ??zclZigbeeReceiver_OnOffCB_2
??zclZigbeeReceiver_OnOffCB_3:
        MOV     DPTR,#zclZigbeeRecv_OnOff
        MOVX    A,@DPTR
        JNZ     ??zclZigbeeReceiver_OnOffCB_4
        SJMP    ??zclZigbeeReceiver_OnOffCB_1
        CFI EndBlock cfiBlock10
//  365 /****************************************************************************** 
//  366  * 
//  367  *  Functions for processing ZCL Foundation incoming Command/Response messages
//  368  *
//  369  *****************************************************************************/
//  370 
//  371 /*********************************************************************
//  372  * @fn      zclZigbeeReceiver_ProcessIncomingMsg
//  373  * @brief   Process ZCL Foundation incoming message
//  374  * @param   pInMsg - pointer to the received message
//  375  */
//  376 static void zclZigbeeReceiver_ProcessIncomingMsg( zclIncomingMsg_t *pInMsg)
//  377 {
//  378   switch ( pInMsg->zclHdr.commandID )
//  379   {
//  380 #ifdef ZCL_READ
//  381     case ZCL_CMD_READ_RSP:
//  382       zclZigbeeReceiver_ProcessInReadRspCmd( pInMsg );
//  383       break;
//  384 #endif
//  385       
//  386 #ifdef ZCL_WRITE    
//  387     case ZCL_CMD_WRITE_RSP:
//  388       zclZigbeeReceiver_ProcessInWriteRspCmd( pInMsg );
//  389       break;
//  390 #endif
//  391       
//  392 #ifdef ZCL_REPORT
//  393     case ZCL_CMD_CONFIG_REPORT: // See ZCL Test Applicaiton (zcl_testapp.c) for sample code on Attribute Reporting
//  394       //zclSampleLight_ProcessInConfigReportCmd( pInMsg );
//  395       break;
//  396     
//  397     case ZCL_CMD_CONFIG_REPORT_RSP:
//  398       //zclSampleLight_ProcessInConfigReportRspCmd( pInMsg );
//  399       break;
//  400     
//  401     case ZCL_CMD_READ_REPORT_CFG:
//  402       //zclSampleLight_ProcessInReadReportCfgCmd( pInMsg );
//  403       break;
//  404     
//  405     case ZCL_CMD_READ_REPORT_CFG_RSP:
//  406       //zclSampleLight_ProcessInReadReportCfgRspCmd( pInMsg );
//  407       break;
//  408     
//  409     case ZCL_CMD_REPORT:
//  410       //zclSampleLight_ProcessInReportCmd( pInMsg );
//  411       break;
//  412 #endif   
//  413       
//  414     case ZCL_CMD_DEFAULT_RSP:
//  415       zclZigbeeReceiver_ProcessInDefaultRspCmd( pInMsg );
//  416       break;
//  417       
//  418 #ifdef ZCL_DISCOVER     
//  419     case ZCL_CMD_DISCOVER_RSP:
//  420       zclZigbeeReceiver_ProcessInDiscRspCmd( pInMsg );
//  421       break;
//  422 #endif
//  423       
//  424     default:
//  425       break;
//  426   }
//  427   if ( pInMsg->attrCmd )
//  428     osal_mem_free( pInMsg->attrCmd );
//  429 }
//  430 
//  431 #ifdef ZCL_READ
//  432 /*********************************************************************
//  433  * @fn      zclZigbeeReceiver_ProcessInReadRspCmd
//  434  * @brief   Process the "Profile" Read Response Command
//  435  * @param   pInMsg - incoming message to process
//  436  */
//  437 static uint8 zclZigbeeReceiver_ProcessInReadRspCmd( zclIncomingMsg_t *pInMsg )
//  438 {
//  439   zclReadRspCmd_t *readRspCmd;
//  440   uint8 i;
//  441 
//  442   readRspCmd = (zclReadRspCmd_t *)pInMsg->attrCmd;
//  443   for (i = 0; i < readRspCmd->numAttr; i++)
//  444   {
//  445     // Notify the originator of the results of the original read attributes attempt and, 
//  446     // for each successfull request, the value of the requested attribute
//  447   }
//  448   return TRUE; 
//  449 }
//  450 #endif // ZCL_READ
//  451 
//  452 #ifdef ZCL_WRITE
//  453 /*********************************************************************
//  454  * @fn      zclZigbeeReceiver_ProcessInWriteRspCmd
//  455  * @brief   Process the "Profile" Write Response Command
//  456  * @param   pInMsg - incoming message to process
//  457  */
//  458 static uint8 zclZigbeeReceiver_ProcessInWriteRspCmd( zclIncomingMsg_t *pInMsg )
//  459 {
//  460   zclWriteRspCmd_t *writeRspCmd;
//  461   uint8 i;
//  462 
//  463   writeRspCmd = (zclWriteRspCmd_t *)pInMsg->attrCmd;
//  464   for (i = 0; i < writeRspCmd->numAttr; i++)
//  465   {
//  466     // Notify the device of the results of the its original write attributes command.
//  467   }
//  468   return TRUE; 
//  469 }
//  470 #endif // ZCL_WRITE
//  471 
//  472 /*********************************************************************
//  473  * @fn      zclZigbeeReceiver_ProcessInDefaultRspCmd
//  474  * @brief   Process the "Profile" Default Response Command
//  475  * @param   pInMsg - incoming message to process
//  476  */
//  477 static uint8 zclZigbeeReceiver_ProcessInDefaultRspCmd( zclIncomingMsg_t *pInMsg )
//  478 {
//  479   // zclDefaultRspCmd_t *defaultRspCmd = (zclDefaultRspCmd_t *)pInMsg->attrCmd; 
//  480   // Device is notified of the Default Response command.
//  481   (void)pInMsg;
//  482   return TRUE; 
//  483 }
//  484 
//  485 #ifdef ZCL_DISCOVER
//  486 /*********************************************************************
//  487  * @fn      zclZigbeeReceiver_ProcessInDiscRspCmd
//  488  * @brief   Process the "Profile" Discover Response Command
//  489  * @param   pInMsg - incoming message to process
//  490  */
//  491 static uint8 zclZigbeeReceiver_ProcessInDiscRspCmd( zclIncomingMsg_t *pInMsg )
//  492 {
//  493   zclDiscoverRspCmd_t *discoverRspCmd;
//  494   uint8 i;
//  495   
//  496   discoverRspCmd = (zclDiscoverRspCmd_t *)pInMsg->attrCmd;
//  497   for ( i = 0; i < discoverRspCmd->numAttr; i++ )
//  498   {
//  499     // Device is notified of the result of its attribute discovery command.
//  500   }
//  501   return TRUE;
//  502 }
//  503 #endif // ZCL_DISCOVER
//  504 
//  505 /****************************************************************************
//  506 ****************************************************************************/
//  507 
//  508 /*********************************************************************
//  509  * @fn      zclUARTMsg_CallBack
//  510  * @brief   Send data OTA.
//  511  * @param   port - UART port.
//  512  * @param   event - the UART port event flag.
//  513  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  514 void zclUARTMsg_CallBack(uint8 port, uint8 event)
zclUARTMsg_CallBack:
        CFI Block cfiBlock11 Using cfiCommon0
        CFI Function zclUARTMsg_CallBack
//  515 {
        FUNCALL zclUARTMsg_CallBack, Hal_UART_RxBufLen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclUARTMsg_CallBack, Hal_UART_RxBufLen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclUARTMsg_CallBack, HalUARTRead
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclUARTMsg_CallBack, osal_set_event
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  516   (void)port;
//  517   
//  518   if(Hal_UART_RxBufLen( MT_UART_DEFAULT_PORT) > 0 )
        ; Setup parameters for call to function Hal_UART_RxBufLen
        MOV     R1,#0x0
        LCALL   ??Hal_UART_RxBufLen?relay
        MOV     A,R2
        JNZ     ??zclUARTMsg_CallBack_0
        MOV     A,R3
??zclUARTMsg_CallBack_0:
        JZ      ??zclUARTMsg_CallBack_1
//  519   {
//  520       len = Hal_UART_RxBufLen( MT_UART_DEFAULT_PORT );
        ; Setup parameters for call to function Hal_UART_RxBufLen
        MOV     R1,#0x0
        LCALL   ??Hal_UART_RxBufLen?relay
        MOV     A,R2
        MOV     DPTR,#len
        MOVX    @DPTR,A
//  521       HalUARTRead( MT_UART_DEFAULT_PORT, TransmitApp_Msg, len );
        ; Setup parameters for call to function HalUARTRead
        MOV     R4,A
        MOV     R5,#0x0
        MOV     R2,#(TransmitApp_Msg & 0xff)
        MOV     R3,#((TransmitApp_Msg >> 8) & 0xff)
        MOV     R1,#0x0
        LCALL   ??HalUARTRead?relay
//  522       osal_set_event( zclZigbeeReceiver_TaskID, UART_MSG_EVT );
        ; Setup parameters for call to function osal_set_event
        MOV     R2,#0x2
        MOV     R3,#0x0
        MOV     DPTR,#zclZigbeeReceiver_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_set_event?relay
        CFI EndBlock cfiBlock11
//  523   }
//  524 }
??zclUARTMsg_CallBack_1:
        REQUIRE ?Subroutine2
        ; // Fall through to label ?Subroutine2

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock12
//  525 
//  526 /*********************************************************************
//  527  * @fn      zclUartReceiver
//  528  * @brief   The coordinator receive command.
//  529  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  530 void zclUartReceiver( void )
zclUartReceiver:
        CFI Block cfiBlock13 Using cfiCommon0
        CFI Function zclUartReceiver
//  531 { 
        FUNCALL zclUartReceiver, HalLcdWriteChar
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclUartReceiver, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  532   for(uint8 length = 0; length < len; length++)
        MOV     R6,#0x0
        SJMP    ??zclUartReceiver_0
//  533   {
//  534     uart_recv[length] = TransmitApp_Msg[length];
??zclUartReceiver_1:
        MOV     DPL,R6
        MOV     R0,DPL
        MOV     A,R0
        ADD     A,#(TransmitApp_Msg & 0xff)
        MOV     DPL,A
        CLR     A
        ADDC    A,#((TransmitApp_Msg >> 8) & 0xff)
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R0
        ADD     A,#(uart_recv & 0xff)
        MOV     DPL,A
        CLR     A
        ADDC    A,#((uart_recv >> 8) & 0xff)
        MOV     DPH,A
        MOV     A,R3
        MOVX    @DPTR,A
//  535   #if defined( LCD_SUPPORTED )
//  536     HalLcdWriteChar(HAL_LCD_LINE_4, length, uart_recv[length]);
        ; Setup parameters for call to function HalLcdWriteChar
        MOV     A,R6
        MOV     R2,A
        MOV     R1,#0x4
        LCALL   ??HalLcdWriteChar?relay
//  537   #endif
//  538   }
        INC     R6
??zclUartReceiver_0:
        MOV     DPTR,#len
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R6
        CLR     C
        SUBB    A,R2
        JC      ??zclUartReceiver_1
//  539   
//  540   // Set the End Device state
//  541   zclZigbeeRecv_DstAddr.endPoint = 12;
        MOV     A,#0xc
        MOV     DPTR,#(zclZigbeeRecv_DstAddr + 9)
        MOVX    @DPTR,A
//  542   zclZigbeeRecv_DstAddr.addr.shortAddr = 0xFFFF;
        MOV     DPTR,#zclZigbeeRecv_DstAddr
        MOV     A,#-0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  543   zclZigbeeRecv_DstAddr.addrMode = (afAddrMode_t)AddrBroadcast;
        MOV     A,#0xf
        MOV     DPTR,#(zclZigbeeRecv_DstAddr + 8)
        MOVX    @DPTR,A
//  544     
//  545   // Transmit the UART command to End Device
//  546   uint8 send = zcl_SendCommand( ZIGBEERECV_ENDPOINT, 
//  547                                 &zclZigbeeRecv_DstAddr,
//  548                                 ZCL_CLUSTER_ID_GEN_ON_OFF,
//  549                                 COMMAND_TOGGLE,
//  550                                 TRUE,
//  551                                 ZCL_FRAME_CLIENT_SERVER_DIR,
//  552                                 false,
//  553                                 0,
//  554                                 0,
//  555                                 10,
//  556                                 uart_recv );
        ; Setup parameters for call to function zcl_SendCommand
        MOV     ?V0 + 0,#(uart_recv & 0xff)
        MOV     ?V0 + 1,#((uart_recv >> 8) & 0xff)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 0,#0xa
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 15)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 17)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 19)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     ?V0 + 0,#0x2
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 21)
        MOV     R4,#0x6
        MOV     R5,#0x0
        MOV     R2,#(zclZigbeeRecv_DstAddr & 0xff)
        MOV     R3,#((zclZigbeeRecv_DstAddr >> 8) & 0xff)
        MOV     R1,#0xd
        LCALL   ??zcl_SendCommand?relay
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//  557 }
        LJMP    ?Subroutine2 & 0xFFFF
        CFI EndBlock cfiBlock13

        RSEG XDATA_ID:CODE:NOROOT(0)
        DATA
`?<Initializer for bindingInClusters>`:
        DW 6, 8

        RSEG XDATA_ID:CODE:NOROOT(0)
        DATA
`?<Initializer for zigbeeReceiver_TestEp>`:
        DB 20
        DW zclZigbeeReceiver_TaskID, 0H
        DB 0

        RSEG XDATA_ID:CODE:NOROOT(0)
        DATA
`?<Initializer for zclZigbeeReceiver_CmdCallbac`:
        DW ??zclZigbeeReceiver_BasicResetCB?relay
        DW ??zclZigbeeReceiver_IdentifyCB?relay
        DW ??zclZigbeeReceiver_IdentifyQueryRspCB?relay
        DW ??zclZigbeeReceiver_OnOffCB?relay, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H
        DW 0H, 0H
        DB 0, 0

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclZigbeeRecv_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    zclZigbeeRecv_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclZigbeeRecv_event_loop?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    zclZigbeeRecv_event_loop

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclZigbeeReceiver_ProcessIdentifyTimeChange?r:
        LCALL   ?BDISPATCH
        DATA
        DC24    zclZigbeeReceiver_ProcessIdentifyTimeChange

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclZigbeeReceiver_BasicResetCB?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    zclZigbeeReceiver_BasicResetCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclZigbeeReceiver_IdentifyCB?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    zclZigbeeReceiver_IdentifyCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclZigbeeReceiver_IdentifyQueryRspCB?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    zclZigbeeReceiver_IdentifyQueryRspCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclZigbeeReceiver_OnOffCB?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    zclZigbeeReceiver_OnOffCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclUARTMsg_CallBack?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    zclUARTMsg_CallBack

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclUartReceiver?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    zclUartReceiver

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA
`?<Constant "RECV_GROUP">`:
        DB "RECV_GROUP"

        END
// 
// 871 bytes in segment BANKED_CODE
//  54 bytes in segment BANK_RELAYS
//  40 bytes in segment XDATA_I
//  40 bytes in segment XDATA_ID
//  11 bytes in segment XDATA_ROM_C
// 338 bytes in segment XDATA_Z
// 
// 965 bytes of CODE  memory
//  11 bytes of CONST memory
// 378 bytes of XDATA memory
//
//Errors: none
//Warnings: none
