###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                18/Aug/2013  22:21:55 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\Source\hal_sensor.c                         #
#    Command line       =  -f "C:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.c #
#                          fg" (-DCPU32MHZ -DROOT=__near_func -DBLINK_LEDS)   #
#                          -f "C:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig. #
#                          cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0             #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=TRUE      #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440)   #
#                          -f "C:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg #
#                          " (-DZCL_READ -DZCL_WRITE -DZCL_BASIC              #
#                          -DZCL_IDENTIFY -DZCL_ON_OFF -DZCL_KEY_ESTABLISH    #
#                          -DZCL_LOAD_CONTROL -DZCL_SIMPLE_METERING           #
#                          -DZCL_PRICING) -DZCL_MESSAGE                       #
#                          "C:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\Source\hal_sensor.c" -D                     #
#                          LCD_SUPPORTED=DEBUG -D NWK_AUTO_POLL -D ZTOOL_P1   #
#                          -D MT_APP_FUNC -D MT_SYS_FUNC -D MT_ZDO_FUNC -D    #
#                          MT_TASK -D xPOWER_SAVING -D xNV_RESTORE -D         #
#                          End_Device -D M140 -D HAL_KEYPAD -D xPA2591 -lC    #
#                          "C:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M140\List\" -lA        #
#                          "C:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M140\List\"            #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "C:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M140\Obj\" -e          #
#                          --require_prototypes --debug --core=plain          #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "C:\GitHub\z-stack\Sensor  #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Endpoint & Device\CC2530DB\"    #
#                          -I "C:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\SOURCE\" -I                     #
#                          "C:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\SOURCE\" -I                  #
#                          "C:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I       #
#                          "C:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MT\" -I  #
#                          "C:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCL #
#                          UDE\" -I "C:\GitHub\z-stack\Sensor Network         #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\MODU #
#                          LE\" -I "C:\GitHub\z-stack\Sensor Network          #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARG #
#                          ET\CC2530EB\" -I "C:\GitHub\z-stack\Sensor         #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MCU #
#                          \CCSOC\" -I "C:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\INC #
#                          LUDE\" -I "C:\GitHub\z-stack\Sensor Network        #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF #
#                          \" -I "C:\GitHub\z-stack\Sensor Network            #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NW #
#                          K\" -I "C:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SE #
#                          C\" -I "C:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SA #
#                          PI\" -I "C:\GitHub\z-stack\Sensor Network          #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SY #
#                          S\" -I "C:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZC #
#                          L\" -I "C:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZD #
#                          O\" -I "C:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8W #
#                          \" -I "C:\GitHub\z-stack\Sensor Network            #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\"   #
#                          -I "C:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES #
#                          \SADDR\" -I "C:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES #
#                          \SDATA\" -I "C:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INCL #
#                          UDE\" -I "C:\GitHub\z-stack\Sensor Network         #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIGH #
#                          _LEVEL\" -I "C:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\" -I "C:\GitHub\z-stack\Sensor         #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\SINGLE_CHIP\" -I "C:\Program           #
#                          Files\IAR Systems\Embedded Workbench               #
#                          5.3\8051\INC\" -I "C:\Program Files\IAR            #
#                          Systems\Embedded Workbench 5.3\8051\INC\CLIB\"     #
#                          -Ohz                                               #
#    List file          =  C:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M140\List\hal_sensor.l #
#                          st                                                 #
#    Object file        =  C:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M140\Obj\hal_sensor.r5 #
#                          1                                                  #
#                                                                             #
#                                                                             #
###############################################################################

C:\GitHub\z-stack\Sensor Network Example\Projects\zstack\Sensor Network Application\ZIGBEE Endpoint & Device\Source\hal_sensor.c
      1          /**************************************************************************************************
      2            Filename:       hal_sensor.c
      3            Revised:        $Date: 2010-07-14 (Wed, 14 July 2010) $
      4            Revision:       $Revision: 19453 $
      5          
      6            Description:    HAL Sensor - the device receive the sensor data application.
      7          **************************************************************************************************/
      8          /*********************************************************************
      9           * INCLUDES
     10           */  
     11          #include <string.h>
     12          #include <stdio.h>
     13          #include "ZComDef.h"
     14          #include "OSAL.h"
     15          #include "AF.h"
     16          #include "ZDApp.h"
     17          #include "ZDObject.h"
     18          #include "ZDProfile.h"
     19          
     20          #include "mac_radio_defs.h"
     21          
     22          /* ZCL */
     23          #include "zcl.h"
     24          #include "zcl_general.h"
     25          #include "zcl_ha.h"
     26          #include "zcl_zigbee device.h"
     27          
     28          /* HAL */
     29          #include "onboard.h"
     30          #include "hal_lcd.h"
     31          #include "hal_led.h"
     32          #include "hal_key.h"
     33          #include "MT_UART.h"
     34          #include "hal_uart.h"
     35          #include "hal_timer.h"
     36          #include "hal_keypad.h"
     37          #include "hal_buzzer.h"
     38            
     39          /* HAL Sensor */
     40          #include "hal_sensor.h"
     41          
     42          #if defined(M110)
     43            #include "M110.h"
     44          #endif
     45          #if defined(M140)
     46            #include "M140.h"
     47          #endif
     48          #if defined(M160)
     49            #include "M160.h"
     50          #endif
     51          #if defined(M170)
     52            #include "M170.h"
     53          #endif
     54          #if defined(M190)
     55            #include "M190.h"
     56          #endif
     57          #if defined(M200)
     58            #include "M200.h"
     59          #endif
     60          #if defined(M270)
     61            #include "M270.h"
     62          #endif
     63          
     64          /*********************************************************************
     65           * GLOBAL VARIABLES
     66           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     67          byte TransmitApp_Msg[ TRANSMITAPP_MAX_DATA_LEN ]; 
   \                     TransmitApp_Msg:
   \   000000                DS 102
   \   000066                REQUIRE __INIT_XDATA_Z
     68           
     69          void M110_SensorFunction(void); // M140 Module function
     70          void M140_SensorFunction(void); // M140 Module function
     71          void M160_SensorFunction(void); // M160 Module function
     72          void M170_SensorFunction(void); // M170 Module function
     73          void M190_SensorFunction(void); // M190 Module function
     74          void M200_SensorFunction(void); // M200 Module function
     75          void M270_SensorFunction(void); // M270 Module function
     76          
     77          #if defined(M110)
     78          /*********************************************************************
     79           * @fn          M190_SensorFunction
     80           * @brief       The ZIGBEE Device to receive the M190 optical data.
     81           */
     82           void M110_SensorFunction(void)
     83           {
     84              // M110 sensor variable
     85              uint16 val;
     86              char buf[16];
     87          
     88              // ZCL transmit variable
     89              uint8 len;
     90                
     91              // initilization the device
     92              M110_Init();
     93              
     94              val = M110_GetValue();
     95             
     96              if(val >3000)
     97              {    
     98                  sprintf(buf, "%s", "1");
     99              }
    100              else
    101              {
    102                  sprintf(buf, "%s", "0");      
    103              }
    104          
    105              
    106          #if defined ( LCD_SUPPORTED )
    107              HalLcdWriteString("* Z-Stack M110 *", HAL_LCD_LINE_1);
    108              HalLcdWriteString( buf, HAL_LCD_LINE_2 );
    109          #endif
    110             
    111             len = 3;
    112             uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC,
    113                                           TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, len, TransmitApp_Msg );
    114           }
    115          #endif
    116            
    117          #if defined(M140)
    118          /*********************************************************************
    119           * @fn          M140_SensorFunction
    120           * @brief       The ZIGBEE Device to receive the M140 tempture data.
    121           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    122           void M140_SensorFunction(void)
   \                     M140_SensorFunction:
    123           {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    124            // M140 sensor variable
    125            uint16 val;
    126            uint8 tmp1, tmp2, tmp3, tmp4;
    127            
    128            // ZCL transmit variable
    129            uint8 len;
    130            
    131            // initilization the device
    132            M140_Init();
   \   000005                ; Setup parameters for call to function M140_Init
   \   000005   12....       LCALL   ??M140_Init?relay
    133                
    134            val = M140_GetValue();  
   \   000008                ; Setup parameters for call to function M140_GetValue
   \   000008   12....       LCALL   ??M140_GetValue?relay
   \   00000B   8A..         MOV     ?V0 + 0,R2
   \   00000D   8B..         MOV     ?V0 + 1,R3
   \   00000F   AC..         MOV     R4,?V0 + 0
   \   000011   AD..         MOV     R5,?V0 + 1
    135            
    136            if((0x2000 & val) == 0x2000) // check sign bit for negative value
   \   000013   7420         MOV     A,#0x20
   \   000015   5D           ANL     A,R5
   \   000016   F9           MOV     R1,A
   \   000017   E4           CLR     A
   \   000018   7001         JNZ     ??M140_SensorFunction_0
   \   00001A   E9           MOV     A,R1
   \                     ??M140_SensorFunction_0:
   \   00001B   601B         JZ      ??M140_SensorFunction_1
    137            {
    138              val = ((val - 16384) * 10) / 32;
   \   00001D   E4           CLR     A
   \   00001E   2C           ADD     A,R4
   \   00001F   74C0         MOV     A,#-0x40
   \   000021   3D           ADDC    A,R5
   \   000022   F5..         MOV     ?V0 + 1,A
   \   000024   EA           MOV     A,R2
   \   000025   75F00A       MOV     B,#0xa
   \   000028   A4           MUL     AB
   \   000029   F5..         MOV     ?V0 + 0,A
   \   00002B   AAF0         MOV     R2,B
   \   00002D   75F00A       MOV     B,#0xa
   \   000030   E5..         MOV     A,?V0 + 1
   \   000032   A4           MUL     AB
   \   000033   2A           ADD     A,R2
   \   000034   F5..         MOV     ?V0 + 1,A
   \   000036   8013         SJMP    ??M140_SensorFunction_2
    139            }
    140            else
    141            {
    142              val = (val * 10) / 32;
   \                     ??M140_SensorFunction_1:
   \   000038   EC           MOV     A,R4
   \   000039   75F00A       MOV     B,#0xa
   \   00003C   A4           MUL     AB
   \   00003D   FC           MOV     R4,A
   \   00003E   AAF0         MOV     R2,B
   \   000040   75F00A       MOV     B,#0xa
   \   000043   ED           MOV     A,R5
   \   000044   A4           MUL     AB
   \   000045   2A           ADD     A,R2
   \   000046   FD           MOV     R5,A
   \   000047   8C..         MOV     ?V0 + 0,R4
   \   000049   8D..         MOV     ?V0 + 1,R5
   \                     ??M140_SensorFunction_2:
   \   00004B   7405         MOV     A,#0x5
   \   00004D   78..         MOV     R0,#?V0 + 0
   \   00004F   12....       LCALL   ?US_SHR
   \   000052   AC..         MOV     R4,?V0 + 0
   \   000054   AD..         MOV     R5,?V0 + 1
    143            }
    144            tmp1 = (val / 100) + '0';
   \   000056   EC           MOV     A,R4
   \   000057   F8           MOV     R0,A
   \   000058   ED           MOV     A,R5
   \   000059   F9           MOV     R1,A
   \   00005A   7A64         MOV     R2,#0x64
   \   00005C   7B00         MOV     R3,#0x0
   \   00005E   12....       LCALL   ?US_DIV_MOD
   \   000061   E8           MOV     A,R0
   \   000062   2430         ADD     A,#0x30
   \   000064   FE           MOV     R6,A
    145            TransmitApp_Msg[0] = tmp1;
   \   000065   90....       MOV     DPTR,#TransmitApp_Msg
   \   000068   12....       LCALL   ?Subroutine0 & 0xFFFF
    146            tmp2 = ((val / 10) % 10) + '0';
   \                     ??CrossCallReturnLabel_0:
   \   00006B   12....       LCALL   ?US_DIV_MOD
   \   00006E   7A0A         MOV     R2,#0xa
   \   000070   7B00         MOV     R3,#0x0
   \   000072   12....       LCALL   ?US_DIV_MOD
   \   000075   EA           MOV     A,R2
   \   000076   2430         ADD     A,#0x30
   \   000078   FF           MOV     R7,A
    147            TransmitApp_Msg[1] = tmp2;
   \   000079   90....       MOV     DPTR,#(TransmitApp_Msg + 1)
   \   00007C   F0           MOVX    @DPTR,A
    148            tmp3 = '.';
    149            TransmitApp_Msg[2] = tmp3;
   \   00007D   742E         MOV     A,#0x2e
   \   00007F   90....       MOV     DPTR,#(TransmitApp_Msg + 2)
   \   000082   12....       LCALL   ?Subroutine0 & 0xFFFF
    150            tmp4 = (val % 10) + '0';
   \                     ??CrossCallReturnLabel_1:
   \   000085   12....       LCALL   ?US_DIV_MOD
   \   000088   EA           MOV     A,R2
   \   000089   2430         ADD     A,#0x30
   \   00008B   F5..         MOV     ?V0 + 0,A
    151            TransmitApp_Msg[3] = tmp4;
   \   00008D   90....       MOV     DPTR,#(TransmitApp_Msg + 3)
   \   000090   F0           MOVX    @DPTR,A
    152            
    153            len = 4;
    154              
    155          #if defined ( LCD_SUPPORTED )
    156            HalLcdWriteString("* Z-Stack M140 *", HAL_LCD_LINE_1);
   \   000091                ; Setup parameters for call to function HalLcdWriteString
   \   000091   7901         MOV     R1,#0x1
   \   000093   7A..         MOV     R2,#(`?<Constant "* Z-Stack M140 *">` & 0xff)
   \   000095   7B..         MOV     R3,#((`?<Constant "* Z-Stack M140 *">` >> 8) & 0xff)
   \   000097   12....       LCALL   ??HalLcdWriteString?relay
    157            HalLcdWriteString(" Temp. =       C", HAL_LCD_LINE_2);
   \   00009A                ; Setup parameters for call to function HalLcdWriteString
   \   00009A   7902         MOV     R1,#0x2
   \   00009C   7A..         MOV     R2,#(`?<Constant " Temp. =       C">` & 0xff)
   \   00009E   7B..         MOV     R3,#((`?<Constant " Temp. =       C">` >> 8) & 0xff)
   \   0000A0   12....       LCALL   ??HalLcdWriteString?relay
    158           // HalLcdWriteString(TransmitApp_Msg, HAL_LCD_LINE_2);
    159            
    160            HalLcdWriteChar(HAL_LCD_LINE_2, 14, 0xDF);
   \   0000A3                ; Setup parameters for call to function HalLcdWriteChar
   \   0000A3   7BDF         MOV     R3,#-0x21
   \   0000A5   7A0E         MOV     R2,#0xe
   \   0000A7   7902         MOV     R1,#0x2
   \   0000A9   12....       LCALL   ??HalLcdWriteChar?relay
    161            HalLcdWriteChar(HAL_LCD_LINE_2, 9, tmp1);
   \   0000AC                ; Setup parameters for call to function HalLcdWriteChar
   \   0000AC   EE           MOV     A,R6
   \   0000AD   FB           MOV     R3,A
   \   0000AE   7A09         MOV     R2,#0x9
   \   0000B0   7902         MOV     R1,#0x2
   \   0000B2   12....       LCALL   ??HalLcdWriteChar?relay
    162            HalLcdWriteChar(HAL_LCD_LINE_2, 10, tmp2);
   \   0000B5                ; Setup parameters for call to function HalLcdWriteChar
   \   0000B5   EF           MOV     A,R7
   \   0000B6   FB           MOV     R3,A
   \   0000B7   7A0A         MOV     R2,#0xa
   \   0000B9   7902         MOV     R1,#0x2
   \   0000BB   12....       LCALL   ??HalLcdWriteChar?relay
    163            HalLcdWriteChar(HAL_LCD_LINE_2, 11, tmp3);
   \   0000BE                ; Setup parameters for call to function HalLcdWriteChar
   \   0000BE   7B2E         MOV     R3,#0x2e
   \   0000C0   7A0B         MOV     R2,#0xb
   \   0000C2   7902         MOV     R1,#0x2
   \   0000C4   12....       LCALL   ??HalLcdWriteChar?relay
    164            HalLcdWriteChar(HAL_LCD_LINE_2, 12, tmp4);
   \   0000C7                ; Setup parameters for call to function HalLcdWriteChar
   \   0000C7   AB..         MOV     R3,?V0 + 0
   \   0000C9   7A0C         MOV     R2,#0xc
   \   0000CB   7902         MOV     R1,#0x2
   \   0000CD   12....       LCALL   ??HalLcdWriteChar?relay
    165           
    166          #endif 
    167          
    168            len = 4;
    169            uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF, 
    170                                          ZCL_CLUSTER_ID_GEN_BASIC, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, len, TransmitApp_Msg );   
   \   0000D0                ; Setup parameters for call to function zcl_SendCommand
   \   0000D0   75....       MOV     ?V0 + 0,#(TransmitApp_Msg & 0xff)
   \   0000D3   75....       MOV     ?V0 + 1,#((TransmitApp_Msg >> 8) & 0xff)
   \   0000D6   78..         MOV     R0,#?V0 + 0
   \   0000D8   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000DB   75..04       MOV     ?V0 + 0,#0x4
   \   0000DE   75..00       MOV     ?V0 + 1,#0x0
   \   0000E1   78..         MOV     R0,#?V0 + 0
   \   0000E3   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000E6   75..00       MOV     ?V0 + 0,#0x0
   \   0000E9   78..         MOV     R0,#?V0 + 0
   \   0000EB   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000EE   78..         MOV     R0,#?V0 + 0
   \   0000F0   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000F3   78..         MOV     R0,#?V0 + 0
   \   0000F5   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000F8   78..         MOV     R0,#?V0 + 0
   \   0000FA   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000FD   75..01       MOV     ?V0 + 0,#0x1
   \   000100   78..         MOV     R0,#?V0 + 0
   \   000102   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000105   75..00       MOV     ?V0 + 0,#0x0
   \   000108   78..         MOV     R0,#?V0 + 0
   \   00010A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00010D   7C06         MOV     R4,#0x6
   \   00010F   7D00         MOV     R5,#0x0
   \   000111   7A..         MOV     R2,#(zclZigbeeDevice_DstAddr & 0xff)
   \   000113   7B..         MOV     R3,#((zclZigbeeDevice_DstAddr >> 8) & 0xff)
   \   000115   790C         MOV     R1,#0xc
   \   000117   12....       LCALL   ??zcl_SendCommand?relay
   \   00011A   740B         MOV     A,#0xb
   \   00011C   12....       LCALL   ?DEALLOC_XSTACK8
    171           }
   \   00011F   7F02         MOV     R7,#0x2
   \   000121   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   EC           MOV     A,R4
   \   000002   F8           MOV     R0,A
   \   000003   ED           MOV     A,R5
   \   000004   F9           MOV     R1,A
   \   000005   7A0A         MOV     R2,#0xa
   \   000007   7B00         MOV     R3,#0x0
   \   000009   22           RET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??M140_SensorFunction?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    M140_SensorFunction

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "* Z-Stack M140 *">`:
   \   000000   2A205A2D     DB "* Z-Stack M140 *"
   \            53746163
   \            6B204D31
   \            3430202A
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant " Temp. =       C">`:
   \   000000   2054656D     DB " Temp. =       C"
   \            702E203D
   \            20202020
   \            20202043
   \            00      
    172          #endif
    173          
    174          #if defined(M160)
    175          /*********************************************************************
    176           * @fn          M160_SensorFunction
    177           * @brief       The ZIGBEE Device to receive the M160 tempture data.
    178           */
    179           void M160_SensorFunction(void)
    180           {
    181            // M160 sensor variable
    182            static uint8 duty = 50;
    183            
    184            // initilization the device
    185            M160_Init();
    186            
    187            if (ch > 0)
    188            {           
    189              if (ch == 'U')
    190              {
    191                if (duty < 100)
    192                {
    193                  duty = duty + 5;
    194                }
    195              }
    196              
    197              if (ch == 'N')
    198              {
    199                if (duty > 0)
    200                {
    201                  duty = duty - 5;
    202                }
    203              }
    204                
    205              M160_On(duty);
    206              #if defined ( LCD_SUPPORTED )
    207                HalLcdWriteString("** M160 Test  **", HAL_LCD_LINE_1);
    208                HalLcdWriteString("   Duty =     % ", HAL_LCD_LINE_2);
    209                halLcdDisplayUint8(HAL_LCD_LINE_2, 10, HAL_LCD_RADIX_DEC, duty); 
    210              #endif
    211            }
    212          //  M160_Off();
    213           }
    214          #endif 
    215          
    216           
    217          #if defined(M170)
    218          /*********************************************************************
    219           * @fn          M170_SensorFunction
    220           * @brief       The ZIGBEE Device to receive the M170 optical data.
    221           */
    222           void M170_SensorFunction(void)
    223           {
    224              // M170 sensor variable
    225              uint16 val;
    226              uint8 tmp1, tmp2, tmp3;
    227              // ZCL transmit variable
    228              uint8 len;
    229                
    230              // initilization the device
    231              M170_Init();
    232            
    233             val = M170_GetValue();
    234             if (val > 2000)
    235             {
    236                val -= 2000;
    237             }
    238             else
    239              {
    240                val = 0;
    241              }val /= 120;
    242                      
    243             if (val > 100)
    244             {
    245                val = 100;
    246             }
    247             
    248             tmp1 = (val / 100) + '0';
    249             TransmitApp_Msg[0] = tmp1;
    250             tmp2 = ((val / 10) % 10) + '0';
    251             TransmitApp_Msg[1] = tmp2;
    252             tmp3 = (val % 10) + '0';
    253             TransmitApp_Msg[2] = tmp3;
    254             
    255          #if defined ( LCD_SUPPORTED )
    256             HalLcdWriteString("* Z-Stack M170 *", HAL_LCD_LINE_1);
    257             HalLcdWriteString(" Bright =     % ", HAL_LCD_LINE_2);
    258             HalLcdWriteChar(HAL_LCD_LINE_2, 10, tmp1);
    259             HalLcdWriteChar(HAL_LCD_LINE_2, 11, tmp2);
    260             HalLcdWriteChar(HAL_LCD_LINE_2, 12, tmp3);
    261          #endif
    262             
    263             len = 3;
    264             uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC,
    265                                           TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, len, TransmitApp_Msg );
    266           }
    267          #endif
    268           
    269          #if defined(M190)
    270          /*********************************************************************
    271           * @fn          M190_SensorFunction
    272           * @brief       The ZIGBEE Device to receive the M190 optical data.
    273           */
    274           void M190_SensorFunction(void)
    275           {
    276              // M190 sensor variable
    277              uint16 val;
    278              char buf[16];
    279          
    280              // ZCL transmit variable
    281              uint8 len;
    282                
    283              // initilization the device
    284              M190_Init();
    285              val = M190_GetValue();  
    286              sprintf(buf, "ADC = %u %", val);
    287          
    288          #if defined ( LCD_SUPPORTED )
    289              HalLcdWriteString("* Z-Stack M190 *", HAL_LCD_LINE_1);
    290              HalLcdWriteString( buf, HAL_LCD_LINE_2 );
    291          #endif
    292             
    293             len = 3;
    294             uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC,
    295                                           TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, len, TransmitApp_Msg );
    296           }
    297          #endif
    298           
    299          #if defined(M200)
    300          /*********************************************************************
    301           * @fn          M200_SensorFunction
    302           * @brief       The ZIGBEE Device to receive the M200 Temp and Humi data.
    303           */
    304           void M200_SensorFunction(void)
    305           {
    306              // M200 module variable
    307              uint16 temp, humi;
    308              uint8 hum_1,hum_2,hum_3,hum_4;
    309              uint8 temp_1,temp_2,temp_3,temp_4;
    310              uint8 len;
    311                
    312              // initilization the device
    313              M200_Init();
    314            
    315              M200_GetValue();
    316              temp = (uint16)(((((float)M200_Temp) *0.01) - 40.0) *10.0);
    317              humi = (uint16)(((((float)M200_Humi) *0.0405) - (((float)M200_Humi)*((float)M200_Humi) *0.0000028) - 4.0) *10.0);
    318              if (humi > 999)
    319              {
    320                humi = 999;
    321              }
    322              if (temp > 999)
    323              {
    324                temp = 999;
    325              }
    326              hum_1 = (humi / 100) + '0';
    327              TransmitApp_Msg[0] = hum_1;
    328              hum_2 = ((humi / 10) % 10) + '0';
    329              TransmitApp_Msg[1] = hum_2;
    330              hum_3 = '.';
    331              TransmitApp_Msg[2] = hum_3;
    332              hum_4 = (humi % 10) + '0';
    333              TransmitApp_Msg[3] = hum_4;
    334              TransmitApp_Msg[4] = ' ';
    335              temp_1 = (temp / 100) + '0';
    336              TransmitApp_Msg[5] = temp_1;
    337              temp_2 = ((temp / 10) % 10) + '0';
    338              TransmitApp_Msg[6] = temp_2;
    339              temp_3 = '.';
    340              TransmitApp_Msg[7] = temp_3;
    341              temp_4 = (temp % 10) + '0';
    342              TransmitApp_Msg[8] = temp_4;
    343              
    344              #if defined ( LCD_SUPPORTED )
    345                HalLcdWriteString("Humidity=      %", HAL_LCD_LINE_1);
    346                HalLcdWriteString(" Temp. =       C", HAL_LCD_LINE_2);
    347                // Humi
    348                HalLcdWriteChar(HAL_LCD_LINE_1, 10, hum_1);
    349                HalLcdWriteChar(HAL_LCD_LINE_1, 11, hum_2);
    350                HalLcdWriteChar(HAL_LCD_LINE_1, 12, hum_3);
    351                HalLcdWriteChar(HAL_LCD_LINE_1, 13, hum_4);
    352                // Temp
    353                HalLcdWriteChar(HAL_LCD_LINE_2, 9, temp_1);
    354                HalLcdWriteChar(HAL_LCD_LINE_2, 10, temp_2);
    355                HalLcdWriteChar(HAL_LCD_LINE_2, 11, temp_3);
    356                HalLcdWriteChar(HAL_LCD_LINE_2, 12, temp_4);
    357              #endif
    358          
    359              len = 9;
    360              uint8 tmp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF, 
    361                                           ZCL_CLUSTER_ID_GEN_BASIC, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, len, TransmitApp_Msg );
    362           }
    363          #endif
    364           
    365          #if defined(M270)
    366          /*********************************************************************
    367           * @fn          M270_SensorFunction
    368           * @brief       The ZIGBEE Device to receive the M200 Temp and Humi data.
    369           */
    370           void M270_SensorFunction(void)
    371           {
    372              static uint8 udo;
    373          
    374              M270_Init();
    375              
    376               if( ch == 'A' )
    377               {
    378                  udo = 1;
    379                  M270_SetDO(udo);
    380               }
    381               
    382               if( ch == 'D' )
    383               {
    384                  udo = 0;
    385                  M270_SetDO(udo);
    386               }
    387              
    388               #if defined ( LCD_SUPPORTED )
    389                  HalLcdWriteString("** M270 Test  **", HAL_LCD_LINE_1);
    390                  HalLcdWriteString("* RELAY DO=[0] *", HAL_LCD_LINE_2);
    391                  // Show the control value
    392                  HalLcdWriteChar(HAL_LCD_LINE_2, 12, udo + '0');
    393               #endif
    394           }
    395          #endif

   Maximum stack usage in bytes:

     Function               ISTACK PSTACK XSTACK
     --------               ------ ------ ------
     M140_SensorFunction        0      0     21
       -> M140_Init             0      0     20
       -> M140_GetValue         0      0     20
       -> HalLcdWriteString     0      0     20
       -> HalLcdWriteString     0      0     20
       -> HalLcdWriteChar       0      0     20
       -> HalLcdWriteChar       0      0     20
       -> HalLcdWriteChar       0      0     20
       -> HalLcdWriteChar       0      0     20
       -> HalLcdWriteChar       0      0     20
       -> zcl_SendCommand       0      0     42


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     TransmitApp_Msg                 102
     M140_SensorFunction             292
     ?Subroutine0                     10
     ??M140_SensorFunction?relay       6
     ?<Constant "* Z-Stack M140 *">   17
     ?<Constant " Temp. =       C">   17

 
 302 bytes in segment BANKED_CODE
   6 bytes in segment BANK_RELAYS
  34 bytes in segment XDATA_ROM_C
 102 bytes in segment XDATA_Z
 
 308 bytes of CODE  memory
  34 bytes of CONST memory
 102 bytes of XDATA memory

Errors: none
Warnings: none
