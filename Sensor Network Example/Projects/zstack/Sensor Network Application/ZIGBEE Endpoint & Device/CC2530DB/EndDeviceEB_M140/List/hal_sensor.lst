###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                19/Aug/2013  17:38:54 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\Source\hal_sensor.c                         #
#    Command line       =  -f "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.c #
#                          fg" (-DCPU32MHZ -DROOT=__near_func -DBLINK_LEDS)   #
#                          -f "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig. #
#                          cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0             #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=TRUE      #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440)   #
#                          -f "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg #
#                          " (-DZCL_READ -DZCL_WRITE -DZCL_BASIC              #
#                          -DZCL_IDENTIFY -DZCL_ON_OFF -DZCL_KEY_ESTABLISH    #
#                          -DZCL_LOAD_CONTROL -DZCL_SIMPLE_METERING           #
#                          -DZCL_PRICING) -DZCL_MESSAGE                       #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\Source\hal_sensor.c" -D                     #
#                          LCD_SUPPORTED=DEBUG -D NWK_AUTO_POLL -D ZTOOL_P1   #
#                          -D MT_APP_FUNC -D MT_SYS_FUNC -D MT_ZDO_FUNC -D    #
#                          MT_TASK -D xPOWER_SAVING -D xNV_RESTORE -D         #
#                          End_Device -D M140 -D HAL_KEYPAD -D xPA2591 -lC    #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M140\List\" -lA        #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M140\List\"            #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M140\Obj\" -e          #
#                          --require_prototypes --debug --core=plain          #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "D:\GitHub\z-stack\Sensor  #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Endpoint & Device\CC2530DB\"    #
#                          -I "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\SOURCE\" -I                     #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\SOURCE\" -I                  #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I       #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MT\" -I  #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCL #
#                          UDE\" -I "D:\GitHub\z-stack\Sensor Network         #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\MODU #
#                          LE\" -I "D:\GitHub\z-stack\Sensor Network          #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARG #
#                          ET\CC2530EB\" -I "D:\GitHub\z-stack\Sensor         #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MCU #
#                          \CCSOC\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\INC #
#                          LUDE\" -I "D:\GitHub\z-stack\Sensor Network        #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF #
#                          \" -I "D:\GitHub\z-stack\Sensor Network            #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NW #
#                          K\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SE #
#                          C\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SA #
#                          PI\" -I "D:\GitHub\z-stack\Sensor Network          #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SY #
#                          S\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZC #
#                          L\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZD #
#                          O\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8W #
#                          \" -I "D:\GitHub\z-stack\Sensor Network            #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\"   #
#                          -I "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES #
#                          \SADDR\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES #
#                          \SDATA\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INCL #
#                          UDE\" -I "D:\GitHub\z-stack\Sensor Network         #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIGH #
#                          _LEVEL\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\" -I "D:\GitHub\z-stack\Sensor         #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\SINGLE_CHIP\" -I "C:\Program Files     #
#                          (x86)\IAR Systems\Embedded Workbench               #
#                          5.3\8051\INC\" -I "C:\Program Files (x86)\IAR      #
#                          Systems\Embedded Workbench 5.3\8051\INC\CLIB\"     #
#                          -Ohz                                               #
#    List file          =  D:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M140\List\hal_sensor.l #
#                          st                                                 #
#    Object file        =  D:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M140\Obj\hal_sensor.r5 #
#                          1                                                  #
#                                                                             #
#                                                                             #
###############################################################################

D:\GitHub\z-stack\Sensor Network Example\Projects\zstack\Sensor Network Application\ZIGBEE Endpoint & Device\Source\hal_sensor.c
      1          #include <string.h>
      2          #include <stdio.h>
      3          #include "ZComDef.h"
      4          #include "OSAL.h"
      5          #include "AF.h"
      6          #include "ZDApp.h"
      7          #include "ZDObject.h"
      8          #include "ZDProfile.h"
      9          #include "mac_radio_defs.h"
     10          
     11          /* ZCL */
     12          #include "zcl.h"
     13          #include "zcl_general.h"
     14          #include "zcl_ha.h"
     15          #include "zcl_zigbee device.h"
     16          
     17          /* HAL */
     18          #include "onboard.h"
     19          #include "hal_lcd.h"
     20          #include "hal_led.h"
     21          #include "hal_key.h"
     22          #include "MT_UART.h"
     23          #include "hal_uart.h"
     24          #include "hal_timer.h"
     25          #include "hal_keypad.h"
     26          #include "hal_buzzer.h"
     27            
     28          /* HAL Sensor */
     29          #include "hal_sensor.h"
     30          
     31          #if defined(M110)
     32            #include "M110.h"
     33          #endif
     34          #if defined(M140)
     35            #include "M140.h"
     36          #endif
     37          #if defined(M160)
     38            #include "M160.h"
     39          #endif
     40          #if defined(M170)
     41            #include "M170.h"
     42          #endif
     43          #if defined(M190)
     44            #include "M190.h"
     45          #endif
     46          #if defined(M200)
     47            #include "M200.h"
     48          #endif
     49          #if defined(M270)
     50            #include "M270.h"
     51          #endif
     52          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     53          byte TransmitApp_Msg[ TRANSMITAPP_MAX_DATA_LEN ]; 
   \                     TransmitApp_Msg:
   \   000000                DS 102
   \   000066                REQUIRE __INIT_XDATA_Z
     54           
     55          void M110_SensorFunction(void); // M140 Module function
     56          void M140_SensorFunction(void); // M140 Module function
     57          void M160_SensorFunction(void); // M160 Module function
     58          void M170_SensorFunction(void); // M170 Module function
     59          void M190_SensorFunction(void); // M190 Module function
     60          void M200_SensorFunction(void); // M200 Module function
     61          void M270_SensorFunction(void); // M270 Module function
     62          
     63          #if defined(M110)
     64          
     65          void M110_SensorFunction(void)
     66          {
     67              // M110 sensor variable
     68              uint16 val;
     69              char buf[16];
     70          
     71              // ZCL transmit variable
     72              uint8 len;
     73                
     74              // initilization the device
     75              M110_Init();
     76              
     77              val = M110_GetValue();
     78             
     79              if(val >3000)
     80              {    
     81                  sprintf(buf, "%s", "1");
     82              }
     83              else
     84              {
     85                  sprintf(buf, "%s", "0");      
     86              }
     87          
     88          #if defined ( LCD_SUPPORTED )
     89              HalLcdWriteString("* Z-Stack M110 *", HAL_LCD_LINE_1);
     90              HalLcdWriteString( buf, HAL_LCD_LINE_2 );
     91          #endif
     92             
     93             len = 3;
     94             uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC,
     95                                           TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, len, TransmitApp_Msg );
     96           }
     97          #endif
     98            
     99          #if defined(M140)
    100          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    101          void M140_SensorFunction(void)
   \                     M140_SensorFunction:
    102          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    103            // M140 sensor variable
    104            uint16 val;
    105            uint8 tmp1, tmp2, tmp3, tmp4;
    106            uint8 tmp5, tmp6, tmp7, tmp8, tmp9, tmp10, tmpT;  
    107            uint8 len;
    108            
    109            // initilization the device
    110            M140_Init();
   \   000005                ; Setup parameters for call to function M140_Init
   \   000005   12....       LCALL   ??M140_Init?relay
    111                
    112            val = M140_GetValue();  
   \   000008                ; Setup parameters for call to function M140_GetValue
   \   000008   12....       LCALL   ??M140_GetValue?relay
   \   00000B   8A..         MOV     ?V0 + 0,R2
   \   00000D   8B..         MOV     ?V0 + 1,R3
   \   00000F   AC..         MOV     R4,?V0 + 0
   \   000011   AD..         MOV     R5,?V0 + 1
    113            if((0x2000 & val) == 0x2000) // check sign bit for negative value
   \   000013   7420         MOV     A,#0x20
   \   000015   5D           ANL     A,R5
   \   000016   F9           MOV     R1,A
   \   000017   E4           CLR     A
   \   000018   7001         JNZ     ??M140_SensorFunction_0
   \   00001A   E9           MOV     A,R1
   \                     ??M140_SensorFunction_0:
   \   00001B   601B         JZ      ??M140_SensorFunction_1
    114            {
    115              val = ((val - 16384) * 10) / 32;
   \   00001D   E4           CLR     A
   \   00001E   2C           ADD     A,R4
   \   00001F   74C0         MOV     A,#-0x40
   \   000021   3D           ADDC    A,R5
   \   000022   F5..         MOV     ?V0 + 1,A
   \   000024   EA           MOV     A,R2
   \   000025   75F00A       MOV     B,#0xa
   \   000028   A4           MUL     AB
   \   000029   F5..         MOV     ?V0 + 0,A
   \   00002B   AAF0         MOV     R2,B
   \   00002D   75F00A       MOV     B,#0xa
   \   000030   E5..         MOV     A,?V0 + 1
   \   000032   A4           MUL     AB
   \   000033   2A           ADD     A,R2
   \   000034   F5..         MOV     ?V0 + 1,A
   \   000036   8013         SJMP    ??M140_SensorFunction_2
    116            }
    117            else
    118            {
    119              val = (val * 10) / 32;
   \                     ??M140_SensorFunction_1:
   \   000038   EC           MOV     A,R4
   \   000039   75F00A       MOV     B,#0xa
   \   00003C   A4           MUL     AB
   \   00003D   FC           MOV     R4,A
   \   00003E   AAF0         MOV     R2,B
   \   000040   75F00A       MOV     B,#0xa
   \   000043   ED           MOV     A,R5
   \   000044   A4           MUL     AB
   \   000045   2A           ADD     A,R2
   \   000046   FD           MOV     R5,A
   \   000047   8C..         MOV     ?V0 + 0,R4
   \   000049   8D..         MOV     ?V0 + 1,R5
   \                     ??M140_SensorFunction_2:
   \   00004B   7405         MOV     A,#0x5
   \   00004D   78..         MOV     R0,#?V0 + 0
   \   00004F   12....       LCALL   ?US_SHR
   \   000052   AC..         MOV     R4,?V0 + 0
   \   000054   AD..         MOV     R5,?V0 + 1
    120            }
    121          
    122            tmpT = 3 + '0';
    123            TransmitApp_Msg[0] = tmpT;  
   \   000056   7433         MOV     A,#0x33
   \   000058   90....       MOV     DPTR,#TransmitApp_Msg
   \   00005B   F0           MOVX    @DPTR,A
    124            
    125            tmp10 = ',';  
    126            TransmitApp_Msg[1] = tmp10;
   \   00005C   742C         MOV     A,#0x2c
   \   00005E   90....       MOV     DPTR,#(TransmitApp_Msg + 1)
   \   000061   F0           MOVX    @DPTR,A
    127            
    128            tmp1 = 1 + '0';  
    129            TransmitApp_Msg[2] = tmp1;  
   \   000062   7431         MOV     A,#0x31
   \   000064   90....       MOV     DPTR,#(TransmitApp_Msg + 2)
   \   000067   F0           MOVX    @DPTR,A
    130            tmp2 = 4 + '0';  
    131            TransmitApp_Msg[3] = tmp2;  
   \   000068   7434         MOV     A,#0x34
   \   00006A   90....       MOV     DPTR,#(TransmitApp_Msg + 3)
   \   00006D   F0           MOVX    @DPTR,A
    132            tmp3 = 0 + '0';  
    133            TransmitApp_Msg[4] = tmp3;   
   \   00006E   7430         MOV     A,#0x30
   \   000070   90....       MOV     DPTR,#(TransmitApp_Msg + 4)
   \   000073   F0           MOVX    @DPTR,A
    134            
    135            tmp4 = ',';  
    136            TransmitApp_Msg[5] = tmp4;
   \   000074   742C         MOV     A,#0x2c
   \   000076   90....       MOV     DPTR,#(TransmitApp_Msg + 5)
   \   000079   F0           MOVX    @DPTR,A
    137            
    138            tmp5 = (val / 100) + '0';
    139            TransmitApp_Msg[6] = tmp5;
   \   00007A   EC           MOV     A,R4
   \   00007B   F8           MOV     R0,A
   \   00007C   ED           MOV     A,R5
   \   00007D   F9           MOV     R1,A
   \   00007E   7A64         MOV     R2,#0x64
   \   000080   7B00         MOV     R3,#0x0
   \   000082   12....       LCALL   ?US_DIV_MOD
   \   000085   E8           MOV     A,R0
   \   000086   2430         ADD     A,#0x30
   \   000088   90....       MOV     DPTR,#(TransmitApp_Msg + 6)
   \   00008B   12....       LCALL   ?Subroutine0 & 0xFFFF
    140            tmp6 = ((val / 10) % 10) + '0';
   \                     ??CrossCallReturnLabel_0:
   \   00008E   12....       LCALL   ?US_DIV_MOD
   \   000091   7A0A         MOV     R2,#0xa
   \   000093   7B00         MOV     R3,#0x0
   \   000095   12....       LCALL   ?US_DIV_MOD
   \   000098   EA           MOV     A,R2
   \   000099   2430         ADD     A,#0x30
   \   00009B   FE           MOV     R6,A
    141            TransmitApp_Msg[7] = tmp6;
   \   00009C   90....       MOV     DPTR,#(TransmitApp_Msg + 7)
   \   00009F   F0           MOVX    @DPTR,A
    142            tmp7 = '.';
    143            TransmitApp_Msg[8] = tmp7;
   \   0000A0   742E         MOV     A,#0x2e
   \   0000A2   90....       MOV     DPTR,#(TransmitApp_Msg + 8)
   \   0000A5   12....       LCALL   ?Subroutine0 & 0xFFFF
    144            tmp8 = (val % 10) + '0';
   \                     ??CrossCallReturnLabel_1:
   \   0000A8   12....       LCALL   ?US_DIV_MOD
   \   0000AB   EA           MOV     A,R2
   \   0000AC   2430         ADD     A,#0x30
   \   0000AE   FF           MOV     R7,A
    145            TransmitApp_Msg[9] = tmp8;
   \   0000AF   90....       MOV     DPTR,#(TransmitApp_Msg + 9)
   \   0000B2   F0           MOVX    @DPTR,A
    146            
    147            tmp9 = '$';  
    148            TransmitApp_Msg[10] = tmp9;
   \   0000B3   7424         MOV     A,#0x24
   \   0000B5   90....       MOV     DPTR,#(TransmitApp_Msg + 10)
   \   0000B8   F0           MOVX    @DPTR,A
    149            
    150            len = 11;
    151              
    152          #if defined ( LCD_SUPPORTED )
    153            HalLcdWriteString("* Z-Stack M140 *", HAL_LCD_LINE_1);
   \   0000B9                ; Setup parameters for call to function HalLcdWriteString
   \   0000B9   7901         MOV     R1,#0x1
   \   0000BB   7A..         MOV     R2,#(`?<Constant "* Z-Stack M140 *">` & 0xff)
   \   0000BD   7B..         MOV     R3,#((`?<Constant "* Z-Stack M140 *">` >> 8) & 0xff)
   \   0000BF   12....       LCALL   ??HalLcdWriteString?relay
    154            HalLcdWriteString(" Temp. =       C", HAL_LCD_LINE_2);
   \   0000C2                ; Setup parameters for call to function HalLcdWriteString
   \   0000C2   7902         MOV     R1,#0x2
   \   0000C4   7A..         MOV     R2,#(`?<Constant " Temp. =       C">` & 0xff)
   \   0000C6   7B..         MOV     R3,#((`?<Constant " Temp. =       C">` >> 8) & 0xff)
   \   0000C8   12....       LCALL   ??HalLcdWriteString?relay
    155            HalLcdWriteChar(HAL_LCD_LINE_2, 14, 0xDF);
   \   0000CB                ; Setup parameters for call to function HalLcdWriteChar
   \   0000CB   7BDF         MOV     R3,#-0x21
   \   0000CD   7A0E         MOV     R2,#0xe
   \   0000CF   7902         MOV     R1,#0x2
   \   0000D1   12....       LCALL   ??HalLcdWriteChar?relay
    156            HalLcdWriteChar(HAL_LCD_LINE_2, 9, tmp6);
   \   0000D4                ; Setup parameters for call to function HalLcdWriteChar
   \   0000D4   EE           MOV     A,R6
   \   0000D5   FB           MOV     R3,A
   \   0000D6   7A09         MOV     R2,#0x9
   \   0000D8   7902         MOV     R1,#0x2
   \   0000DA   12....       LCALL   ??HalLcdWriteChar?relay
    157            HalLcdWriteChar(HAL_LCD_LINE_2, 10, tmp7);
   \   0000DD                ; Setup parameters for call to function HalLcdWriteChar
   \   0000DD   7B2E         MOV     R3,#0x2e
   \   0000DF   7A0A         MOV     R2,#0xa
   \   0000E1   7902         MOV     R1,#0x2
   \   0000E3   12....       LCALL   ??HalLcdWriteChar?relay
    158            HalLcdWriteChar(HAL_LCD_LINE_2, 11, tmp8);
   \   0000E6                ; Setup parameters for call to function HalLcdWriteChar
   \   0000E6   EF           MOV     A,R7
   \   0000E7   FB           MOV     R3,A
   \   0000E8   7A0B         MOV     R2,#0xb
   \   0000EA   7902         MOV     R1,#0x2
   \   0000EC   12....       LCALL   ??HalLcdWriteChar?relay
    159            HalLcdWriteChar(HAL_LCD_LINE_2, 12, tmp9);
   \   0000EF                ; Setup parameters for call to function HalLcdWriteChar
   \   0000EF   7B24         MOV     R3,#0x24
   \   0000F1   7A0C         MOV     R2,#0xc
   \   0000F3   7902         MOV     R1,#0x2
   \   0000F5   12....       LCALL   ??HalLcdWriteChar?relay
    160          #endif 
    161          
    162            len = 11;
    163            uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF, 
    164                                          ZCL_CLUSTER_ID_GEN_BASIC, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, len, TransmitApp_Msg );   
   \   0000F8                ; Setup parameters for call to function zcl_SendCommand
   \   0000F8   75....       MOV     ?V0 + 0,#(TransmitApp_Msg & 0xff)
   \   0000FB   75....       MOV     ?V0 + 1,#((TransmitApp_Msg >> 8) & 0xff)
   \   0000FE   78..         MOV     R0,#?V0 + 0
   \   000100   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000103   75..0B       MOV     ?V0 + 0,#0xb
   \   000106   75..00       MOV     ?V0 + 1,#0x0
   \   000109   78..         MOV     R0,#?V0 + 0
   \   00010B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00010E   75..00       MOV     ?V0 + 0,#0x0
   \   000111   78..         MOV     R0,#?V0 + 0
   \   000113   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000116   78..         MOV     R0,#?V0 + 0
   \   000118   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00011B   78..         MOV     R0,#?V0 + 0
   \   00011D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000120   78..         MOV     R0,#?V0 + 0
   \   000122   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000125   75..01       MOV     ?V0 + 0,#0x1
   \   000128   78..         MOV     R0,#?V0 + 0
   \   00012A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00012D   75..00       MOV     ?V0 + 0,#0x0
   \   000130   78..         MOV     R0,#?V0 + 0
   \   000132   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000135   7C06         MOV     R4,#0x6
   \   000137   7D00         MOV     R5,#0x0
   \   000139   7A..         MOV     R2,#(zclZigbeeDevice_DstAddr & 0xff)
   \   00013B   7B..         MOV     R3,#((zclZigbeeDevice_DstAddr >> 8) & 0xff)
   \   00013D   790C         MOV     R1,#0xc
   \   00013F   12....       LCALL   ??zcl_SendCommand?relay
   \   000142   740B         MOV     A,#0xb
   \   000144   12....       LCALL   ?DEALLOC_XSTACK8
    165           }
   \   000147   7F02         MOV     R7,#0x2
   \   000149   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   EC           MOV     A,R4
   \   000002   F8           MOV     R0,A
   \   000003   ED           MOV     A,R5
   \   000004   F9           MOV     R1,A
   \   000005   7A0A         MOV     R2,#0xa
   \   000007   7B00         MOV     R3,#0x0
   \   000009   22           RET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??M140_SensorFunction?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    M140_SensorFunction

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "* Z-Stack M140 *">`:
   \   000000   2A205A2D     DB "* Z-Stack M140 *"
   \            53746163
   \            6B204D31
   \            3430202A
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant " Temp. =       C">`:
   \   000000   2054656D     DB " Temp. =       C"
   \            702E203D
   \            20202020
   \            20202043
   \            00      
    166          #endif
    167          
    168          #if defined(M160)
    169          /*********************************************************************
    170           * @fn          M160_SensorFunction
    171           * @brief       The ZIGBEE Device to receive the M160 tempture data.
    172           */
    173           void M160_SensorFunction(void)
    174           {
    175            // M160 sensor variable
    176            static uint8 duty = 50;
    177            
    178            // initilization the device
    179            M160_Init();
    180            
    181            if (ch > 0)
    182            {           
    183              if (ch == 'U')
    184              {
    185                if (duty < 100)
    186                {
    187                  duty = duty + 5;
    188                }
    189              }
    190              
    191              if (ch == 'N')
    192              {
    193                if (duty > 0)
    194                {
    195                  duty = duty - 5;
    196                }
    197              }
    198                
    199              M160_On(duty);
    200              #if defined ( LCD_SUPPORTED )
    201                HalLcdWriteString("** M160 Test  **", HAL_LCD_LINE_1);
    202                HalLcdWriteString("   Duty =     % ", HAL_LCD_LINE_2);
    203                halLcdDisplayUint8(HAL_LCD_LINE_2, 10, HAL_LCD_RADIX_DEC, duty); 
    204              #endif
    205            }
    206          //  M160_Off();
    207           }
    208          #endif 
    209          
    210           
    211          #if defined(M170)
    212          /*********************************************************************
    213           * @fn          M170_SensorFunction
    214           * @brief       The ZIGBEE Device to receive the M170 optical data.
    215           */
    216           void M170_SensorFunction(void)
    217           {
    218              // M170 sensor variable
    219              uint16 val;
    220              uint8 tmp1, tmp2, tmp3;
    221              // ZCL transmit variable
    222              uint8 len;
    223                
    224              // initilization the device
    225              M170_Init();
    226            
    227             val = M170_GetValue();
    228             if (val > 2000)
    229             {
    230                val -= 2000;
    231             }
    232             else
    233              {
    234                val = 0;
    235              }val /= 120;
    236                      
    237             if (val > 100)
    238             {
    239                val = 100;
    240             }
    241             
    242             tmp1 = (val / 100) + '0';
    243             TransmitApp_Msg[0] = tmp1;
    244             tmp2 = ((val / 10) % 10) + '0';
    245             TransmitApp_Msg[1] = tmp2;
    246             tmp3 = (val % 10) + '0';
    247             TransmitApp_Msg[2] = tmp3;
    248             
    249          #if defined ( LCD_SUPPORTED )
    250             HalLcdWriteString("* Z-Stack M170 *", HAL_LCD_LINE_1);
    251             HalLcdWriteString(" Bright =     % ", HAL_LCD_LINE_2);
    252             HalLcdWriteChar(HAL_LCD_LINE_2, 10, tmp1);
    253             HalLcdWriteChar(HAL_LCD_LINE_2, 11, tmp2);
    254             HalLcdWriteChar(HAL_LCD_LINE_2, 12, tmp3);
    255          #endif
    256             
    257             len = 3;
    258             uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC,
    259                                           TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, len, TransmitApp_Msg );
    260           }
    261          #endif
    262           
    263          #if defined(M190)
    264          /*********************************************************************
    265           * @fn          M190_SensorFunction
    266           * @brief       The ZIGBEE Device to receive the M190 optical data.
    267           */
    268           void M190_SensorFunction(void)
    269           {
    270              // M190 sensor variable
    271              uint16 val;
    272              char buf[16];
    273          
    274              // ZCL transmit variable
    275              uint8 len;
    276                
    277              // initilization the device
    278              M190_Init();
    279              val = M190_GetValue();  
    280              sprintf(buf, "ADC = %u %", val);
    281          
    282          #if defined ( LCD_SUPPORTED )
    283              HalLcdWriteString("* Z-Stack M190 *", HAL_LCD_LINE_1);
    284              HalLcdWriteString( buf, HAL_LCD_LINE_2 );
    285          #endif
    286             
    287             len = 3;
    288             uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC,
    289                                           TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, len, TransmitApp_Msg );
    290           }
    291          #endif
    292           
    293          #if defined(M200)
    294          /*********************************************************************
    295           * @fn          M200_SensorFunction
    296           * @brief       The ZIGBEE Device to receive the M200 Temp and Humi data.
    297           */
    298           void M200_SensorFunction(void)
    299           {
    300              // M200 module variable
    301              uint16 temp, humi;
    302              uint8 hum_1,hum_2,hum_3,hum_4;
    303              uint8 temp_1,temp_2,temp_3,temp_4;
    304              uint8 len;
    305                
    306              // initilization the device
    307              M200_Init();
    308            
    309              M200_GetValue();
    310              temp = (uint16)(((((float)M200_Temp) *0.01) - 40.0) *10.0);
    311              humi = (uint16)(((((float)M200_Humi) *0.0405) - (((float)M200_Humi)*((float)M200_Humi) *0.0000028) - 4.0) *10.0);
    312              if (humi > 999)
    313              {
    314                humi = 999;
    315              }
    316              if (temp > 999)
    317              {
    318                temp = 999;
    319              }
    320              hum_1 = (humi / 100) + '0';
    321              TransmitApp_Msg[0] = hum_1;
    322              hum_2 = ((humi / 10) % 10) + '0';
    323              TransmitApp_Msg[1] = hum_2;
    324              hum_3 = '.';
    325              TransmitApp_Msg[2] = hum_3;
    326              hum_4 = (humi % 10) + '0';
    327              TransmitApp_Msg[3] = hum_4;
    328              TransmitApp_Msg[4] = ' ';
    329              temp_1 = (temp / 100) + '0';
    330              TransmitApp_Msg[5] = temp_1;
    331              temp_2 = ((temp / 10) % 10) + '0';
    332              TransmitApp_Msg[6] = temp_2;
    333              temp_3 = '.';
    334              TransmitApp_Msg[7] = temp_3;
    335              temp_4 = (temp % 10) + '0';
    336              TransmitApp_Msg[8] = temp_4;
    337              
    338              #if defined ( LCD_SUPPORTED )
    339                HalLcdWriteString("Humidity=      %", HAL_LCD_LINE_1);
    340                HalLcdWriteString(" Temp. =       C", HAL_LCD_LINE_2);
    341                // Humi
    342                HalLcdWriteChar(HAL_LCD_LINE_1, 10, hum_1);
    343                HalLcdWriteChar(HAL_LCD_LINE_1, 11, hum_2);
    344                HalLcdWriteChar(HAL_LCD_LINE_1, 12, hum_3);
    345                HalLcdWriteChar(HAL_LCD_LINE_1, 13, hum_4);
    346                // Temp
    347                HalLcdWriteChar(HAL_LCD_LINE_2, 9, temp_1);
    348                HalLcdWriteChar(HAL_LCD_LINE_2, 10, temp_2);
    349                HalLcdWriteChar(HAL_LCD_LINE_2, 11, temp_3);
    350                HalLcdWriteChar(HAL_LCD_LINE_2, 12, temp_4);
    351              #endif
    352          
    353              len = 9;
    354              uint8 tmp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF, 
    355                                           ZCL_CLUSTER_ID_GEN_BASIC, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, len, TransmitApp_Msg );
    356           }
    357          #endif
    358           
    359          #if defined(M270)
    360          /*********************************************************************
    361           * @fn          M270_SensorFunction
    362           * @brief       The ZIGBEE Device to receive the M200 Temp and Humi data.
    363           */
    364           void M270_SensorFunction(void)
    365           {
    366              static uint8 udo;
    367          
    368              M270_Init();
    369              
    370               if( ch == 'A' )
    371               {
    372                  udo = 1;
    373                  M270_SetDO(udo);
    374               }
    375               
    376               if( ch == 'D' )
    377               {
    378                  udo = 0;
    379                  M270_SetDO(udo);
    380               }
    381              
    382               #if defined ( LCD_SUPPORTED )
    383                  HalLcdWriteString("** M270 Test  **", HAL_LCD_LINE_1);
    384                  HalLcdWriteString("* RELAY DO=[0] *", HAL_LCD_LINE_2);
    385                  // Show the control value
    386                  HalLcdWriteChar(HAL_LCD_LINE_2, 12, udo + '0');
    387               #endif
    388           }
    389          #endif

   Maximum stack usage in bytes:

     Function               ISTACK PSTACK XSTACK
     --------               ------ ------ ------
     M140_SensorFunction        0      0     21
       -> M140_Init             0      0     20
       -> M140_GetValue         0      0     20
       -> HalLcdWriteString     0      0     20
       -> HalLcdWriteString     0      0     20
       -> HalLcdWriteChar       0      0     20
       -> HalLcdWriteChar       0      0     20
       -> HalLcdWriteChar       0      0     20
       -> HalLcdWriteChar       0      0     20
       -> HalLcdWriteChar       0      0     20
       -> zcl_SendCommand       0      0     42


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     TransmitApp_Msg                 102
     M140_SensorFunction             332
     ?Subroutine0                     10
     ??M140_SensorFunction?relay       6
     ?<Constant "* Z-Stack M140 *">   17
     ?<Constant " Temp. =       C">   17

 
 342 bytes in segment BANKED_CODE
   6 bytes in segment BANK_RELAYS
  34 bytes in segment XDATA_ROM_C
 102 bytes in segment XDATA_Z
 
 348 bytes of CODE  memory
  34 bytes of CONST memory
 102 bytes of XDATA memory

Errors: none
Warnings: none
