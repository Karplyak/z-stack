###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                21/Aug/2013  16:32:49 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\Source\hal_sensor.c                         #
#    Command line       =  -f "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.c #
#                          fg" (-DCPU32MHZ -DROOT=__near_func -DBLINK_LEDS)   #
#                          -f "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig. #
#                          cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0             #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=TRUE      #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440)   #
#                          -f "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg #
#                          " (-DZCL_READ -DZCL_WRITE -DZCL_BASIC              #
#                          -DZCL_IDENTIFY -DZCL_ON_OFF -DZCL_KEY_ESTABLISH    #
#                          -DZCL_LOAD_CONTROL -DZCL_SIMPLE_METERING           #
#                          -DZCL_PRICING) -DZCL_MESSAGE                       #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\Source\hal_sensor.c" -D NWK_AUTO_POLL -D    #
#                          ZTOOL_P1 -D MT_TASK -D MT_APP_FUNC -D MT_SYS_FUNC  #
#                          -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -D           #
#                          xPOWER_SAVING -D End_Device -D HAL_KEYPAD -D M170  #
#                          -D xPA2591 -lC "D:\GitHub\z-stack\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M160\List\" -lA        #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M160\List\"            #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M160\Obj\" -e          #
#                          --require_prototypes --debug --core=plain          #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "D:\GitHub\z-stack\Sensor  #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Endpoint & Device\CC2530DB\"    #
#                          -I "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\SOURCE\" -I                     #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\SOURCE\" -I                  #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I       #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MT\" -I  #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCL #
#                          UDE\" -I "D:\GitHub\z-stack\Sensor Network         #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\MODU #
#                          LE\" -I "D:\GitHub\z-stack\Sensor Network          #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARG #
#                          ET\CC2530EB\" -I "D:\GitHub\z-stack\Sensor         #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MCU #
#                          \CCSOC\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\INC #
#                          LUDE\" -I "D:\GitHub\z-stack\Sensor Network        #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF #
#                          \" -I "D:\GitHub\z-stack\Sensor Network            #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NW #
#                          K\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SE #
#                          C\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SA #
#                          PI\" -I "D:\GitHub\z-stack\Sensor Network          #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SY #
#                          S\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZC #
#                          L\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZD #
#                          O\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8W #
#                          \" -I "D:\GitHub\z-stack\Sensor Network            #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\"   #
#                          -I "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES #
#                          \SADDR\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES #
#                          \SDATA\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INCL #
#                          UDE\" -I "D:\GitHub\z-stack\Sensor Network         #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIGH #
#                          _LEVEL\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\" -I "D:\GitHub\z-stack\Sensor         #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\SINGLE_CHIP\" -I "C:\Program Files     #
#                          (x86)\IAR Systems\Embedded Workbench               #
#                          5.3\8051\INC\" -I "C:\Program Files (x86)\IAR      #
#                          Systems\Embedded Workbench 5.3\8051\INC\CLIB\"     #
#                          -Ohz                                               #
#    List file          =  D:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M160\List\hal_sensor.l #
#                          st                                                 #
#    Object file        =  D:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M160\Obj\hal_sensor.r5 #
#                          1                                                  #
#                                                                             #
#                                                                             #
###############################################################################

D:\GitHub\z-stack\Sensor Network Example\Projects\zstack\Sensor Network Application\ZIGBEE Endpoint & Device\Source\hal_sensor.c
      1          #include "ZComDef.h"
      2          #include "OSAL.h"
      3          #include "AF.h"
      4          #include "ZDApp.h"
      5          #include "ZDObject.h"
      6          #include "ZDProfile.h"
      7          #include "mac_radio_defs.h"
      8          
      9          #include "zcl.h"
     10          #include "zcl_general.h"
     11          #include "zcl_ha.h"
     12          #include "zcl_zigbee device.h"
     13          
     14          #include "onboard.h"
     15          #include "hal_lcd.h"
     16          #include "hal_led.h"
     17          #include "hal_key.h"
     18          #include "MT_UART.h"
     19          #include "hal_uart.h"
     20          #include "hal_timer.h"
     21          #include "hal_keypad.h"
     22          #include "hal_buzzer.h"
     23            
     24          /* HAL Sensor */
     25          #include "hal_sensor.h"
     26          
     27          #if defined(M110)
     28            #include "M110.h"
     29          #endif
     30          #if defined(M140)
     31            #include "M140.h"
     32          #endif
     33          #if defined(M160)
     34            #include "M160.h"
     35          #endif
     36          #if defined(M170)
     37            #include "M170.h"
     38          #endif
     39          #if defined(M190)
     40            #include "M190.h"
     41          #endif
     42          #if defined(M200)
     43            #include "M200.h"
     44          #endif
     45          #if defined(M270)
     46            #include "M270.h"
     47          #endif
     48          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     49          byte TransmitApp_Msg[ TRANSMITAPP_MAX_DATA_LEN ]; 
   \                     TransmitApp_Msg:
   \   000000                DS 102
   \   000066                REQUIRE __INIT_XDATA_Z
     50           
     51          void M110_SensorFunction(void); // M140 Module function
     52          void M140_SensorFunction(void); // M140 Module function
     53          void M160_SensorFunction(void); // M160 Module function
     54          void M170_SensorFunction(void); // M170 Module function
     55          void M190_SensorFunction(void); // M190 Module function
     56          void M200_SensorFunction(void); // M200 Module function
     57          void M270_SensorFunction(void); // M270 Module function
     58          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     59          void sleep(uint16 sec)
   \                     sleep:
     60          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     61              uint16 i,j,k;
     62              
     63              k = sec * 1000;
   \   000000   EA           MOV     A,R2
   \   000001   75F0E8       MOV     B,#-0x18
   \   000004   A4           MUL     AB
   \   000005   CA           XCH     A,R2
   \   000006   ACF0         MOV     R4,B
   \   000008   75F003       MOV     B,#0x3
   \   00000B   A4           MUL     AB
   \   00000C   2C           ADD     A,R4
   \   00000D   FC           MOV     R4,A
   \   00000E   75F0E8       MOV     B,#-0x18
   \   000011   EB           MOV     A,R3
   \   000012   A4           MUL     AB
   \   000013   2C           ADD     A,R4
   \   000014   FB           MOV     R3,A
     64              
     65              for(i=0;i<1600;i++)
   \   000015   7C40         MOV     R4,#0x40
   \   000017   7D06         MOV     R5,#0x6
     66                for(j=0;j<k;j++)
   \                     ??sleep_0:
   \   000019   7800         MOV     R0,#0x0
   \   00001B   7900         MOV     R1,#0x0
   \   00001D   8009         SJMP    ??sleep_1
     67                  asm("nop");
   \                     ??sleep_2:
   \   00001F   00           nop
   \   000020   E8           MOV     A,R0
   \   000021   2401         ADD     A,#0x1
   \   000023   08           INC     R0
   \   000024   E9           MOV     A,R1
   \   000025   3400         ADDC    A,#0x0
   \   000027   F9           MOV     R1,A
   \                     ??sleep_1:
   \   000028   C3           CLR     C
   \   000029   E8           MOV     A,R0
   \   00002A   9A           SUBB    A,R2
   \   00002B   E9           MOV     A,R1
   \   00002C   9B           SUBB    A,R3
   \   00002D   40F0         JC      ??sleep_2
   \   00002F   EC           MOV     A,R4
   \   000030   24FF         ADD     A,#-0x1
   \   000032   1C           DEC     R4
   \   000033   ED           MOV     A,R5
   \   000034   34FF         ADDC    A,#-0x1
   \   000036   FD           MOV     R5,A
   \   000037   EC           MOV     A,R4
   \   000038   7001         JNZ     ??sleep_3
   \   00003A   ED           MOV     A,R5
   \                     ??sleep_3:
   \   00003B   70DC         JNZ     ??sleep_0
     68          }
   \   00003D   02....       LJMP    ?BRET
     69          
     70          #if defined(M110)
     71          void M110_SensorFunction(void)
     72          {
     73              uint16 val;
     74                
     75              M110_Init();
     76              
     77              val = M110_GetValue();
     78              
     79              TransmitApp_Msg[0] = 1 + '0';  
     80              TransmitApp_Msg[1] = 1 + '0';   
     81              TransmitApp_Msg[2] = 0 + '0';        
     82              TransmitApp_Msg[3] = ',';
     83              TransmitApp_Msg[4] = 'N';     
     84              TransmitApp_Msg[5] = ',';
     85              if(val > 3000)
     86              {    
     87                  TransmitApp_Msg[6] = 1 + '0';
     88              }
     89              else
     90              {
     91                  TransmitApp_Msg[6] = 0 + '0';  
     92              }       
     93            
     94              sleep(3);
     95             
     96              uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, 
     97                                           ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC,
     98                                           TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, 7, 
     99                                           TransmitApp_Msg );
    100           }
    101          #endif
    102            
    103          #if defined(M140)
    104          
    105          void M140_SensorFunction(void)
    106          {
    107            uint16 val;
    108          
    109            M140_Init();
    110                
    111            val = M140_GetValue();  
    112            if((0x2000 & val) == 0x2000) // check sign bit for negative value
    113            {
    114              val = ((val - 16384) * 10) / 32;
    115            }
    116            else
    117            {
    118              val = (val * 10) / 32;
    119            }
    120          
    121            TransmitApp_Msg[0] = 1 + '0';  
    122            TransmitApp_Msg[1] = 4 + '0';   
    123            TransmitApp_Msg[2] = 0 + '0';        
    124            TransmitApp_Msg[3] = ',';
    125            TransmitApp_Msg[4] = 'A';   
    126            TransmitApp_Msg[5] = ',';  
    127            TransmitApp_Msg[6] = (val / 100) + '0';
    128            TransmitApp_Msg[7] = ((val / 10) % 10) + '0';
    129            TransmitApp_Msg[8] = '.';
    130            TransmitApp_Msg[9] = (val % 10) + '0';
    131            
    132            sleep(3);
    133              
    134            uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, 
    135                                          ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC, 
    136                                          TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, 10, 
    137                                          TransmitApp_Msg );   
    138          }
    139          #endif
    140          
    141          #if defined(M160)
    142          void M160_SensorFunction(void)
    143          {
    144            static uint8 duty = 50;
    145          
    146            M160_Init();
    147            
    148            if (ch > 0)
    149            {           
    150              if (ch == 'U')
    151              {
    152                if (duty < 100)
    153                {
    154                  duty = duty + 5;
    155                }
    156              }
    157              
    158              if (ch == 'N')
    159              {
    160                if (duty > 0)
    161                {
    162                  duty = duty - 5;
    163                }
    164              }
    165                
    166              M160_On(duty);
    167            }
    168            
    169            TransmitApp_Msg[0] = 2 + '0';  
    170            TransmitApp_Msg[1] = 8 + '0';   
    171            TransmitApp_Msg[2] = 0 + '0';        
    172            TransmitApp_Msg[3] = ',';
    173            TransmitApp_Msg[4] = 'A';   
    174            TransmitApp_Msg[5] = ',';  
    175            TransmitApp_Msg[6] = (duty / 100) + '0';
    176            TransmitApp_Msg[7] = ((duty / 10) % 10) + '0';
    177            TransmitApp_Msg[8] = (duty % 10) + '0';
    178              
    179            sleep(3);  
    180            uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, 
    181                                           ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC, 
    182                                           TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, 9, 
    183                                           TransmitApp_Msg ); 
    184          }
    185          #endif 
    186          
    187          #if defined(M170)

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    188          void M170_SensorFunction(void)
   \                     M170_SensorFunction:
    189          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    190              uint16 val;
    191               
    192              M170_Init();
   \   000005                ; Setup parameters for call to function M170_Init
   \   000005   12....       LCALL   ??M170_Init?relay
    193            
    194              val = M170_GetValue();  
   \   000008                ; Setup parameters for call to function M170_GetValue
   \   000008   12....       LCALL   ??M170_GetValue?relay
   \   00000B   8A..         MOV     ?V0 + 0,R2
   \   00000D   8B..         MOV     ?V0 + 1,R3
   \   00000F   AC..         MOV     R4,?V0 + 0
   \   000011   AD..         MOV     R5,?V0 + 1
    195              if (val > 2000)
   \   000013   C3           CLR     C
   \   000014   EC           MOV     A,R4
   \   000015   94D1         SUBB    A,#-0x2f
   \   000017   ED           MOV     A,R5
   \   000018   9407         SUBB    A,#0x7
   \   00001A   400A         JC      ??M170_SensorFunction_0
    196              {
    197                  val -= 2000;
   \   00001C   EC           MOV     A,R4
   \   00001D   2430         ADD     A,#0x30
   \   00001F   FC           MOV     R4,A
   \   000020   ED           MOV     A,R5
   \   000021   34F8         ADDC    A,#-0x8
   \   000023   FD           MOV     R5,A
   \   000024   8004         SJMP    ??M170_SensorFunction_1
    198              }
    199              else
    200              {
    201                  val = 0;
   \                     ??M170_SensorFunction_0:
   \   000026   7C00         MOV     R4,#0x0
   \   000028   7D00         MOV     R5,#0x0
    202              }
    203              val /= 120;
   \                     ??M170_SensorFunction_1:
   \   00002A   EC           MOV     A,R4
   \   00002B   F8           MOV     R0,A
   \   00002C   ED           MOV     A,R5
   \   00002D   F9           MOV     R1,A
   \   00002E   7A78         MOV     R2,#0x78
   \   000030   7B00         MOV     R3,#0x0
   \   000032   12....       LCALL   ?US_DIV_MOD
   \   000035   88..         MOV     ?V0 + 0,R0
   \   000037   89..         MOV     ?V0 + 1,R1
   \   000039   AC..         MOV     R4,?V0 + 0
   \   00003B   AD..         MOV     R5,?V0 + 1
    204                      
    205              if (val > 100)
   \   00003D   EC           MOV     A,R4
   \   00003E   9465         SUBB    A,#0x65
   \   000040   ED           MOV     A,R5
   \   000041   9400         SUBB    A,#0x0
   \   000043   4004         JC      ??M170_SensorFunction_2
    206              {
    207                  val = 100;
   \   000045   7C64         MOV     R4,#0x64
   \   000047   7D00         MOV     R5,#0x0
    208              }
    209             
    210              TransmitApp_Msg[0] = 1 + '0';  
   \                     ??M170_SensorFunction_2:
   \   000049   7431         MOV     A,#0x31
   \   00004B   90....       MOV     DPTR,#TransmitApp_Msg
   \   00004E   F0           MOVX    @DPTR,A
    211              TransmitApp_Msg[1] = 7 + '0';   
   \   00004F   7437         MOV     A,#0x37
   \   000051   90....       MOV     DPTR,#(TransmitApp_Msg + 1)
   \   000054   F0           MOVX    @DPTR,A
    212              TransmitApp_Msg[2] = 0 + '0';        
   \   000055   7430         MOV     A,#0x30
   \   000057   90....       MOV     DPTR,#(TransmitApp_Msg + 2)
   \   00005A   F0           MOVX    @DPTR,A
    213              TransmitApp_Msg[3] = ',';
   \   00005B   742C         MOV     A,#0x2c
   \   00005D   90....       MOV     DPTR,#(TransmitApp_Msg + 3)
   \   000060   F0           MOVX    @DPTR,A
    214              TransmitApp_Msg[4] = 'A';   
   \   000061   7441         MOV     A,#0x41
   \   000063   90....       MOV     DPTR,#(TransmitApp_Msg + 4)
   \   000066   F0           MOVX    @DPTR,A
    215              TransmitApp_Msg[5] = ',';  
   \   000067   742C         MOV     A,#0x2c
   \   000069   90....       MOV     DPTR,#(TransmitApp_Msg + 5)
   \   00006C   F0           MOVX    @DPTR,A
    216              TransmitApp_Msg[6] = (val / 100) + '0';
   \   00006D   EC           MOV     A,R4
   \   00006E   F8           MOV     R0,A
   \   00006F   ED           MOV     A,R5
   \   000070   F9           MOV     R1,A
   \   000071   7A64         MOV     R2,#0x64
   \   000073   7B00         MOV     R3,#0x0
   \   000075   12....       LCALL   ?US_DIV_MOD
   \   000078   E8           MOV     A,R0
   \   000079   2430         ADD     A,#0x30
   \   00007B   90....       MOV     DPTR,#(TransmitApp_Msg + 6)
   \   00007E   12....       LCALL   ?Subroutine0 & 0xFFFF
    217              TransmitApp_Msg[7] = ((val / 10) % 10) + '0';
   \                     ??CrossCallReturnLabel_0:
   \   000081   12....       LCALL   ?US_DIV_MOD
   \   000084   7A0A         MOV     R2,#0xa
   \   000086   7B00         MOV     R3,#0x0
   \   000088   12....       LCALL   ?US_DIV_MOD
   \   00008B   EA           MOV     A,R2
   \   00008C   2430         ADD     A,#0x30
   \   00008E   90....       MOV     DPTR,#(TransmitApp_Msg + 7)
   \   000091   12....       LCALL   ?Subroutine0 & 0xFFFF
    218              TransmitApp_Msg[8] = (val % 10) + '0';
   \                     ??CrossCallReturnLabel_1:
   \   000094   12....       LCALL   ?US_DIV_MOD
   \   000097   EA           MOV     A,R2
   \   000098   2430         ADD     A,#0x30
   \   00009A   90....       MOV     DPTR,#(TransmitApp_Msg + 8)
   \   00009D   F0           MOVX    @DPTR,A
    219          
    220              sleep(3);
   \   00009E                ; Setup parameters for call to function sleep
   \   00009E   7A03         MOV     R2,#0x3
   \   0000A0   7B00         MOV     R3,#0x0
   \   0000A2   12....       LCALL   ??sleep?relay
    221              uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, 
    222                                           ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC,
    223                                           TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, 9, 
    224                                           TransmitApp_Msg );
   \   0000A5                ; Setup parameters for call to function zcl_SendCommand
   \   0000A5   75....       MOV     ?V0 + 0,#(TransmitApp_Msg & 0xff)
   \   0000A8   75....       MOV     ?V0 + 1,#((TransmitApp_Msg >> 8) & 0xff)
   \   0000AB   78..         MOV     R0,#?V0 + 0
   \   0000AD   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000B0   75..09       MOV     ?V0 + 0,#0x9
   \   0000B3   75..00       MOV     ?V0 + 1,#0x0
   \   0000B6   78..         MOV     R0,#?V0 + 0
   \   0000B8   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000BB   75..00       MOV     ?V0 + 0,#0x0
   \   0000BE   78..         MOV     R0,#?V0 + 0
   \   0000C0   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000C3   78..         MOV     R0,#?V0 + 0
   \   0000C5   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000C8   78..         MOV     R0,#?V0 + 0
   \   0000CA   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000CD   78..         MOV     R0,#?V0 + 0
   \   0000CF   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000D2   75..01       MOV     ?V0 + 0,#0x1
   \   0000D5   78..         MOV     R0,#?V0 + 0
   \   0000D7   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000DA   75..00       MOV     ?V0 + 0,#0x0
   \   0000DD   78..         MOV     R0,#?V0 + 0
   \   0000DF   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000E2   7C06         MOV     R4,#0x6
   \   0000E4   7D00         MOV     R5,#0x0
   \   0000E6   7A..         MOV     R2,#(zclZigbeeDevice_DstAddr & 0xff)
   \   0000E8   7B..         MOV     R3,#((zclZigbeeDevice_DstAddr >> 8) & 0xff)
   \   0000EA   790C         MOV     R1,#0xc
   \   0000EC   12....       LCALL   ??zcl_SendCommand?relay
   \   0000EF   740B         MOV     A,#0xb
   \   0000F1   12....       LCALL   ?DEALLOC_XSTACK8
    225           }
   \   0000F4   7F02         MOV     R7,#0x2
   \   0000F6   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   EC           MOV     A,R4
   \   000002   F8           MOV     R0,A
   \   000003   ED           MOV     A,R5
   \   000004   F9           MOV     R1,A
   \   000005   7A0A         MOV     R2,#0xa
   \   000007   7B00         MOV     R3,#0x0
   \   000009   22           RET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??sleep?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    sleep

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??M170_SensorFunction?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    M170_SensorFunction
    226          #endif
    227           
    228          #if defined(M190)
    229          void M190_SensorFunction(void)
    230          {
    231              uint16 val;
    232          
    233              M190_Init();
    234              val = M190_GetValue();  
    235          
    236              if (val > 2000)
    237              {
    238                  val -= 2000;
    239              }
    240              else
    241              {
    242                  val = 0;
    243              }
    244              val /= 120;
    245                      
    246              if (val > 100)
    247              {
    248                  val = 100;
    249              }
    250              
    251              TransmitApp_Msg[0] = 1 + '0';  
    252              TransmitApp_Msg[1] = 9 + '0';   
    253              TransmitApp_Msg[2] = 0 + '0';        
    254              TransmitApp_Msg[3] = ',';
    255              TransmitApp_Msg[4] = 'A';   
    256              TransmitApp_Msg[5] = ',';  
    257              TransmitApp_Msg[6] = (val / 100) + '0';
    258              TransmitApp_Msg[7] = ((val / 10) % 10) + '0';
    259              TransmitApp_Msg[8] = (val % 10) + '0';
    260          
    261              sleep(3);    
    262              uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, 
    263                                           ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC,
    264                                           TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, 9, 
    265                                           TransmitApp_Msg );
    266          }
    267          #endif
    268           
    269          #if defined(M200)
    270          void M200_SensorFunction(void)
    271           {
    272              // M200 module variable
    273              uint16 temp, humi;
    274              uint8 len;
    275                
    276              // initilization the device
    277              M200_Init();
    278            
    279              M200_GetValue();
    280              temp = (uint16)(((((float)M200_Temp) *0.01) - 40.0) *10.0);
    281              humi = (uint16)(((((float)M200_Humi) *0.0405) - (((float)M200_Humi)*((float)M200_Humi) *0.0000028) - 4.0) *10.0);
    282              if (humi > 999)
    283              {
    284                humi = 999;
    285              }
    286              if (temp > 999)
    287              {
    288                temp = 999;
    289              }
    290              
    291              TransmitApp_Msg[0] = (humi / 100) + '0';
    292              TransmitApp_Msg[1] = ((humi / 10) % 10) + '0';
    293              TransmitApp_Msg[2] = '.';
    294              TransmitApp_Msg[3] = (humi % 10) + '0';
    295              TransmitApp_Msg[4] = ' ';
    296              TransmitApp_Msg[5] = (temp / 100) + '0';
    297              TransmitApp_Msg[6] = ((temp / 10) % 10) + '0';
    298              TransmitApp_Msg[7] = '.';
    299              TransmitApp_Msg[8] = (temp % 10) + '0';
    300              
    301              len = 9;
    302              uint8 tmp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF, 
    303                                           ZCL_CLUSTER_ID_GEN_BASIC, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, len, TransmitApp_Msg );
    304           }
    305          #endif
    306           
    307          #if defined(M270)
    308          
    309          void M270_SensorFunction(void)
    310          {
    311              static uint8 udo;
    312          
    313              M270_Init();
    314              
    315              if( ch == 'A' )
    316              {
    317                  udo = 1;
    318                  M270_SetDO(udo);
    319              }
    320               
    321              if( ch == 'D' )
    322              {
    323                  udo = 0;
    324                  M270_SetDO(udo);
    325              }
    326          }
    327          #endif

   Maximum stack usage in bytes:

     Function             ISTACK PSTACK XSTACK
     --------             ------ ------ ------
     M170_SensorFunction      0      0     21
       -> M170_Init           0      0     20
       -> M170_GetValue       0      0     20
       -> sleep               0      0     20
       -> zcl_SendCommand     0      0     42
     sleep                    0      0     10


   Segment part sizes:

     Function/Label              Bytes
     --------------              -----
     TransmitApp_Msg              102
     sleep                         64
     M170_SensorFunction          249
     ?Subroutine0                  10
     ??sleep?relay                  6
     ??M170_SensorFunction?relay    6

 
 323 bytes in segment BANKED_CODE
  12 bytes in segment BANK_RELAYS
 102 bytes in segment XDATA_Z
 
 335 bytes of CODE  memory
 102 bytes of XDATA memory

Errors: none
Warnings: none
