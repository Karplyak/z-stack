###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                20/Aug/2013  00:06:58 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\GitHub\z-stack\Sensor Network                   #
#                          Example\Components\hal\module\M160.c               #
#    Command line       =  -f "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.c #
#                          fg" (-DCPU32MHZ -DROOT=__near_func -DBLINK_LEDS)   #
#                          -f "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig. #
#                          cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0             #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=TRUE      #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440)   #
#                          -f "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg #
#                          " (-DZCL_READ -DZCL_WRITE -DZCL_BASIC              #
#                          -DZCL_IDENTIFY -DZCL_ON_OFF -DZCL_KEY_ESTABLISH    #
#                          -DZCL_LOAD_CONTROL -DZCL_SIMPLE_METERING           #
#                          -DZCL_PRICING) -DZCL_MESSAGE                       #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Components\hal\module\M160.c" -D           #
#                          NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D            #
#                          MT_APP_FUNC -D MT_SYS_FUNC -D MT_ZDO_FUNC -D       #
#                          LCD_SUPPORTED=DEBUG -D xPOWER_SAVING -D            #
#                          End_Device -D HAL_KEYPAD -D M190 -D xPA2591 -lC    #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M160\List\" -lA        #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M160\List\"            #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M160\Obj\" -e          #
#                          --require_prototypes --debug --core=plain          #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "D:\GitHub\z-stack\Sensor  #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Endpoint & Device\CC2530DB\"    #
#                          -I "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\SOURCE\" -I                     #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\SOURCE\" -I                  #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I       #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MT\" -I  #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCL #
#                          UDE\" -I "D:\GitHub\z-stack\Sensor Network         #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\MODU #
#                          LE\" -I "D:\GitHub\z-stack\Sensor Network          #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARG #
#                          ET\CC2530EB\" -I "D:\GitHub\z-stack\Sensor         #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MCU #
#                          \CCSOC\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\INC #
#                          LUDE\" -I "D:\GitHub\z-stack\Sensor Network        #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF #
#                          \" -I "D:\GitHub\z-stack\Sensor Network            #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NW #
#                          K\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SE #
#                          C\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SA #
#                          PI\" -I "D:\GitHub\z-stack\Sensor Network          #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SY #
#                          S\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZC #
#                          L\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZD #
#                          O\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8W #
#                          \" -I "D:\GitHub\z-stack\Sensor Network            #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\"   #
#                          -I "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES #
#                          \SADDR\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES #
#                          \SDATA\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INCL #
#                          UDE\" -I "D:\GitHub\z-stack\Sensor Network         #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIGH #
#                          _LEVEL\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\" -I "D:\GitHub\z-stack\Sensor         #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\SINGLE_CHIP\" -I "C:\Program Files     #
#                          (x86)\IAR Systems\Embedded Workbench               #
#                          5.3\8051\INC\" -I "C:\Program Files (x86)\IAR      #
#                          Systems\Embedded Workbench 5.3\8051\INC\CLIB\"     #
#                          -Ohz                                               #
#    List file          =  D:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M160\List\M160.lst     #
#    Object file        =  D:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M160\Obj\M160.r51      #
#                                                                             #
#                                                                             #
###############################################################################

D:\GitHub\z-stack\Sensor Network Example\Components\hal\module\M160.c
      1          #include "hal_defs.h"
      2          #include "ioCC2530.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xb8
   \   union <unnamed> volatile __sfr _A_IEN1
   \                     _A_IEN1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1
      3          #include "hal_mcu.h"
      4          #include "hal_board.h"
      5          #include "M160.h"
      6          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
      7          uint8 M160_DutyCount;
   \                     M160_DutyCount:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
      8          uint8 M160_DutyValue;
   \                     M160_DutyValue:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
      9          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     10          HAL_ISR_FUNCTION(T4_ISR, T4_VECTOR)
   \                     T4_ISR:
     11          {
   \   000000   C0E0         PUSH    A
   \   000002   C0D0         PUSH    PSW
   \   000004   EA           MOV     A,R2
   \   000005   C0E0         PUSH    A
   \   000007   C082         PUSH    DPL
   \   000009   C083         PUSH    DPH
   \   00000B                ; Saved register size: 5
   \   00000B                ; Auto size: 0
     12              M160_DutyCount++;
   \   00000B   90....       MOV     DPTR,#M160_DutyCount
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   04           INC     A
   \   000010   F0           MOVX    @DPTR,A
     13              if (M160_DutyCount >= 100)
   \   000011   C3           CLR     C
   \   000012   9464         SUBB    A,#0x64
   \   000014   4002         JC      ??T4_ISR_0
     14              {
     15                  M160_DutyCount = 0;
   \   000016   E4           CLR     A
   \   000017   F0           MOVX    @DPTR,A
     16              }
     17              if (M160_DutyCount >= M160_DutyValue)
   \                     ??T4_ISR_0:
   \   000018   E0           MOVX    A,@DPTR
   \   000019   C0E0         PUSH    A
   \   00001B   90....       MOV     DPTR,#M160_DutyValue
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   FA           MOV     R2,A
   \   000020   D0E0         POP     A
   \   000022   C3           CLR     C
   \   000023   9A           SUBB    A,R2
   \   000024   4004         JC      ??T4_ISR_1
     18              {
     19                  HAL_DO_OFF();
   \   000026   D280         SETB    0x80.0
   \   000028   8002         SJMP    ??T4_ISR_2
     20              }
     21              else
     22              {
     23                  HAL_DO_ON();
   \                     ??T4_ISR_1:
   \   00002A   C280         CLR     0x80.0
     24              }
     25          }
   \                     ??T4_ISR_2:
   \   00002C   D083         POP     DPH
   \   00002E   D082         POP     DPL
   \   000030   D0E0         POP     A
   \   000032   FA           MOV     R2,A
   \   000033   D0D0         POP     PSW
   \   000035   D0E0         POP     A
   \   000037   32           RETI
   \   000038                REQUIRE _A_P0
     26          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     27          void M160_Init(void)
   \                     M160_Init:
     28          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     29              HAL_DO_OUTPUT();
   \   000004   53F3FE       ANL     0xf3,#0xfe
   \   000007   43FD01       ORL     0xfd,#0x1
     30          
     31              // Set prescaler divider value to 128 (8KHz)
     32              X_T4CTL |= 0x80;
   \   00000A   9070EB       MOV     DPTR,#0x70eb
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   D2E7         SETB    0xE0 /* A   */.7
   \   000010   F0           MOVX    @DPTR,A
     33          
     34              X_T4CTL &= ~(0x10); // Stop timer
   \   000011   E0           MOVX    A,@DPTR
   \   000012   C2E4         CLR     0xE0 /* A   */.4
   \   000014   F0           MOVX    @DPTR,A
     35              T4IE = 0; // Disable interrupt
   \   000015   C2BC         CLR     0xb8.4
     36          }
   \   000017                REQUIRE ?Subroutine0
   \   000017                REQUIRE _A_IEN1
   \   000017                REQUIRE P0SEL
   \   000017                REQUIRE P0DIR
   \   000017                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
     37          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     38          void M160_On(uint8 duty)
   \                     M160_On:
     39          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     40              M160_DutyCount = 0;
   \   000004   E4           CLR     A
   \   000005   90....       MOV     DPTR,#M160_DutyCount
   \   000008   F0           MOVX    @DPTR,A
     41              M160_DutyValue = duty;
   \   000009   E9           MOV     A,R1
   \   00000A   90....       MOV     DPTR,#M160_DutyValue
   \   00000D   F0           MOVX    @DPTR,A
     42          
     43              X_T4CTL |= 0x10; // Start timer
   \   00000E   9070EB       MOV     DPTR,#0x70eb
   \   000011   E0           MOVX    A,@DPTR
   \   000012   D2E4         SETB    0xE0 /* A   */.4
   \   000014   F0           MOVX    @DPTR,A
     44              T4IE = 1; // Enable interrupt
   \   000015   D2BC         SETB    0xb8.4
     45          }
   \   000017   80..         SJMP    ?Subroutine0
   \   000019                REQUIRE _A_IEN1
     46          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     47          void M160_Off(void)
   \                     M160_Off:
     48          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     49              X_T4CTL &= ~(0x10); // Stop timer
   \   000004   9070EB       MOV     DPTR,#0x70eb
   \   000007   E0           MOVX    A,@DPTR
   \   000008   C2E4         CLR     0xE0 /* A   */.4
   \   00000A   F0           MOVX    @DPTR,A
     50              T4IE = 0; // Disable interrupt
   \   00000B   C2BC         CLR     0xb8.4
     51              HAL_DO_OFF();
   \   00000D   D280         SETB    0x80.0
     52          }
   \   00000F   80..         SJMP    ?Subroutine0
   \   000011                REQUIRE _A_P0
   \   000011                REQUIRE _A_IEN1

   \                                 In  segment INTVEC, offset 0x63, root
   \                     `??T4_ISR??INTVEC 99`:
   \   000063   02....       LJMP       (T4_ISR)

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??M160_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    M160_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??M160_On?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    M160_On

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??M160_Off?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    M160_Off

   Maximum stack usage in bytes:

     Function  ISTACK PSTACK XSTACK
     --------  ------ ------ ------
     M160_Init     2      0      0
     M160_Off      2      0      0
     M160_On       2      0      0
     T4_ISR        6      0      0


   Segment part sizes:

     Function/Label      Bytes
     --------------      -----
     _A_P0                  1
     _A_IEN1                1
     P0SEL                  1
     P0DIR                  1
     M160_DutyCount         1
     M160_DutyValue         1
     T4_ISR                56
     M160_Init             23
     ?Subroutine0           7
     M160_On               25
     M160_Off              17
     ??T4_ISR??INTVEC 99    3
     ??M160_Init?relay      6
     ??M160_On?relay        6
     ??M160_Off?relay       6

 
 72 bytes in segment BANKED_CODE
 18 bytes in segment BANK_RELAYS
  3 bytes in segment INTVEC
 56 bytes in segment NEAR_CODE
  4 bytes in segment SFR_AN
  2 bytes in segment XDATA_Z
 
 146 bytes of CODE  memory (+ 3 bytes shared)
   0 bytes of DATA  memory (+ 4 bytes shared)
   2 bytes of XDATA memory

Errors: none
Warnings: none
