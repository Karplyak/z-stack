###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                03/Sep/2013  01:31:49 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\GitHub\z-stack\Sensor Network                   #
#                          Example\Components\hal\module\M160.c               #
#    Command line       =  -f "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.c #
#                          fg" (-DCPU32MHZ -DROOT=__near_func -DBLINK_LEDS)   #
#                          -f "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig. #
#                          cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0             #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=TRUE      #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440)   #
#                          -f "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg #
#                          " (-DZCL_READ -DZCL_WRITE -DZCL_BASIC              #
#                          -DZCL_IDENTIFY -DZCL_ON_OFF -DZCL_KEY_ESTABLISH    #
#                          -DZCL_LOAD_CONTROL -DZCL_SIMPLE_METERING           #
#                          -DZCL_PRICING) -DZCL_MESSAGE                       #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Components\hal\module\M160.c" -D           #
#                          NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D            #
#                          MT_APP_FUNC -D MT_SYS_FUNC -D MT_ZDO_FUNC -D       #
#                          LCD_SUPPORTED=DEBUG -D xPOWER_SAVING -D            #
#                          End_Device -D HAL_KEYPAD -D xPA2591 -D HAL_TIMER   #
#                          -D MMN_UART -lC "D:\GitHub\z-stack\Sensor Network  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M160\List\" -lA        #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M160\List\"            #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M160\Obj\" -e          #
#                          --require_prototypes --debug --core=plain          #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "D:\GitHub\z-stack\Sensor  #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Endpoint & Device\CC2530DB\"    #
#                          -I "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\SOURCE\" -I                     #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\SOURCE\" -I                  #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I       #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MT\" -I  #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCL #
#                          UDE\" -I "D:\GitHub\z-stack\Sensor Network         #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\MODU #
#                          LE\" -I "D:\GitHub\z-stack\Sensor Network          #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARG #
#                          ET\CC2530EB\" -I "D:\GitHub\z-stack\Sensor         #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MCU #
#                          \CCSOC\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\INC #
#                          LUDE\" -I "D:\GitHub\z-stack\Sensor Network        #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF #
#                          \" -I "D:\GitHub\z-stack\Sensor Network            #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NW #
#                          K\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SE #
#                          C\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SA #
#                          PI\" -I "D:\GitHub\z-stack\Sensor Network          #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SY #
#                          S\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZC #
#                          L\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZD #
#                          O\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8W #
#                          \" -I "D:\GitHub\z-stack\Sensor Network            #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\"   #
#                          -I "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES #
#                          \SADDR\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES #
#                          \SDATA\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INCL #
#                          UDE\" -I "D:\GitHub\z-stack\Sensor Network         #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIGH #
#                          _LEVEL\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\" -I "D:\GitHub\z-stack\Sensor         #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\SINGLE_CHIP\" -I "C:\Program Files     #
#                          (x86)\IAR Systems\Embedded Workbench               #
#                          5.3\8051\INC\" -I "C:\Program Files (x86)\IAR      #
#                          Systems\Embedded Workbench 5.3\8051\INC\CLIB\"     #
#                          -Ohz                                               #
#    List file          =  D:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M160\List\M160.lst     #
#    Object file        =  D:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceEB_M160\Obj\M160.r51      #
#                                                                             #
#                                                                             #
###############################################################################

D:\GitHub\z-stack\Sensor Network Example\Components\hal\module\M160.c
      1          //-------------------------------------------------------------------
      2          // Filename: M160.c
      3          // Description: hal M160 PWM library
      4          //-------------------------------------------------------------------
      5          //-------------------------------------------------------------------
      6          // INCLUDES
      7          //-------------------------------------------------------------------
      8          #include "hal_defs.h"
      9          #include "ioCC2530.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1
     10          #include "hal_mcu.h"
     11          #include "hal_board.h"
     12          #include "M160.h"
     13          #include "hal_timer.h"
     14          #include "hal_lcd.h"
     15          
     16          //-------------------------------------------------------------------
     17          // LOCAL VARIABLES
     18          //-------------------------------------------------------------------

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     19          uint8 M160_DutyCount = 0;
   \                     M160_DutyCount:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_I, align 1, keep-with-next
     20          uint8 M160_DutyValue = 50;
   \                     M160_DutyValue:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for M160_DutyValue>`
   \   000001                REQUIRE __INIT_XDATA_I
     21          //-------------------------------------------------------------------
     22          // LOCAL FUNCTIONS
     23          //-------------------------------------------------------------------
     24          //-------------------------------------------------------------------
     25          // @fn      timerPwm_ISR
     26          // @brief   ISR framework for the 1k timer component
     27          // @param   none
     28          // @return  none
     29          //-------------------------------------------------------------------
     30          /*
     31          HAL_ISR_FUNCTION(M160_ISR, T4_VECTOR)
     32          {
     33              M160_DutyCount++;
     34              if (M160_DutyCount >= 100)
     35              {
     36                  M160_DutyCount = 0;
     37              }
     38              if (M160_DutyCount >= M160_DutyValue)
     39              {
     40                  HAL_DO_OFF();
     41              }
     42              else
     43              {
     44                  HAL_DO_ON();
     45              }
     46          }
     47          */
     48          
     49          //-------------------------------------------------------------------
     50          // GLOBAL FUNCTIONS
     51          //-------------------------------------------------------------------
     52          //-------------------------------------------------------------------
     53          // @fn      M160_Init
     54          // @brief    Set up timer 4 to generate an interrupt 1 kHz for PWM
     55          // @return  none
     56          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     57          void M160_Init(void)
   \                     M160_Init:
     58          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
     59              HAL_DO_OUTPUT();
   \   000005   53F3FE       ANL     0xf3,#0xfe
   \   000008   43FD01       ORL     0xfd,#0x1
     60          
     61              // Set prescaler divider value to 128 (8KHz)
     62              /*
     63              X_T4CTL |= 0x80;
     64          
     65              X_T4CTL &= ~(0x10); // Stop timer
     66              T4IE = 0; // Disable interrupt
     67              */
     68              uint8 status =
     69              HalTimerConfig(HAL_TIMER_0,
     70                             HAL_TIMER_MODE_CTC,
     71                             HAL_TIMER_CHANNEL_SINGLE,
     72                             HAL_TIMER_CH_MODE_OUTPUT_COMPARE,
     73                             1,
     74                             M160_Timer_Call_Back);
   \   00000B                ; Setup parameters for call to function HalTimerConfig
   \   00000B   75....       MOV     ?V0 + 0,#(??M160_Timer_Call_Back?relay & 0xff)
   \   00000E   75....       MOV     ?V0 + 1,#((??M160_Timer_Call_Back?relay >> 8) & 0xff)
   \   000011   78..         MOV     R0,#?V0 + 0
   \   000013   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000016   7D01         MOV     R5,#0x1
   \   000018   7C02         MOV     R4,#0x2
   \   00001A   7B01         MOV     R3,#0x1
   \   00001C   7A02         MOV     R2,#0x2
   \   00001E   7900         MOV     R1,#0x0
   \   000020   12....       LCALL   ??HalTimerConfig?relay
   \   000023   7402         MOV     A,#0x2
   \   000025   12....       LCALL   ?DEALLOC_XSTACK8
     75              HalTimerStart(HAL_TIMER_0,100);
   \   000028                ; Setup parameters for call to function HalTimerStart
   \   000028   90....       MOV     DPTR,#__Constant_64
   \   00002B   78..         MOV     R0,#?V0 + 0
   \   00002D   12....       LCALL   ?L_MOV_X
   \   000030   AA..         MOV     R2,?V0 + 0
   \   000032   AB..         MOV     R3,?V0 + 1
   \   000034   AC..         MOV     R4,?V0 + 2
   \   000036   AD..         MOV     R5,?V0 + 3
   \   000038   7900         MOV     R1,#0x0
   \   00003A   12....       LCALL   ??HalTimerStart?relay
     76          }
   \   00003D   7F04         MOV     R7,#0x4
   \   00003F   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   000042                REQUIRE P0SEL
   \   000042                REQUIRE P0DIR
     77          
     78          //-------------------------------------------------------------------
     79          // @fn          M160_On
     80          // @brief       Turn M160 on.
     81          // @param       uint8 duty
     82          // @return      none
     83          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     84          void M160_On(uint8 duty)
   \                     M160_On:
     85          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     86              //M160_DutyCount = 0;
     87              M160_DutyValue = duty;
   \   000004   E9           MOV     A,R1
   \   000005   90....       MOV     DPTR,#M160_DutyValue
   \   000008   F0           MOVX    @DPTR,A
     88          
     89              //X_T4CTL |= 0x10; // Start timer
     90              //T4IE = 1; // Enable interrupt
     91          }
   \   000009                REQUIRE ?Subroutine0
   \   000009                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
     92          
     93          //-------------------------------------------------------------------
     94          // @fn          M160_Off
     95          // @brief       Turn M160 off.
     96          // @return      none
     97          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     98          void M160_Off(void)
   \                     M160_Off:
     99          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    100              //X_T4CTL &= ~(0x10); // Stop timer
    101              //T4IE = 0; // Disable interrupt
    102              HAL_DO_OFF();
   \   000000   D280         SETB    0x80.0
    103          }
   \   000002   02....       LJMP    ?BRET
   \   000005                REQUIRE _A_P0
    104          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    105          void M160_Timer_Call_Back(uint8 timerId, uint8 channel, uint8 channelMode){
   \                     M160_Timer_Call_Back:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    106            M160_DutyCount++;
   \   000004   90....       MOV     DPTR,#M160_DutyCount
   \   000007   E0           MOVX    A,@DPTR
   \   000008   04           INC     A
   \   000009   F0           MOVX    @DPTR,A
    107            if (M160_DutyCount >= 100)
   \   00000A   C3           CLR     C
   \   00000B   9464         SUBB    A,#0x64
   \   00000D   4002         JC      ??M160_Timer_Call_Back_0
    108                M160_DutyCount = 0;
   \   00000F   E4           CLR     A
   \   000010   F0           MOVX    @DPTR,A
    109            if (M160_DutyCount >= M160_DutyValue)
   \                     ??M160_Timer_Call_Back_0:
   \   000011   E0           MOVX    A,@DPTR
   \   000012   C0E0         PUSH    A
   \   000014   90....       MOV     DPTR,#M160_DutyValue
   \   000017   E0           MOVX    A,@DPTR
   \   000018   FA           MOV     R2,A
   \   000019   D0E0         POP     A
   \   00001B   C3           CLR     C
   \   00001C   9A           SUBB    A,R2
   \   00001D   4004         JC      ??M160_Timer_Call_Back_1
    110                HAL_DO_OFF();
   \   00001F   D280         SETB    0x80.0
   \   000021   8002         SJMP    ??M160_Timer_Call_Back_2
    111            else
    112                HAL_DO_ON();
   \                     ??M160_Timer_Call_Back_1:
   \   000023   C280         CLR     0x80.0
    113          }
   \                     ??M160_Timer_Call_Back_2:
   \   000025   80..         SJMP    ?Subroutine0
   \   000027                REQUIRE _A_P0

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for M160_DutyValue>`:
   \   000000   32           DB 50

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_64:
   \   000000   64000000     DD 100

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??M160_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    M160_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??M160_On?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    M160_On

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??M160_Off?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    M160_Off

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??M160_Timer_Call_Back?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    M160_Timer_Call_Back

   Maximum stack usage in bytes:

     Function             ISTACK PSTACK XSTACK
     --------             ------ ------ ------
     M160_Init                0      0     14
       -> HalTimerConfig      0      0     28
       -> HalTimerStart       0      0     24
     M160_Off                 0      0      0
     M160_On                  2      0      0
     M160_Timer_Call_Back     3      0      0


   Segment part sizes:

     Function/Label                    Bytes
     --------------                    -----
     _A_P0                                1
     P0SEL                                1
     P0DIR                                1
     M160_DutyCount                       1
     M160_DutyValue                       1
     M160_Init                           66
     M160_On                              9
     ?Subroutine0                         7
     M160_Off                             5
     M160_Timer_Call_Back                39
     ?<Initializer for M160_DutyValue>    1
     __Constant_64                        4
     ??M160_Init?relay                    6
     ??M160_On?relay                      6
     ??M160_Off?relay                     6
     ??M160_Timer_Call_Back?relay         6

 
 126 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   3 bytes in segment SFR_AN
   1 byte  in segment XDATA_I
   1 byte  in segment XDATA_ID
   4 bytes in segment XDATA_ROM_C
   1 byte  in segment XDATA_Z
 
 151 bytes of CODE  memory
   0 bytes of CONST memory (+ 4 bytes shared)
   0 bytes of DATA  memory (+ 3 bytes shared)
   2 bytes of XDATA memory

Errors: none
Warnings: none
