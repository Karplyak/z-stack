///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V7.51A/W32 for 8051               06/Sep/2013  11:20:50 /
// Copyright 2004-2009 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  D:\GitHub\z-stack\Sensor Network                  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\Source\hal_sensor.c                        /
//    Command line       =  -f "D:\GitHub\z-stack\Sensor Network              /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev. /
//                          cfg" (-DCPU32MHZ -DROOT=__near_func               /
//                          -DBLINK_LEDS) -f "D:\GitHub\z-stack\Sensor        /
//                          Network Example\Projects\zstack\Sensor Network    /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig /
//                          .cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0           /
//                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800         /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=TRUE -DPOLL_RATE=1000        /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100   /
//                          -DREJOIN_POLL_RATE=440) -f                        /
//                          "D:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cf /
//                          g" (-DZCL_READ -DZCL_WRITE -DZCL_BASIC            /
//                          -DZCL_IDENTIFY -DZCL_ON_OFF -DZCL_KEY_ESTABLISH   /
//                          -DZCL_LOAD_CONTROL -DZCL_SIMPLE_METERING          /
//                          -DZCL_PRICING) -DZCL_MESSAGE                      /
//                          "D:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\Source\hal_sensor.c" -D NWK_AUTO_POLL -D   /
//                          ZTOOL_P1 -D MT_TASK -D MT_APP_FUNC -D             /
//                          MT_SYS_FUNC -D MT_ZDO_FUNC -D                     /
//                          LCD_SUPPORTED=DEBUG -D xPOWER_SAVING -D           /
//                          End_Device -D HAL_KEYPAD -D xPA2591 -D            /
//                          HAL_TIMER=TRUE -D MMN_UART -lC                    /
//                          "D:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\EndDeviceEB_M160\List\" -lA       /
//                          "D:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\EndDeviceEB_M160\List\"           /
//                          --diag_suppress Pe001,Pa010 -o                    /
//                          "D:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\EndDeviceEB_M160\Obj\" -e         /
//                          --require_prototypes --debug --core=plain         /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          "D:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint & Device\CC2530DB\"   /
//                          -I "D:\GitHub\z-stack\Sensor Network              /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\SOURCE\" -I                    /
//                          "D:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\SOURCE\" -I                 /
//                          "D:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I      /
//                          "D:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MT\"    /
//                          -I "D:\GitHub\z-stack\Sensor Network              /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INC /
//                          LUDE\" -I "D:\GitHub\z-stack\Sensor Network       /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\MOD /
//                          ULE\" -I "D:\GitHub\z-stack\Sensor Network        /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TAR /
//                          GET\CC2530EB\" -I "D:\GitHub\z-stack\Sensor       /
//                          Network Example\Projects\zstack\Sensor Network    /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MC /
//                          U\CCSOC\" -I "D:\GitHub\z-stack\Sensor Network    /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\IN /
//                          CLUDE\" -I "D:\GitHub\z-stack\Sensor Network      /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\A /
//                          F\" -I "D:\GitHub\z-stack\Sensor Network          /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\N /
//                          WK\" -I "D:\GitHub\z-stack\Sensor Network         /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\S /
//                          EC\" -I "D:\GitHub\z-stack\Sensor Network         /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\S /
//                          API\" -I "D:\GitHub\z-stack\Sensor Network        /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\S /
//                          YS\" -I "D:\GitHub\z-stack\Sensor Network         /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\Z /
//                          CL\" -I "D:\GitHub\z-stack\Sensor Network         /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\Z /
//                          DO\" -I "D:\GitHub\z-stack\Sensor Network         /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8 /
//                          W\" -I "D:\GitHub\z-stack\Sensor Network          /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\"  /
//                          -I "D:\GitHub\z-stack\Sensor Network              /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICE /
//                          S\SADDR\" -I "D:\GitHub\z-stack\Sensor Network    /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICE /
//                          S\SDATA\" -I "D:\GitHub\z-stack\Sensor Network    /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INC /
//                          LUDE\" -I "D:\GitHub\z-stack\Sensor Network       /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIG /
//                          H_LEVEL\" -I "D:\GitHub\z-stack\Sensor Network    /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW /
//                          _LEVEL\srf04\" -I "D:\GitHub\z-stack\Sensor       /
//                          Network Example\Projects\zstack\Sensor Network    /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW /
//                          _LEVEL\srf04\SINGLE_CHIP\" -I "C:\Program Files   /
//                          (x86)\IAR Systems\Embedded Workbench              /
//                          5.3\8051\INC\" -I "C:\Program Files (x86)\IAR     /
//                          Systems\Embedded Workbench 5.3\8051\INC\CLIB\"    /
//                          -Ohz                                              /
//    List file          =  D:\GitHub\z-stack\Sensor Network                  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\EndDeviceEB_M160\List\hal_sensor. /
//                          s51                                               /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME hal_sensor

        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN __INIT_XDATA_Z

        PUBLIC ??sleep?relay
        FUNCTION ??sleep?relay,0203H
        PUBLIC TransmitApp_Msg
        PUBLIC sleep
        FUNCTION sleep,080203H
        ARGFRAME XSTACK, 0, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
sleep               SYMBOL "sleep"
??sleep?relay       SYMBOL "?relay", sleep

// D:\GitHub\z-stack\Sensor Network Example\Projects\zstack\Sensor Network Application\ZIGBEE Endpoint & Device\Source\hal_sensor.c
//    1 #include "ZComDef.h"
//    2 #include "OSAL.h"
//    3 #include "AF.h"
//    4 #include "ZDApp.h"
//    5 #include "ZDObject.h"
//    6 #include "ZDProfile.h"
//    7 #include "mac_radio_defs.h"
//    8 
//    9 #include "zcl.h"
//   10 #include "zcl_general.h"
//   11 #include "zcl_ha.h"
//   12 #include "zcl_zigbee device.h"
//   13 
//   14 #include "onboard.h"
//   15 #include "hal_lcd.h"
//   16 #include "hal_led.h"
//   17 #include "hal_key.h"
//   18 #include "MT_UART.h"
//   19 #include "hal_uart.h"
//   20 #include "hal_timer.h"
//   21 #include "hal_keypad.h"
//   22 #include "hal_buzzer.h"
//   23   
//   24 /* HAL Sensor */
//   25 #include "hal_sensor.h"
//   26 
//   27 #if defined(M110)
//   28   #include "M110.h"
//   29 #endif
//   30 #if defined(M140)
//   31   #include "M140.h"
//   32 #endif
//   33 #if defined(M160)
//   34   #include "M160.h"
//   35 #endif
//   36 #if defined(M170)
//   37   #include "M170.h"
//   38 #endif
//   39 #if defined(M190)
//   40   #include "M190.h"
//   41 #endif
//   42 #if defined(M200)
//   43   #include "M200.h"
//   44 #endif
//   45 #if defined(M270)
//   46   #include "M270.h"
//   47 #endif
//   48 

        RSEG XDATA_Z:XDATA:NOROOT(0)
//   49 byte TransmitApp_Msg[ TRANSMITAPP_MAX_DATA_LEN ]; 
TransmitApp_Msg:
        DS 102
        REQUIRE __INIT_XDATA_Z
//   50  
//   51 void M110_SensorFunction(void); // M140 Module function
//   52 void M140_SensorFunction(void); // M140 Module function
//   53 void M160_SensorFunction(void); // M160 Module function
//   54 void M170_SensorFunction(void); // M170 Module function
//   55 void M190_SensorFunction(void); // M190 Module function
//   56 void M200_SensorFunction(void); // M200 Module function
//   57 void M270_SensorFunction(void); // M270 Module function
//   58 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   59 void sleep(uint16 sec)
sleep:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function sleep
//   60 {
        ; Saved register size: 0
        ; Auto size: 0
//   61     uint16 i,j,k;
//   62     
//   63     k = sec * 1000;
        MOV     A,R2
        MOV     B,#-0x18
        MUL     AB
        XCH     A,R2
        MOV     R4,B
        MOV     B,#0x3
        MUL     AB
        ADD     A,R4
        MOV     R4,A
        MOV     B,#-0x18
        MOV     A,R3
        MUL     AB
        ADD     A,R4
        MOV     R3,A
//   64     
//   65     for(i=0;i<1600;i++)
        MOV     R4,#0x40
        MOV     R5,#0x6
//   66       for(j=0;j<k;j++)
??sleep_0:
        MOV     R0,#0x0
        MOV     R1,#0x0
        SJMP    ??sleep_1
//   67         asm("nop");
??sleep_2:
        nop
        MOV     A,R0
        ADD     A,#0x1
        INC     R0
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R1,A
??sleep_1:
        CLR     C
        MOV     A,R0
        SUBB    A,R2
        MOV     A,R1
        SUBB    A,R3
        JC      ??sleep_2
        MOV     A,R4
        ADD     A,#-0x1
        DEC     R4
        MOV     A,R5
        ADDC    A,#-0x1
        MOV     R5,A
        MOV     A,R4
        JNZ     ??sleep_3
        MOV     A,R5
??sleep_3:
        JNZ     ??sleep_0
//   68 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock0

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??sleep?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    sleep

        END
//   69 
//   70 #if defined(M110)
//   71 void M110_SensorFunction(void)
//   72 {
//   73     uint16 val;
//   74       
//   75     M110_Init();
//   76     
//   77     val = M110_GetValue();
//   78     
//   79     TransmitApp_Msg[0] = 1 + '0';  
//   80     TransmitApp_Msg[1] = 1 + '0';   
//   81     TransmitApp_Msg[2] = 0 + '0';        
//   82     TransmitApp_Msg[3] = ',';
//   83     TransmitApp_Msg[4] = 'N';     
//   84     TransmitApp_Msg[5] = ',';
//   85     if(val > 3000)
//   86     {    
//   87         TransmitApp_Msg[6] = 1 + '0';
//   88     }
//   89     else
//   90     {
//   91         TransmitApp_Msg[6] = 0 + '0';  
//   92     }       
//   93     TransmitApp_Msg[7] = ',';
//   94     
//   95     uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, 
//   96                                  ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC,
//   97                                  TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, 8, 
//   98                                  TransmitApp_Msg );
//   99  }
//  100 #endif
//  101   
//  102 #if defined(M140)
//  103 
//  104 void M140_SensorFunction(void)
//  105 {
//  106   uint16 val;
//  107 
//  108   M140_Init();
//  109       
//  110   val = M140_GetValue();  
//  111   if((0x2000 & val) == 0x2000) // check sign bit for negative value
//  112   {
//  113     val = ((val - 16384) * 10) / 32;
//  114   }
//  115   else
//  116   {
//  117     val = (val * 10) / 32;
//  118   }
//  119 
//  120   TransmitApp_Msg[0] = 1 + '0';  
//  121   TransmitApp_Msg[1] = 4 + '0';   
//  122   TransmitApp_Msg[2] = 0 + '0';        
//  123   TransmitApp_Msg[3] = ',';
//  124   TransmitApp_Msg[4] = 'B';   
//  125   TransmitApp_Msg[5] = ',';  
//  126   TransmitApp_Msg[6] = (val / 100) + '0';
//  127   TransmitApp_Msg[7] = ((val / 10) % 10) + '0';
//  128   TransmitApp_Msg[8] = '.';
//  129   TransmitApp_Msg[9] = (val % 10) + '0';
//  130   TransmitApp_Msg[10] = ',';   
//  131      
//  132   uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, 
//  133                                 ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC, 
//  134                                 TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, 11, 
//  135                                 TransmitApp_Msg );   
//  136 }
//  137 #endif
//  138 
//  139 #if defined(M160)
//  140 uint8 duty_M160 = 50;
//  141 void M160_SensorFunction(void)
//  142 {
//  143 
//  144   //M160_Init();
//  145   //M160_On(duty_M160);
//  146   /*
//  147   if (ch > 0)
//  148   {           
//  149     if (ch == 'U')
//  150     {
//  151       if (duty_M160 < 100)
//  152       {
//  153         duty_M160 = duty_M160 + 5;
//  154       }
//  155     }
//  156     
//  157     if (ch == 'N')
//  158     {
//  159       if (duty_M160 > 0)
//  160       {
//  161         duty_M160 = duty_M160 - 5;
//  162       }
//  163     }
//  164       
//  165     M160_On(duty_M160);
//  166   }
//  167   */
//  168   TransmitApp_Msg[0] = 1 + '0';  
//  169   TransmitApp_Msg[1] = 6 + '0';   
//  170   TransmitApp_Msg[2] = 0 + '0';        
//  171   TransmitApp_Msg[3] = ',';
//  172   TransmitApp_Msg[4] = 'B';   
//  173   TransmitApp_Msg[5] = ',';  
//  174   TransmitApp_Msg[6] = (duty_M160 / 100) + '0';
//  175   TransmitApp_Msg[7] = ((duty_M160 / 10) % 10) + '0';
//  176   TransmitApp_Msg[8] = (duty_M160 % 10) + '0';
//  177   TransmitApp_Msg[9] = ','; 
//  178  
//  179   uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, 
//  180                                  ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC, 
//  181                                  TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, 10, 
//  182                                  TransmitApp_Msg ); 
//  183 }
//  184 #endif 
//  185 
//  186 #if defined(M170)
//  187 void M170_SensorFunction(void)
//  188 {
//  189     uint16 val;
//  190      
//  191     M170_Init();
//  192   
//  193     val = M170_GetValue();  
//  194     if (val > 2000)
//  195     {
//  196         val -= 2000;
//  197     }
//  198     else
//  199     {
//  200         val = 0;
//  201     }
//  202     val /= 120;
//  203             
//  204     if (val > 100)
//  205     {
//  206         val = 100;
//  207     }
//  208    
//  209     TransmitApp_Msg[0] = 1 + '0';  
//  210     TransmitApp_Msg[1] = 7 + '0';   
//  211     TransmitApp_Msg[2] = 0 + '0';        
//  212     TransmitApp_Msg[3] = ',';
//  213     TransmitApp_Msg[4] = 'B';   
//  214     TransmitApp_Msg[5] = ',';  
//  215     TransmitApp_Msg[6] = (val / 100) + '0';
//  216     TransmitApp_Msg[7] = ((val / 10) % 10) + '0';
//  217     TransmitApp_Msg[8] = (val % 10) + '0';
//  218     TransmitApp_Msg[9] = ',';  
//  219     
//  220     uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, 
//  221                                  ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC,
//  222                                  TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, 10, 
//  223                                  TransmitApp_Msg );
//  224  }
//  225 #endif
//  226  
//  227 #if defined(M190)
//  228 void M190_SensorFunction(void)
//  229 {
//  230     uint16 val;
//  231 
//  232     M190_Init();
//  233     val = M190_GetValue();  
//  234 
//  235     if (val > 2000)
//  236     {
//  237         val -= 2000;
//  238     }
//  239     else
//  240     {
//  241         val = 0;
//  242     }
//  243     val /= 120;
//  244             
//  245     if (val > 100)
//  246     {
//  247         val = 100;
//  248     }
//  249     
//  250     TransmitApp_Msg[0] = 1 + '0';  
//  251     TransmitApp_Msg[1] = 9 + '0';   
//  252     TransmitApp_Msg[2] = 0 + '0';        
//  253     TransmitApp_Msg[3] = ',';
//  254     TransmitApp_Msg[4] = 'A';   
//  255     TransmitApp_Msg[5] = ',';  
//  256     TransmitApp_Msg[6] = (val / 100) + '0';
//  257     TransmitApp_Msg[7] = ((val / 10) % 10) + '0';
//  258     TransmitApp_Msg[8] = (val % 10) + '0';
//  259     TransmitApp_Msg[9] = ',';  
//  260     uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, 
//  261                                  ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC,
//  262                                  TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, 10, 
//  263                                  TransmitApp_Msg );
//  264 }
//  265 #endif
//  266  
//  267 #if defined(M200)
//  268 void M200_SensorFunction(void)
//  269  {
//  270     // M200 module variable
//  271     uint16 temp, humi;
//  272       
//  273     // initilization the device
//  274     M200_Init();
//  275   
//  276     M200_GetValue();
//  277     temp = (uint16)(((((float)M200_Temp) *0.01) - 40.0) *10.0);
//  278     humi = (uint16)(((((float)M200_Humi) *0.0405) - (((float)M200_Humi)*((float)M200_Humi) *0.0000028) - 4.0) *10.0);
//  279     if (humi > 999)
//  280     {
//  281       humi = 999;
//  282     }
//  283     if (temp > 999)
//  284     {
//  285       temp = 999;
//  286     }
//  287     
//  288     TransmitApp_Msg[0] = (humi / 100) + '0';
//  289     TransmitApp_Msg[1] = ((humi / 10) % 10) + '0';
//  290     TransmitApp_Msg[2] = '.';
//  291     TransmitApp_Msg[3] = (humi % 10) + '0';
//  292     TransmitApp_Msg[4] = ' ';
//  293     TransmitApp_Msg[5] = (temp / 100) + '0';
//  294     TransmitApp_Msg[6] = ((temp / 10) % 10) + '0';
//  295     TransmitApp_Msg[7] = '.';
//  296     TransmitApp_Msg[8] = (temp % 10) + '0';
//  297     
//  298     uint8 tmp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF, 
//  299                                  ZCL_CLUSTER_ID_GEN_BASIC, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, 9, TransmitApp_Msg );
//  300  }
//  301 #endif
//  302  
//  303 #if defined(M270)
//  304 
//  305 void M270_SensorFunction(void)
//  306 {
//  307     static uint8 udo;
//  308 
//  309     M270_Init();
//  310     
//  311     if( ch == 'A' )
//  312     {
//  313         udo = 1;
//  314         M270_SetDO(udo);
//  315     }
//  316      
//  317     if( ch == 'D' )
//  318     {
//  319         udo = 0;
//  320         M270_SetDO(udo);
//  321     }
//  322 }
//  323 #endif
// 
//  64 bytes in segment BANKED_CODE
//   6 bytes in segment BANK_RELAYS
// 102 bytes in segment XDATA_Z
// 
//  70 bytes of CODE  memory
// 102 bytes of XDATA memory
//
//Errors: none
//Warnings: none
