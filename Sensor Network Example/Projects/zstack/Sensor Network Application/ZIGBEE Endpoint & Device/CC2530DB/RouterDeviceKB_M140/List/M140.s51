///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V7.51A/W32 for 8051               18/Aug/2013  22:28:41 /
// Copyright 2004-2009 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  C:\GitHub\z-stack\Sensor Network                  /
//                          Example\Components\hal\module\M140.c              /
//    Command line       =  -f "C:\GitHub\z-stack\Sensor Network              /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wRouter /
//                          .cfg" (-DCPU32MHZ -DROOT=__near_func              /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE -DRTR_NWK        /
//                          -DBLINK_LEDS) -f "C:\GitHub\z-stack\Sensor        /
//                          Network Example\Projects\zstack\Sensor Network    /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig /
//                          .cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0           /
//                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800         /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=TRUE -DPOLL_RATE=1000        /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100   /
//                          -DREJOIN_POLL_RATE=440) -f                        /
//                          "C:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cf /
//                          g" (-DZCL_READ -DZCL_WRITE -DZCL_BASIC            /
//                          -DZCL_IDENTIFY -DZCL_ON_OFF -DZCL_KEY_ESTABLISH   /
//                          -DZCL_LOAD_CONTROL -DZCL_SIMPLE_METERING          /
//                          -DZCL_PRICING) -DZCL_MESSAGE                      /
//                          "C:\GitHub\z-stack\Sensor Network                 /
//                          Example\Components\hal\module\M140.c" -D          /
//                          NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D           /
//                          MT_APP_FUNC -D MT_SYS_FUNC -D MT_ZDO_FUNC -D      /
//                          LCD_SUPPORTED=DEBUG -D xPOWER_SAVING -D           /
//                          Router_Device -D M140 -D xPA2591 -lC              /
//                          "C:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\RouterDeviceKB_M140\List\" -lA    /
//                          "C:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\RouterDeviceKB_M140\List\"        /
//                          --diag_suppress Pe001,Pa010 -o                    /
//                          "C:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\RouterDeviceKB_M140\Obj\" -e      /
//                          --require_prototypes --debug --core=plain         /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          "C:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint & Device\CC2530DB\"   /
//                          -I "C:\GitHub\z-stack\Sensor Network              /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\SOURCE\" -I                    /
//                          "C:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\SOURCE\" -I                 /
//                          "C:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I      /
//                          "C:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MT\"    /
//                          -I "C:\GitHub\z-stack\Sensor Network              /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INC /
//                          LUDE\" -I "C:\GitHub\z-stack\Sensor Network       /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\MOD /
//                          ULE\" -I "C:\GitHub\z-stack\Sensor Network        /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TAR /
//                          GET\CC2530KB\" -I "C:\GitHub\z-stack\Sensor       /
//                          Network Example\Projects\zstack\Sensor Network    /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MC /
//                          U\CCSOC\" -I "C:\GitHub\z-stack\Sensor Network    /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\IN /
//                          CLUDE\" -I "C:\GitHub\z-stack\Sensor Network      /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\A /
//                          F\" -I "C:\GitHub\z-stack\Sensor Network          /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\N /
//                          WK\" -I "C:\GitHub\z-stack\Sensor Network         /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\S /
//                          EC\" -I "C:\GitHub\z-stack\Sensor Network         /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\S /
//                          API\" -I "C:\GitHub\z-stack\Sensor Network        /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\S /
//                          YS\" -I "C:\GitHub\z-stack\Sensor Network         /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\Z /
//                          CL\" -I "C:\GitHub\z-stack\Sensor Network         /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\Z /
//                          DO\" -I "C:\GitHub\z-stack\Sensor Network         /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8 /
//                          W\" -I "C:\GitHub\z-stack\Sensor Network          /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\"  /
//                          -I "C:\GitHub\z-stack\Sensor Network              /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICE /
//                          S\SADDR\" -I "C:\GitHub\z-stack\Sensor Network    /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICE /
//                          S\SDATA\" -I "C:\GitHub\z-stack\Sensor Network    /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INC /
//                          LUDE\" -I "C:\GitHub\z-stack\Sensor Network       /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIG /
//                          H_LEVEL\" -I "C:\GitHub\z-stack\Sensor Network    /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW /
//                          _LEVEL\srf04\" -I "C:\GitHub\z-stack\Sensor       /
//                          Network Example\Projects\zstack\Sensor Network    /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW /
//                          _LEVEL\srf04\SINGLE_CHIP\" -I "C:\Program         /
//                          Files\IAR Systems\Embedded Workbench              /
//                          5.3\8051\INC\" -I "C:\Program Files\IAR           /
//                          Systems\Embedded Workbench 5.3\8051\INC\CLIB\"    /
//                          -Ohz                                              /
//    List file          =  C:\GitHub\z-stack\Sensor Network                  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\RouterDeviceKB_M140\List\M140.s51 /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME M140

        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ??ADT7301_Read?relay
        EXTERN ??ADT7301_Start?relay
        EXTERN ??M140_SpiRW?relay
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN __INIT_XDATA_Z

        PUBLIC ??ADT7301_Read?relay
        FUNCTION ??ADT7301_Read?relay,0203H
        PUBLIC ??ADT7301_Start?relay
        FUNCTION ??ADT7301_Start?relay,0203H
        PUBLIC ??M140_GetValue?relay
        FUNCTION ??M140_GetValue?relay,0203H
        PUBLIC ??M140_Init?relay
        FUNCTION ??M140_Init?relay,0203H
        PUBLIC ??M140_SpiRW?relay
        FUNCTION ??M140_SpiRW?relay,0203H
        PUBLIC ADT7301_Read
        FUNCTION ADT7301_Read,021203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ADT7301_Start
        FUNCTION ADT7301_Start,021203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC M140_GetValue
        FUNCTION M140_GetValue,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC M140_Init
        FUNCTION M140_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC M140_SpiRW
        FUNCTION M140_SpiRW,0203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUBLIC M140_Value
        PUBWEAK P0DIR
        PUBWEAK P0SEL
        PUBWEAK _A_P0
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
halMcuWaitMs        SYMBOL "halMcuWaitMs"
??halMcuWaitMs?relay SYMBOL "?relay", halMcuWaitMs
ADT7301_Read        SYMBOL "ADT7301_Read"
??ADT7301_Read?relay SYMBOL "?relay", ADT7301_Read
ADT7301_Start       SYMBOL "ADT7301_Start"
??ADT7301_Start?relay SYMBOL "?relay", ADT7301_Start
M140_GetValue       SYMBOL "M140_GetValue"
??M140_GetValue?relay SYMBOL "?relay", M140_GetValue
M140_Init           SYMBOL "M140_Init"
??M140_Init?relay   SYMBOL "?relay", M140_Init
M140_SpiRW          SYMBOL "M140_SpiRW"
??M140_SpiRW?relay  SYMBOL "?relay", M140_SpiRW

        EXTERN halMcuWaitMs
        FUNCTION halMcuWaitMs,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??halMcuWaitMs?relay
        FUNCTION ??halMcuWaitMs?relay,00H

// C:\GitHub\z-stack\Sensor Network Example\Components\hal\module\M140.c
//    1 #include "hal_mcu.h"

        ASEGN SFR_AN:DATA:NOROOT,080H
// union <unnamed> volatile __sfr _A_P0
_A_P0:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f3H
// unsigned char volatile __sfr P0SEL
P0SEL:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0fdH
// unsigned char volatile __sfr P0DIR
P0DIR:
        DS 1
//    2 #include "hal_board.h"
//    3 #include "hal_digio.h"
//    4 #include "hal_keypad.h"
//    5 #include "hal_timer.h"
//    6 #include "M140.h"
//    7 

        RSEG XDATA_Z:XDATA:NOROOT(0)
//    8 uint16 M140_Value;
M140_Value:
        DS 2
        REQUIRE __INIT_XDATA_Z
//    9 
//   10 uint8 M140_SpiRW(uint8 ch);
//   11 void ADT7301_Start(void);
//   12 void ADT7301_Read(void);
//   13 
//   14 //--------------------------------------------
//   15 // The M140 module SPI read, write
//   16 //--------------------------------------------

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   17 uint8 M140_SpiRW(uint8 ch)
M140_SpiRW:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function M140_SpiRW
//   18 {
        ; Saved register size: 0
        ; Auto size: 0
        MOV     A,R1
//   19     uint8 i, cmd, ret;
//   20 
//   21     cmd = ch;
        MOV     R3,A
//   22     for (i = 0; i < 8; i++)
        MOV     R2,#0x8
//   23     {
//   24         HAL_SPI_CLK_CLR();
??M140_SpiRW_0:
        CLR     0x80.5
//   25         if (cmd &0x80)
        MOV     A,R3
        MOV     C,0xE0 /* A   */.7
        JNC     ??M140_SpiRW_1
//   26         {
//   27             HAL_SPI_MOSI_SET();
        SETB    0x80.4
        SJMP    ??M140_SpiRW_2
//   28         }
//   29         else
//   30         {
//   31             HAL_SPI_MOSI_CLR();
??M140_SpiRW_1:
        CLR     0x80.4
//   32         }
//   33         cmd <<= 1;
??M140_SpiRW_2:
        CLR     C
        RLC     A
        MOV     R3,A
//   34         ret <<= 1;
        MOV     A,R1
        CLR     C
        RLC     A
        MOV     R1,A
//   35         HAL_SPI_CLK_SET();
        SETB    0x80.5
//   36         if (HAL_SPI_MISO_VAL())
        MOV     C,0x80.6
        JNC     ??M140_SpiRW_3
//   37         {
//   38             ret |= 0x01;
        SETB    0xE0 /* A   */.0
        MOV     R1,A
//   39         }
//   40     }
??M140_SpiRW_3:
        DEC     R2
        MOV     A,R2
        JNZ     ??M140_SpiRW_0
//   41     HAL_SPI_MOSI_SET();
        SETB    0x80.4
//   42     return ret;
        LJMP    ?BRET
        CFI EndBlock cfiBlock0
        REQUIRE _A_P0
//   43 }
//   44 
//   45 //--------------------------------------------
//   46 // Start the ADT7301
//   47 //--------------------------------------------

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   48 void ADT7301_Start(void)
ADT7301_Start:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function ADT7301_Start
//   49 {
        FUNCALL ADT7301_Start, M140_SpiRW
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ADT7301_Start, M140_SpiRW
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   50     HAL_SPI_CS_EN();
        CLR     0x80.7
//   51     M140_SpiRW(0x00);
        ; Setup parameters for call to function M140_SpiRW
        MOV     R1,#0x0
        LCALL   ??M140_SpiRW?relay
//   52     M140_SpiRW(0x00);
        ; Setup parameters for call to function M140_SpiRW
        MOV     R1,#0x0
        LCALL   ??M140_SpiRW?relay
//   53     HAL_SPI_CS_DIS();
        SETB    0x80.7
        CFI EndBlock cfiBlock1
//   54 }
        REQUIRE ?Subroutine1
        REQUIRE _A_P0
        ; // Fall through to label ?Subroutine1

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
        CFI CFA_SP SP+-4
        CFI DPH0 SameValue
        POP     DPL
        CFI CFA_SP SP+-3
        CFI DPL0 SameValue
        LJMP    ?BRET
        CFI EndBlock cfiBlock2
//   55 
//   56 //--------------------------------------------
//   57 // Read the ADT7301 
//   58 //--------------------------------------------

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   59 void ADT7301_Read(void)
ADT7301_Read:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function ADT7301_Read
//   60 {
        FUNCALL ADT7301_Read, M140_SpiRW
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ADT7301_Read, M140_SpiRW
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
//   61     HAL_SPI_CS_EN();
        CLR     0x80.7
//   62     M140_Value = M140_SpiRW(0x20);
        ; Setup parameters for call to function M140_SpiRW
        MOV     R1,#0x20
        LCALL   ??M140_SpiRW?relay
        MOV     A,R1
        MOV     DPTR,#M140_Value
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//   63     M140_Value = (M140_Value << 8) + M140_SpiRW(0x00);
        MOV     DPTR,#M140_Value
        MOVX    A,@DPTR
        MOV     R7,A
        ; Setup parameters for call to function M140_SpiRW
        MOV     R1,#0x0
        LCALL   ??M140_SpiRW?relay
        MOV     A,R1
        ADD     A,#0x0
        MOV     R0,A
        CLR     A
        ADDC    A,R7
        MOV     R1,A
        MOV     DPTR,#M140_Value
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
//   64     HAL_SPI_CS_DIS();
        SETB    0x80.7
//   65 }
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock3
        REQUIRE _A_P0
//   66 
//   67 //--------------------------------------------
//   68 // Initilization M140 module
//   69 //--------------------------------------------

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   70 void M140_Init(void)
M140_Init:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function M140_Init
//   71 {   
        FUNCALL M140_Init, ADT7301_Start
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL M140_Init, halMcuWaitMs
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL M140_Init, ADT7301_Read
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   72     HAL_SPI_MISO_INPUT();
        ANL     0xf3,#0xbf
        ANL     0xfd,#0xbf
//   73     HAL_SPI_MOSI_OUTPUT();
        ANL     0xf3,#0xef
        ORL     0xfd,#0x10
//   74     HAL_SPI_CLK_OUTPUT();
        ANL     0xf3,#0xdf
        ORL     0xfd,#0x20
//   75     HAL_SPI_CS_OUTPUT();
        ANL     0xf3,#0x7f
        ORL     0xfd,#0x80
//   76     
//   77     ADT7301_Start();
        ; Setup parameters for call to function ADT7301_Start
        LCALL   ?Subroutine0 & 0xFFFF
//   78     halMcuWaitMs(2);
//   79     ADT7301_Read();
//   80 }
??CrossCallReturnLabel_0:
        SJMP    ?Subroutine1
        CFI EndBlock cfiBlock4
        REQUIRE P0SEL
        REQUIRE P0DIR
//   81 
//   82 //--------------------------------------------
//   83 // Get the M140 sensor module value
//   84 //--------------------------------------------

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   85 uint16 M140_GetValue(void)
M140_GetValue:
        CFI Block cfiBlock5 Using cfiCommon0
        CFI Function M140_GetValue
//   86 {
        FUNCALL M140_GetValue, ADT7301_Start
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL M140_GetValue, halMcuWaitMs
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL M140_GetValue, ADT7301_Read
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   87     ADT7301_Start();
        ; Setup parameters for call to function ADT7301_Start
        LCALL   ?Subroutine0 & 0xFFFF
//   88     halMcuWaitMs(2);
//   89     ADT7301_Read();
//   90     
//   91     return M140_Value;
??CrossCallReturnLabel_1:
        MOV     DPTR,#M140_Value
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        SJMP    ?Subroutine1
        CFI EndBlock cfiBlock5
//   92 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiCond6 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_0
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond7 Using cfiCommon0
        CFI (cfiCond7) NoFunction
        CFI (cfiCond7) Conditional ??CrossCallReturnLabel_1
        CFI (cfiCond7) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond7) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond7) CFA_SP SP+-5
        CFI Block cfiPicker8 Using cfiCommon1
        CFI (cfiPicker8) NoFunction
        CFI (cfiPicker8) Picker
        LCALL   ??ADT7301_Start?relay
        ; Setup parameters for call to function halMcuWaitMs
        ; Setup parameters for call to function halMcuWaitMs
        MOV     R2,#0x2
        MOV     R3,#0x0
        LCALL   ??halMcuWaitMs?relay
        ; Setup parameters for call to function ADT7301_Read
        ; Setup parameters for call to function ADT7301_Read
        LCALL   ??ADT7301_Read?relay
        RET
        CFI EndBlock cfiCond6
        CFI EndBlock cfiCond7
        CFI EndBlock cfiPicker8

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??M140_SpiRW?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    M140_SpiRW

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ADT7301_Start?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ADT7301_Start

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ADT7301_Read?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ADT7301_Read

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??M140_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    M140_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??M140_GetValue?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    M140_GetValue

        END
//   93 
// 
// 183 bytes in segment BANKED_CODE
//  30 bytes in segment BANK_RELAYS
//   3 bytes in segment SFR_AN
//   2 bytes in segment XDATA_Z
// 
// 213 bytes of CODE  memory
//   0 bytes of DATA  memory (+ 3 bytes shared)
//   2 bytes of XDATA memory
//
//Errors: none
//Warnings: none
