###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                30/Nov/2010  15:53:45 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fina #
#                          l Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1.4.0 #
#                          \Sensor Network Example\Components\hal\module\M220 #
#                          .c                                                 #
#    Command line       =  -f "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_ #
#                          Final Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1 #
#                          .4.0\Sensor Network Example\Projects\zstack\Sensor #
#                           Network Application\ZIGBEE Endpoint &             #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wRouter. #
#                          cfg" (-DCPU32MHZ -DROOT=__near_func                #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE -DRTR_NWK         #
#                          -DBLINK_LEDS) -f "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³ #
#                          f¥úºÐ(CC2530)_Final Version\ZIGBEE                 #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig. #
#                          cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0             #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=TRUE      #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440)   #
#                          -f "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_ #
#                          Final Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1 #
#                          .4.0\Sensor Network Example\Projects\zstack\Sensor #
#                           Network Application\ZIGBEE Endpoint &             #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg #
#                          " (-DZCL_READ -DZCL_WRITE -DZCL_BASIC              #
#                          -DZCL_IDENTIFY -DZCL_ON_OFF -DZCL_KEY_ESTABLISH    #
#                          -DZCL_LOAD_CONTROL -DZCL_SIMPLE_METERING           #
#                          -DZCL_PRICING) -DZCL_MESSAGE                       #
#                          "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fin #
#                          al Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1.4. #
#                          0\Sensor Network Example\Components\hal\module\M22 #
#                          0.c" -D LCD_SUPPORTED=DEBUG -D NWK_AUTO_POLL -D    #
#                          ZTOOL_P1 -D MT_APP_FUNC -D MT_SYS_FUNC -D          #
#                          MT_ZDO_FUNC -D MT_TASK -D xPOWER_SAVING -D         #
#                          xNV_RESTORE -D End_Device -D M220 -D xHAL_KEYPAD   #
#                          -D xPA2591 -lC "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥ #
#                          úºÐ(CC2530)_Final Version\ZIGBEE                   #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\RouterDeviceEB_M220\List\" -lA     #
#                          "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fin #
#                          al Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1.4. #
#                          0\Sensor Network Example\Projects\zstack\Sensor    #
#                          Network Application\ZIGBEE Endpoint &              #
#                          Device\CC2530DB\RouterDeviceEB_M220\List\"         #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fin #
#                          al Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1.4. #
#                          0\Sensor Network Example\Projects\zstack\Sensor    #
#                          Network Application\ZIGBEE Endpoint &              #
#                          Device\CC2530DB\RouterDeviceEB_M220\Obj\" -e       #
#                          --require_prototypes --debug --core=plain          #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\ #
#                          ¤½¥q¥X³f¥úºÐ(CC2530)_Final Version\ZIGBEE          #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint & Device\CC2530DB\"    #
#                          -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_ #
#                          Final Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1 #
#                          .4.0\Sensor Network Example\Projects\zstack\Sensor #
#                           Network Application\ZIGBEE Endpoint &             #
#                          Device\CC2530DB\..\SOURCE\" -I                     #
#                          "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fin #
#                          al Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1.4. #
#                          0\Sensor Network Example\Projects\zstack\Sensor    #
#                          Network Application\ZIGBEE Endpoint &              #
#                          Device\CC2530DB\..\..\SOURCE\" -I                  #
#                          "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fin #
#                          al Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1.4. #
#                          0\Sensor Network Example\Projects\zstack\Sensor    #
#                          Network Application\ZIGBEE Endpoint &              #
#                          Device\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I       #
#                          "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fin #
#                          al Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1.4. #
#                          0\Sensor Network Example\Projects\zstack\Sensor    #
#                          Network Application\ZIGBEE Endpoint &              #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MT\" -I  #
#                          "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fin #
#                          al Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1.4. #
#                          0\Sensor Network Example\Projects\zstack\Sensor    #
#                          Network Application\ZIGBEE Endpoint &              #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCL #
#                          UDE\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC #
#                          2530)_Final Version\ZIGBEE                         #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\MODU #
#                          LE\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2 #
#                          530)_Final Version\ZIGBEE                          #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARG #
#                          ET\CC2530EB\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³ #
#                          f¥úºÐ(CC2530)_Final Version\ZIGBEE                 #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MCU #
#                          \CCSOC\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ #
#                          (CC2530)_Final Version\ZIGBEE                      #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\INC #
#                          LUDE\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(C #
#                          C2530)_Final Version\ZIGBEE                        #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF #
#                          \" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC253 #
#                          0)_Final Version\ZIGBEE Example\CC2530_ZStack-2.3. #
#                          0-1.4.0\Sensor Network Example\Projects\zstack\Sen #
#                          sor Network Application\ZIGBEE Endpoint &          #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NW #
#                          K\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC25 #
#                          30)_Final Version\ZIGBEE                           #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SE #
#                          C\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC25 #
#                          30)_Final Version\ZIGBEE                           #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SA #
#                          PI\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2 #
#                          530)_Final Version\ZIGBEE                          #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SY #
#                          S\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC25 #
#                          30)_Final Version\ZIGBEE                           #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZC #
#                          L\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC25 #
#                          30)_Final Version\ZIGBEE                           #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZD #
#                          O\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC25 #
#                          30)_Final Version\ZIGBEE                           #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8W #
#                          \" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC253 #
#                          0)_Final Version\ZIGBEE Example\CC2530_ZStack-2.3. #
#                          0-1.4.0\Sensor Network Example\Projects\zstack\Sen #
#                          sor Network Application\ZIGBEE Endpoint &          #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\"   #
#                          -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_ #
#                          Final Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1 #
#                          .4.0\Sensor Network Example\Projects\zstack\Sensor #
#                           Network Application\ZIGBEE Endpoint &             #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES #
#                          \SADDR\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ #
#                          (CC2530)_Final Version\ZIGBEE                      #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES #
#                          \SDATA\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ #
#                          (CC2530)_Final Version\ZIGBEE                      #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INCL #
#                          UDE\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC #
#                          2530)_Final Version\ZIGBEE                         #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIGH #
#                          _LEVEL\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ #
#                          (CC2530)_Final Version\ZIGBEE                      #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\" -I "D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³ #
#                          f¥úºÐ(CC2530)_Final Version\ZIGBEE                 #
#                          Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\SINGLE_CHIP\" -I "C:\IAR               #
#                          Systems\Embedded Workbench for MCS-51              #
#                          V7.51\8051\INC\" -I "C:\IAR Systems\Embedded       #
#                          Workbench for MCS-51 V7.51\8051\INC\CLIB\" -Ohz    #
#    List file          =  D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fina #
#                          l Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1.4.0 #
#                          \Sensor Network Example\Projects\zstack\Sensor     #
#                          Network Application\ZIGBEE Endpoint &              #
#                          Device\CC2530DB\RouterDeviceEB_M220\List\M220.lst  #
#    Object file        =  D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Fina #
#                          l Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1.4.0 #
#                          \Sensor Network Example\Projects\zstack\Sensor     #
#                          Network Application\ZIGBEE Endpoint &              #
#                          Device\CC2530DB\RouterDeviceEB_M220\Obj\M220.r51   #
#                                                                             #
#                                                                             #
###############################################################################

D:\¤½¥q¤W¯Z¸ê®Æ\±Ð¾Ç¼Ò²Õ\¤½¥q¥X³f¥úºÐ(CC2530)_Final Version\ZIGBEE Example\CC2530_ZStack-2.3.0-1.4.0\Sensor Network Example\Components\hal\module\M220.c
      1          //-------------------------------------------------------------------
      2          // Filename: M220.c
      3          // Description: hal M220 module library	¤T¶b¦ì²¾¥[³t«×(SPI)
      4          //-------------------------------------------------------------------
      5          //-------------------------------------------------------------------
      6          // INCLUDES
      7          //-------------------------------------------------------------------
      8          #include "hal_mcu.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1
      9          #include "hal_board.h"
     10          #include "hal_digio.h"
     11          #include "hal_keypad.h"
     12          #include "M220.h"
     13          
     14          //-------------------------------------------------------------------
     15          // LOCAL VARIABLES
     16          //-------------------------------------------------------------------
     17          uint8 M220_SpiRW(uint8 ch);
     18          uint8 M220_ReadRegister(uint8 addr);
     19          void M220_WriteRegister(uint8 addr, uint8 ch);
     20          void M220_Pooling(void);
     21          void M220_Init(void);
     22          
     23          //Register names
     24          #define XL345_DEVID           0x00 
     25          #define XL345_RESERVED1       0x01 
     26          #define XL345_THRESH_TAP      0x1d 
     27          #define XL345_OFSX            0x1e 
     28          #define XL345_OFSY            0x1f 
     29          #define XL345_OFSZ            0x20 
     30          #define XL345_DUR             0x21 
     31          #define XL345_LATENT          0x22 
     32          #define XL345_WINDOW          0x23 
     33          #define XL345_THRESH_ACT      0x24 
     34          #define XL345_THRESH_INACT    0x25 
     35          #define XL345_TIME_INACT      0x26 
     36          #define XL345_ACT_INACT_CTL   0x27 
     37          #define XL345_THRESH_FF       0x28 
     38          #define XL345_TIME_FF         0x29 
     39          #define XL345_TAP_AXES        0x2a 
     40          #define XL345_ACT_TAP_STATUS  0x2b 
     41          #define XL345_BW_RATE         0x2c 
     42          #define XL345_POWER_CTL       0x2d 
     43          #define XL345_INT_ENABLE      0x2e
     44          #define XL345_INT_MAP         0x2f 
     45          #define XL345_INT_SOURCE      0x30 
     46          #define XL345_DATA_FORMAT     0x31 
     47          #define XL345_DATAX0          0x32 
     48          #define XL345_DATAX1          0x33 
     49          #define XL345_DATAY0          0x34 
     50          #define XL345_DATAY1          0x35 
     51          #define XL345_DATAZ0          0x36 
     52          #define XL345_DATAZ1          0x37 
     53          #define XL345_FIFO_CTL        0x38 
     54          #define XL345_FIFO_STATUS     0x39 
     55          
     56          
     57          // Definitions used for Fall Detection Algorithm 
     58          #define STRIKE_THRESHOLD                     0x20    //62.5mg/LSB, 0x20=2g 
     59          #define STRIKE_WINDOW                        0x0A    //20ms/LSB, 0x0A=10=200ms 
     60          #define STABLE_THRESHOLD                     0x08    //62.5mg/LSB, 0x10=0.5g 
     61          #define STABLE_TIME                          0x02    //1s/LSB, 0x02=2s 
     62          #define STABLE_WINDOW                        0xAF    //20ms/LSB, 0xAF=175=3.5s 
     63          #define NOMOVEMENT_THRESHOLD                 0x03    //62.5mg/LSB, 0x03=0.1875g 
     64          #define NOMOVEMENT_TIME                      0x0A    //1s/LSB, 0x0A=10s 
     65          #define FREE_FALL_THRESHOLD                  0x0C    //62.5mg/LSB, 0x0C=0.75g 
     66          #define FREE_FALL_TIME                       0x06    //5ms/LSB, 0x06=30ms 
     67          #define FREE_FALL_OVERTIME                   0x0F    //20ms/LSB, 0x0F=15=300ms 
     68          #define FREE_FALL_INTERVAL                   0x05    //20ms/LSB, 0x05=100ms 
     69          #define DELTA_VECTOR_SUM_THRESHOLD           0x7D70  //1g=0xFF, 0x7D70=0.7g^2 
     70          
     71          
     72          #define XL345_ID              0xe5 
     73          
     74          // Reserved soft reset value                                             
     75          #define XL345_SOFT_RESET      0x52 
     76          
     77          // Registers THRESH_TAP through TIME_INACT take only 8-bit values 
     78          // There are no specific bit fields in these registers                   
     79          
     80          // Bit values in ACT_INACT_CTL                                           
     81          #define XL345_INACT_Z_ENABLE  0x01 
     82          #define XL345_INACT_Z_DISABLE 0x00 
     83          #define XL345_INACT_Y_ENABLE  0x02 
     84          #define XL345_INACT_Y_DISABLE 0x00 
     85          #define XL345_INACT_X_ENABLE  0x04 
     86          #define XL345_INACT_X_DISABLE 0x00 
     87          #define XL345_INACT_AC        0x08 
     88          #define XL345_INACT_DC        0x00 
     89          #define XL345_ACT_Z_ENABLE    0x10 
     90          #define XL345_ACT_Z_DISABLE   0x00 
     91          #define XL345_ACT_Y_ENABLE    0x20 
     92          #define XL345_ACT_Y_DISABLE   0x00 
     93          #define XL345_ACT_X_ENABLE    0x40 
     94          #define XL345_ACT_X_DISABLE   0x00 
     95          #define XL345_ACT_AC          0x80 
     96          #define XL345_ACT_DC          0x00
     97          
     98          
     99          #define XL345_TAP_Z_ENABLE    0x01 
    100          #define XL345_TAP_Z_DISABLE   0x00 
    101          #define XL345_TAP_Y_ENABLE    0x02 
    102          #define XL345_TAP_Y_DISABLE   0x00 
    103          #define XL345_TAP_X_ENABLE    0x04 
    104          #define XL345_TAP_X_DISABLE   0x00 
    105          #define XL345_TAP_SUPPRESS    0x08 
    106          
    107          // Bit values in ACT_TAP_STATUS                                        
    108          #define XL345_TAP_Z_SOURCE    0x01 
    109          #define XL345_TAP_Y_SOURCE    0x02 
    110          #define XL345_TAP_X_SOURCE    0x04 
    111          #define XL345_STAT_ASLEEP     0x08 
    112          #define XL345_ACT_Z_SOURCE    0x10 
    113          #define XL345_ACT_Y_SOURCE    0x20 
    114          #define XL345_ACT_X_SOURCE    0x40 
    115          
    116          // Bit values in BW_RATE        
    117          // Expresed as output data rate 
    118          #define XL345_RATE_3200       0x0f 
    119          #define XL345_RATE_1600       0x0e 
    120          #define XL345_RATE_800        0x0d 
    121          #define XL345_RATE_400        0x0c 
    122          #define XL345_RATE_200        0x0b 
    123          #define XL345_RATE_100        0x0a 
    124          #define XL345_RATE_50         0x09 
    125          #define XL345_RATE_25         0x08 
    126          #define XL345_RATE_12_5       0x07 
    127          #define XL345_RATE_6_25       0x06 
    128          #define XL345_RATE_3_125      0x05 
    129          #define XL345_RATE_1_563      0x04 
    130          #define XL345_RATE__782       0x03 
    131          #define XL345_RATE__39        0x02 
    132          #define XL345_RATE__195       0x01 
    133          #define XL345_RATE__098       0x00 
    134          
    135          // Expressed as output bandwidth 
    136          // Use either the bandwidth or rate code, 
    137          // whichever is more appropriate for your application
    138          #define XL345_BW_1600         0x0f 
    139          #define XL345_BW_800          0x0e 
    140          #define XL345_BW_400          0x0d 
    141          #define XL345_BW_200          0x0c 
    142          #define XL345_BW_100          0x0b 
    143          #define XL345_BW_50           0x0a 
    144          #define XL345_BW_25           0x09 
    145          #define XL345_BW_12_5         0x08 
    146          #define XL345_BW_6_25         0x07 
    147          #define XL345_BW_3_125        0x06 
    148          #define XL345_BW_1_563        0x05 
    149          #define XL345_BW__782         0x04
    150          
    151          #define XL345_BW__39          0x03 
    152          #define XL345_BW__195         0x02 
    153          #define XL345_BW__098         0x01 
    154          #define XL345_BW__048         0x00 
    155          
    156          #define XL345_LOW_POWER       0x08 
    157          #define XL345_LOW_NOISE       0x00 
    158          // Bit values in POWER_CTL                                            
    159          #define XL345_WAKEUP_8HZ           0x00 
    160          #define XL345_WAKEUP_4HZ           0x01 
    161          #define XL345_WAKEUP_2HZ           0x02 
    162          #define XL345_WAKEUP_1HZ           0x03 
    163          #define XL345_SLEEP                0x04 
    164          #define XL345_MEASURE              0x08 
    165          #define XL345_STANDBY              0x00 
    166          #define XL345_AUTO_SLEEP           0x10 
    167          #define XL345_ACT_INACT_SERIAL     0x20 
    168          #define XL345_ACT_INACT_CONCURRENT 0x00 
    169          
    170          // Bit values in INT_ENABLE, INT_MAP, and INT_SOURCE are identical. 
    171          // Use these bit values to read or write any of these registers.        
    172          #define XL345_OVERRUN              0x01 
    173          #define XL345_WATERMARK            0x02 
    174          #define XL345_FREEFALL             0x04 
    175          #define XL345_INACTIVITY           0x08 
    176          #define XL345_ACTIVITY             0x10 
    177          #define XL345_DOUBLETAP            0x20 
    178          #define XL345_SINGLETAP            0x40 
    179          #define XL345_DATAREADY            0x80 
    180          
    181          // Bit values in DATA_FORMAT                                            
    182          
    183          // Register values read in DATAX0 through DATAZ1 are dependent on the  
    184          // value specified in data format.  Customer code will need to interpret 
    185          // the data as desired.                                                 
    186          #define XL345_RANGE_2G             0x00 
    187          #define XL345_RANGE_4G             0x01 
    188          #define XL345_RANGE_8G             0x02 
    189          #define XL345_RANGE_16G            0x03 
    190          #define XL345_DATA_JUST_RIGHT      0x00 
    191          #define XL345_DATA_JUST_LEFT       0x04 
    192          #define XL345_10BIT                0x00 
    193          #define XL345_FULL_RESOLUTION      0x08 
    194          #define XL345_INT_LOW              0x20 
    195          #define XL345_INT_HIGH             0x00 
    196          #define XL345_SPI3WIRE             0x40 
    197          #define XL345_SPI4WIRE             0x00 
    198          #define XL345_SELFTEST             0x80
    199          
    200          #define XL345_TRIGGER_INT1         0x00 
    201          #define XL345_TRIGGER_INT2         0x20 
    202          #define XL345_FIFO_MODE_BYPASS     0x00 
    203          #define XL345_FIFO_RESET           0x00 
    204          #define XL345_FIFO_MODE_FIFO       0x40 
    205          #define XL345_FIFO_MODE_STREAM     0x80 
    206          #define XL345_FIFO_MODE_TRIGGER    0xc0 
    207          
    208          // Bit values in FIFO_STATUS                                      
    209          // The low bits are a value 0 to 32 showing the number of entries 
    210          // currently available in the FIFO buffer                               
    211          
    212          #define XL345_FIFO_TRIGGERED       0x80
    213          
    214          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    215          uint16 M220_X_AXIS_Value;
   \                     M220_X_AXIS_Value:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    216          uint16 M220_Y_AXIS_Value;
   \                     M220_Y_AXIS_Value:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    217          uint16 M220_Z_AXIS_Value;
   \                     M220_Z_AXIS_Value:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    218          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    219          uint8 M220_SpiRW(uint8 ch)
   \                     M220_SpiRW:
    220          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
   \   000000   E9           MOV     A,R1
    221              uint8 i, cmd, ret;
    222          
    223              cmd = ch;
   \   000001   FB           MOV     R3,A
    224              for (i = 0; i < 8; i++)
   \   000002   7A08         MOV     R2,#0x8
    225              {
    226                  HAL_SPI_CLK_CLR();
   \                     ??M220_SpiRW_0:
   \   000004   C285         CLR     0x80.5
    227                  if (cmd &0x80)
   \   000006   EB           MOV     A,R3
   \   000007   A2E7         MOV     C,0xE0 /* A   */.7
   \   000009   5004         JNC     ??M220_SpiRW_1
    228                  {
    229                      HAL_SPI_MOSI_SET();
   \   00000B   D284         SETB    0x80.4
   \   00000D   8002         SJMP    ??M220_SpiRW_2
    230                  }
    231                  else
    232                  {
    233                      HAL_SPI_MOSI_CLR();
   \                     ??M220_SpiRW_1:
   \   00000F   C284         CLR     0x80.4
    234                  }
    235                  cmd <<= 1;
   \                     ??M220_SpiRW_2:
   \   000011   C3           CLR     C
   \   000012   33           RLC     A
   \   000013   FB           MOV     R3,A
    236                  ret <<= 1;
   \   000014   E9           MOV     A,R1
   \   000015   C3           CLR     C
   \   000016   33           RLC     A
   \   000017   F9           MOV     R1,A
    237                  HAL_SPI_CLK_SET();
   \   000018   D285         SETB    0x80.5
    238                  if (HAL_SPI_MISO_VAL())
   \   00001A   A286         MOV     C,0x80.6
   \   00001C   5003         JNC     ??M220_SpiRW_3
    239                  {
    240                      ret |= 0x01;
   \   00001E   D2E0         SETB    0xE0 /* A   */.0
   \   000020   F9           MOV     R1,A
    241                  }
    242              }
   \                     ??M220_SpiRW_3:
   \   000021   1A           DEC     R2
   \   000022   EA           MOV     A,R2
   \   000023   70DF         JNZ     ??M220_SpiRW_0
    243              HAL_SPI_MOSI_SET();
   \   000025   D284         SETB    0x80.4
    244              return ret;
   \   000027   02....       LJMP    ?BRET
   \   00002A                REQUIRE _A_P0
    245          }
    246          
    247          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    248          uint8 M220_ReadRegister(uint8 addr)
   \                     M220_ReadRegister:
    249          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    250              uint8 ch;
    251              HAL_SPI_CS_EN();
   \   000007   C287         CLR     0x80.7
    252              M220_SpiRW(0x80 + addr);
   \   000009                ; Setup parameters for call to function M220_SpiRW
   \   000009   7480         MOV     A,#-0x80
   \   00000B   2E           ADD     A,R6
   \   00000C   F9           MOV     R1,A
   \   00000D                REQUIRE ?Subroutine2
   \   00000D                REQUIRE _A_P0
   \   00000D                ; // Fall through to label ?Subroutine2
    253              ch = M220_SpiRW(addr);
    254              HAL_SPI_CS_DIS();
    255              return ch;
    256          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_3:
   \   000003   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   12....       LCALL   ??M220_SpiRW?relay
   \   000003                ; Setup parameters for call to function M220_SpiRW
   \   000003                ; Setup parameters for call to function M220_SpiRW
   \   000003   EE           MOV     A,R6
   \   000004   F9           MOV     R1,A
   \   000005   12....       LCALL   ??M220_SpiRW?relay
   \   000008   D287         SETB    0x80.7
   \   00000A   7F01         MOV     R7,#0x1
   \   00000C   22           RET
    257          
    258          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    259          void M220_WriteRegister(uint8 addr, uint8 ch)
   \                     M220_WriteRegister:
    260          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
    261              HAL_SPI_CS_EN();
   \   000007   C287         CLR     0x80.7
    262              M220_SpiRW(addr);
   \   000009                ; Setup parameters for call to function M220_SpiRW
   \   000009   80..         SJMP    ?Subroutine2
   \   00000B                REQUIRE _A_P0
    263              M220_SpiRW(ch);
    264              HAL_SPI_CS_DIS();
    265          }
    266          
    267          //-------------------------------------------------------------------
    268          // @fn      M220_Init
    269          // @brief   Set up ADXL345
    270          // @return  none
    271          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    272          void M220_Init(void)
   \                     M220_Init:
    273          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    274              HAL_SPI_MISO_INPUT();
   \   000004   53F3BF       ANL     0xf3,#0xbf
   \   000007   53FDBF       ANL     0xfd,#0xbf
    275              HAL_SPI_MOSI_OUTPUT();
   \   00000A   53F3EF       ANL     0xf3,#0xef
   \   00000D   43FD10       ORL     0xfd,#0x10
    276              HAL_SPI_CLK_OUTPUT();
   \   000010   53F3DF       ANL     0xf3,#0xdf
   \   000013   43FD20       ORL     0xfd,#0x20
    277              HAL_SPI_CS_OUTPUT();
   \   000016   53F37F       ANL     0xf3,#0x7f
   \   000019   43FD80       ORL     0xfd,#0x80
    278              
    279              HAL_SPI_CS_DIS();
   \   00001C   D287         SETB    0x80.7
    280              HAL_SPI_MOSI_SET();
   \   00001E   D284         SETB    0x80.4
    281              HAL_SPI_CLK_SET();
   \   000020   D285         SETB    0x80.5
    282          
    283              //M220_WriteRegister(XL345_OFSX,0xFF);
    284              //M220_WriteRegister(XL345_OFSY,0x05);
    285              //M220_WriteRegister(XL345_OFSZ,0xFF);
    286          
    287              //M220_WriteRegister(XL345_THRESH_ACT,STRIKE_THRESHOLD);
    288              //M220_WriteRegister(XL345_THRESH_INACT,NOMOVEMENT_THRESHOLD);
    289              //M220_WriteRegister(XL345_TIME_INACT,STABLE_TIME);
    290              //M220_WriteRegister(XL345_ACT_INACT_CTL,XL345_INACT_Z_ENABLE|XL345_INACT_Y_ENABLE | XL345_INACT_X_ENABLE| XL345_INACT_AC | XL345_ACT_Z_ENABLE|XL345_ACT_Y_ENABLE | XL345_ACT_X_ENABLE | XL345_ACT_DC);
    291              //M220_WriteRegister(XL345_THRESH_FF,FREE_FALL_THRESHOLD);
    292          
    293              //M220_WriteRegister(XL345_TIME_FF,FREE_FALL_TIME);
    294              //M220_WriteRegister(XL345_BW_RATE,XL345_RATE_100);
    295              //M220_WriteRegister(XL345_POWER_CTL,XL345_STANDBY);
    296              //M220_WriteRegister(XL345_INT_ENABLE,XL345_ACTIVITY | XL345_INACTIVITY | XL345_FREEFALL);
    297              //M220_WriteRegister(XL345_INT_MAP,0x00);
    298          
    299              M220_WriteRegister(XL345_DATA_FORMAT, XL345_FULL_RESOLUTION | XL345_DATA_JUST_RIGHT | XL345_RANGE_16G);
   \   000022                ; Setup parameters for call to function M220_WriteRegister
   \   000022   7A0B         MOV     R2,#0xb
   \   000024   7931         MOV     R1,#0x31
   \   000026   12....       LCALL   ??M220_WriteRegister?relay
    300              M220_WriteRegister(XL345_POWER_CTL, XL345_MEASURE);
   \   000029                ; Setup parameters for call to function M220_WriteRegister
   \   000029   7A08         MOV     R2,#0x8
   \   00002B   792D         MOV     R1,#0x2d
   \   00002D   12....       LCALL   ??M220_WriteRegister?relay
    301          }
   \   000030   D083         POP     DPH
   \   000032   D082         POP     DPL
   \   000034   02....       LJMP    ?BRET
   \   000037                REQUIRE _A_P0
   \   000037                REQUIRE P0SEL
   \   000037                REQUIRE P0DIR
    302          
    303          //-------------------------------------------------------------------
    304          // @fn      M260_Pooling
    305          // @brief   Get Digital/Analog
    306          // @param   none
    307          // @return  none
    308          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    309          void M220_Pooling(void)
   \                     M220_Pooling:
    310          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    311              M220_X_AXIS_Value = M220_ReadRegister(XL345_DATAX1);
   \   000005                ; Setup parameters for call to function M220_ReadRegister
   \   000005   7933         MOV     R1,#0x33
   \   000007   12....       LCALL   ??M220_ReadRegister?relay
   \   00000A   E9           MOV     A,R1
   \   00000B   90....       MOV     DPTR,#M220_X_AXIS_Value
   \   00000E   F0           MOVX    @DPTR,A
   \   00000F   A3           INC     DPTR
   \   000010   E4           CLR     A
   \   000011   F0           MOVX    @DPTR,A
    312              M220_X_AXIS_Value = (M220_X_AXIS_Value << 8) + M220_ReadRegister(XL345_DATAX0);
   \   000012   90....       MOV     DPTR,#M220_X_AXIS_Value
   \   000015   E0           MOVX    A,@DPTR
   \   000016   FF           MOV     R7,A
   \   000017                ; Setup parameters for call to function M220_ReadRegister
   \   000017   7932         MOV     R1,#0x32
   \   000019   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   00001C   90....       MOV     DPTR,#M220_X_AXIS_Value
   \   00001F   E8           MOV     A,R0
   \   000020   F0           MOVX    @DPTR,A
   \   000021   A3           INC     DPTR
   \   000022   E9           MOV     A,R1
   \   000023   F0           MOVX    @DPTR,A
    313              M220_Y_AXIS_Value = M220_ReadRegister(XL345_DATAY1);
   \   000024                ; Setup parameters for call to function M220_ReadRegister
   \   000024   7935         MOV     R1,#0x35
   \   000026   12....       LCALL   ??M220_ReadRegister?relay
   \   000029   E9           MOV     A,R1
   \   00002A   90....       MOV     DPTR,#M220_Y_AXIS_Value
   \   00002D   F0           MOVX    @DPTR,A
   \   00002E   A3           INC     DPTR
   \   00002F   E4           CLR     A
   \   000030   F0           MOVX    @DPTR,A
    314              M220_Y_AXIS_Value = (M220_Y_AXIS_Value << 8) + M220_ReadRegister(XL345_DATAY0);
   \   000031   90....       MOV     DPTR,#M220_Y_AXIS_Value
   \   000034   E0           MOVX    A,@DPTR
   \   000035   FF           MOV     R7,A
   \   000036                ; Setup parameters for call to function M220_ReadRegister
   \   000036   7934         MOV     R1,#0x34
   \   000038   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   00003B   90....       MOV     DPTR,#M220_Y_AXIS_Value
   \   00003E   E8           MOV     A,R0
   \   00003F   F0           MOVX    @DPTR,A
   \   000040   A3           INC     DPTR
   \   000041   E9           MOV     A,R1
   \   000042   F0           MOVX    @DPTR,A
    315              M220_Z_AXIS_Value = M220_ReadRegister(XL345_DATAZ1);
   \   000043                ; Setup parameters for call to function M220_ReadRegister
   \   000043   7937         MOV     R1,#0x37
   \   000045   12....       LCALL   ??M220_ReadRegister?relay
   \   000048   E9           MOV     A,R1
   \   000049   90....       MOV     DPTR,#M220_Z_AXIS_Value
   \   00004C   F0           MOVX    @DPTR,A
   \   00004D   A3           INC     DPTR
   \   00004E   E4           CLR     A
   \   00004F   F0           MOVX    @DPTR,A
    316              M220_Z_AXIS_Value = (M220_Z_AXIS_Value << 8) + M220_ReadRegister(XL345_DATAZ0);
   \   000050   90....       MOV     DPTR,#M220_Z_AXIS_Value
   \   000053   E0           MOVX    A,@DPTR
   \   000054   FF           MOV     R7,A
   \   000055                ; Setup parameters for call to function M220_ReadRegister
   \   000055   7936         MOV     R1,#0x36
   \   000057   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_2:
   \   00005A   90....       MOV     DPTR,#M220_Z_AXIS_Value
   \   00005D   E8           MOV     A,R0
   \   00005E   F0           MOVX    @DPTR,A
   \   00005F   A3           INC     DPTR
   \   000060   E9           MOV     A,R1
   \   000061   F0           MOVX    @DPTR,A
    317          }
   \   000062   7F01         MOV     R7,#0x1
   \   000064   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   12....       LCALL   ??M220_ReadRegister?relay
   \   000003   E9           MOV     A,R1
   \   000004   2400         ADD     A,#0x0
   \   000006   F8           MOV     R0,A
   \   000007   E4           CLR     A
   \   000008   3F           ADDC    A,R7
   \   000009   F9           MOV     R1,A
   \   00000A   22           RET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??M220_SpiRW?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    M220_SpiRW

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??M220_ReadRegister?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    M220_ReadRegister

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??M220_WriteRegister?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    M220_WriteRegister

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??M220_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    M220_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??M220_Pooling?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    M220_Pooling

   Maximum stack usage in bytes:

     Function                ISTACK PSTACK XSTACK
     --------                ------ ------ ------
     M220_Init                   2      0      0
       -> M220_WriteRegister     4      0      0
       -> M220_WriteRegister     4      0      0
     M220_Pooling                0      0      9
       -> M220_ReadRegister      0      0     18
       -> M220_ReadRegister      0      0     18
       -> M220_ReadRegister      0      0     18
       -> M220_ReadRegister      0      0     18
       -> M220_ReadRegister      0      0     18
       -> M220_ReadRegister      0      0     18
     M220_ReadRegister           0      0     18
       -> M220_SpiRW             0      0     18
       -> M220_SpiRW             0      0     18
     M220_SpiRW                  0      0      9
     M220_WriteRegister          0      0      9
       -> M220_SpiRW             0      0     18
       -> M220_SpiRW             0      0     18


   Segment part sizes:

     Function/Label             Bytes
     --------------             -----
     _A_P0                         1
     P0SEL                         1
     P0DIR                         1
     M220_X_AXIS_Value             2
     M220_Y_AXIS_Value             2
     M220_Z_AXIS_Value             2
     M220_SpiRW                   42
     M220_ReadRegister            13
     ?Subroutine2                  6
     ?Subroutine1                 13
     M220_WriteRegister           11
     M220_Init                    55
     M220_Pooling                103
     ?Subroutine0                 11
     ??M220_SpiRW?relay            6
     ??M220_ReadRegister?relay     6
     ??M220_WriteRegister?relay    6
     ??M220_Init?relay             6
     ??M220_Pooling?relay          6

 
 254 bytes in segment BANKED_CODE
  30 bytes in segment BANK_RELAYS
   3 bytes in segment SFR_AN
   6 bytes in segment XDATA_Z
 
 284 bytes of CODE  memory
   0 bytes of DATA  memory (+ 3 bytes shared)
   6 bytes of XDATA memory

Errors: none
Warnings: none
