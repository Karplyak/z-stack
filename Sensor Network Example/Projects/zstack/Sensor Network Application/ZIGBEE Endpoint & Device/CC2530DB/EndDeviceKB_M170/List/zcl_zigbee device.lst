###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                22/Jul/2010  17:47:32 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE            #
#                          Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Sensor Network Application\ZIGBEE Endpoint &       #
#                          Device\Source\zcl_zigbee device.c                  #
#    Command line       =  -f "D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE        #
#                          Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Sensor Network Application\ZIGBEE Endpoint &       #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.c #
#                          fg" (-DCPU32MHZ -DROOT=__near_func -DBLINK_LEDS)   #
#                          -f "D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE        #
#                          Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Sensor Network Application\ZIGBEE Endpoint &       #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig. #
#                          cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0             #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=TRUE      #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440)   #
#                          -f "D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE        #
#                          Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Sensor Network Application\ZIGBEE Endpoint &       #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg #
#                          " (-DZCL_READ -DZCL_WRITE -DZCL_BASIC              #
#                          -DZCL_IDENTIFY -DZCL_ON_OFF -DZCL_KEY_ESTABLISH    #
#                          -DZCL_LOAD_CONTROL -DZCL_SIMPLE_METERING           #
#                          -DZCL_PRICING) -DZCL_MESSAGE                       #
#                          "D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE           #
#                          Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Sensor Network Application\ZIGBEE Endpoint &       #
#                          Device\Source\zcl_zigbee device.c" -D              #
#                          NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D            #
#                          MT_APP_FUNC -D MT_SYS_FUNC -D MT_ZDO_FUNC -D       #
#                          LCD_SUPPORTED=DEBUG -D xPOWER_SAVING -D M170 -lC   #
#                          "D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE           #
#                          Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Sensor Network Application\ZIGBEE Endpoint &       #
#                          Device\CC2530DB\EndDeviceKB_M170\List\" -lA        #
#                          "D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE           #
#                          Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Sensor Network Application\ZIGBEE Endpoint &       #
#                          Device\CC2530DB\EndDeviceKB_M170\List\"            #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE           #
#                          Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Sensor Network Application\ZIGBEE Endpoint &       #
#                          Device\CC2530DB\EndDeviceKB_M170\Obj\" -e          #
#                          --require_prototypes --debug --core=plain          #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "D:\公司產品\XT-200\ZIGBEE #
#                           CC2530\ZIGBEE Z-STACK\ZStack-CC2530-2.3.0-1.4.0\P #
#                          rojects\zstack\Sensor Network Application\ZIGBEE   #
#                          Endpoint & Device\CC2530DB\" -I                    #
#                          "D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE           #
#                          Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Sensor Network Application\ZIGBEE Endpoint &       #
#                          Device\CC2530DB\..\SOURCE\" -I                     #
#                          "D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE           #
#                          Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Sensor Network Application\ZIGBEE Endpoint &       #
#                          Device\CC2530DB\..\..\SOURCE\" -I                  #
#                          "D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE           #
#                          Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Sensor Network Application\ZIGBEE Endpoint &       #
#                          Device\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I       #
#                          "D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE           #
#                          Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Sensor Network Application\ZIGBEE Endpoint &       #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MT\" -I  #
#                          "D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE           #
#                          Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Sensor Network Application\ZIGBEE Endpoint &       #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCL #
#                          UDE\" -I "D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE  #
#                          Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Sensor Network Application\ZIGBEE Endpoint &       #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\MODU #
#                          LE\" -I "D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE   #
#                          Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Sensor Network Application\ZIGBEE Endpoint &       #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARG #
#                          ET\CC2530EB\" -I "D:\公司產品\XT-200\ZIGBEE        #
#                          CC2530\ZIGBEE Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Sensor Network Application\ZIGBEE    #
#                          Endpoint & Device\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\OSAL\MCU\CCSOC\" -I "D:\公司產品\XT-200\ZIGBEE  #
#                          CC2530\ZIGBEE Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Sensor Network Application\ZIGBEE    #
#                          Endpoint & Device\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\OSAL\INCLUDE\" -I "D:\公司產品\XT-200\ZIGBEE    #
#                          CC2530\ZIGBEE Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Sensor Network Application\ZIGBEE    #
#                          Endpoint & Device\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\STACK\AF\" -I "D:\公司產品\XT-200\ZIGBEE        #
#                          CC2530\ZIGBEE Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Sensor Network Application\ZIGBEE    #
#                          Endpoint & Device\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\STACK\NWK\" -I "D:\公司產品\XT-200\ZIGBEE       #
#                          CC2530\ZIGBEE Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Sensor Network Application\ZIGBEE    #
#                          Endpoint & Device\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\STACK\SEC\" -I "D:\公司產品\XT-200\ZIGBEE       #
#                          CC2530\ZIGBEE Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Sensor Network Application\ZIGBEE    #
#                          Endpoint & Device\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\STACK\SAPI\" -I "D:\公司產品\XT-200\ZIGBEE      #
#                          CC2530\ZIGBEE Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Sensor Network Application\ZIGBEE    #
#                          Endpoint & Device\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\STACK\SYS\" -I "D:\公司產品\XT-200\ZIGBEE       #
#                          CC2530\ZIGBEE Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Sensor Network Application\ZIGBEE    #
#                          Endpoint & Device\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\STACK\ZCL\" -I "D:\公司產品\XT-200\ZIGBEE       #
#                          CC2530\ZIGBEE Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Sensor Network Application\ZIGBEE    #
#                          Endpoint & Device\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\STACK\ZDO\" -I "D:\公司產品\XT-200\ZIGBEE       #
#                          CC2530\ZIGBEE Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Sensor Network Application\ZIGBEE    #
#                          Endpoint & Device\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\ZMAC\F8W\" -I "D:\公司產品\XT-200\ZIGBEE        #
#                          CC2530\ZIGBEE Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Sensor Network Application\ZIGBEE    #
#                          Endpoint & Device\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\ZMAC\" -I "D:\公司產品\XT-200\ZIGBEE            #
#                          CC2530\ZIGBEE Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Sensor Network Application\ZIGBEE    #
#                          Endpoint & Device\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\SERVICES\SADDR\" -I "D:\公司產品\XT-200\ZIGBEE  #
#                          CC2530\ZIGBEE Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Sensor Network Application\ZIGBEE    #
#                          Endpoint & Device\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\SERVICES\SDATA\" -I "D:\公司產品\XT-200\ZIGBEE  #
#                          CC2530\ZIGBEE Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Sensor Network Application\ZIGBEE    #
#                          Endpoint & Device\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\MAC\INCLUDE\" -I "D:\公司產品\XT-200\ZIGBEE     #
#                          CC2530\ZIGBEE Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Sensor Network Application\ZIGBEE    #
#                          Endpoint & Device\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\MAC\HIGH_LEVEL\" -I "D:\公司產品\XT-200\ZIGBEE  #
#                          CC2530\ZIGBEE Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Sensor Network Application\ZIGBEE    #
#                          Endpoint & Device\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\MAC\LOW_LEVEL\srf04\" -I                        #
#                          "D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE           #
#                          Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Sensor Network Application\ZIGBEE Endpoint &       #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\SINGLE_CHIP\" -I "C:\IAR               #
#                          Systems\Embedded Workbench 5.3\8051\INC\" -I       #
#                          "C:\IAR Systems\Embedded Workbench                 #
#                          5.3\8051\INC\CLIB\" -Ohz                           #
#    List file          =  D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE            #
#                          Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Sensor Network Application\ZIGBEE Endpoint &       #
#                          Device\CC2530DB\EndDeviceKB_M170\List\zcl_zigbee   #
#                          device.lst                                         #
#    Object file        =  D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE            #
#                          Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Sensor Network Application\ZIGBEE Endpoint &       #
#                          Device\CC2530DB\EndDeviceKB_M170\Obj\zcl_zigbee    #
#                          device.r51                                         #
#                                                                             #
#                                                                             #
###############################################################################

D:\公司產品\XT-200\ZIGBEE CC2530\ZIGBEE Z-STACK\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Sensor Network Application\ZIGBEE Endpoint & Device\Source\zcl_zigbee device.c
      1          /**************************************************************************************************
      2            Filename:       zcl_zigbee device.c
      3            Revised:        $Date: 2009-03-18 15:56:27 -0700 (Wed, 18 Mar 2009) $
      4            Revision:       $Revision: 19453 $
      5          
      6            Description:    Zigbee Cluster Library - sample device application.
      7          
      8            Copyright 2006-2009 Texas Instruments Incorporated. All rights reserved.
      9          
     10            Should you have any questions regarding your right to use this Software,
     11            contact Texas Instruments Incorporated at www.TI.com.
     12          **************************************************************************************************/
     13          
     14          /**************************************************************************************************
     15            This device will be like an On/Off Switch device. This application is not intended to be a On/Off 
     16            Switch device, but will use the device description to implement this sample code.
     17          **************************************************************************************************/
     18          
     19          /*********************************************************************
     20           * INCLUDES
     21           */
     22          #include "ZComDef.h"
     23          #include "OSAL.h"
     24          #include "AF.h"
     25          #include "ZDApp.h"
     26          #include "ZDObject.h"
     27          #include "ZDProfile.h"
     28          
     29          /* ZCL */
     30          #include "zcl.h"
     31          #include "zcl_general.h"
     32          #include "zcl_ha.h"
     33          #include "zcl_zigbee device.h"
     34          
     35          /* HAL */
     36          #include "onboard.h"
     37          #include "hal_lcd.h"
     38          #include "hal_led.h"
     39          #include "hal_key.h"
     40          #include "hal_keypad.h"
     41          #include "hal_buzzer.h"
     42          
     43          /*********************************************************************
     44           * MACROS
     45           */
     46          /*********************************************************************
     47           * CONSTANTS
     48           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     49          afAddrType_t zclZigbeeDevice_DstAddr;
   \                     zclZigbeeDevice_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
     50          
     51          /*********************************************************************
     52           * TYPEDEFS
     53           */
     54          /*********************************************************************
     55           * GLOBAL VARIABLES
     56           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     57          byte zclZigbeeDevice_TaskID; // Task ID variable
   \                     zclZigbeeDevice_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     58          endPointDesc_t TransmitApp_epDesc;
   \                     TransmitApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
     59          
     60          /*********************************************************************
     61           * GLOBAL FUNCTIONS
     62           */
     63          
     64          /*********************************************************************
     65           * LOCAL VARIABLES
     66           */
     67          
     68          #define ZCLZIGBEEDEV_BINDINGLIST       1

   \                                 In  segment XDATA_I, align 1, keep-with-next
     69          static cId_t bindingOutClusters[ZCLZIGBEEDEV_BINDINGLIST] =
   \                     bindingOutClusters:
   \   000000                DS 2
   \   000002                REQUIRE `?<Initializer for bindingOutClusters>`
   \   000002                REQUIRE __INIT_XDATA_I
     70          {
     71            ZCL_CLUSTER_ID_GEN_ON_OFF
     72          };
     73          
     74          // Test Endpoint to allow SYS_APP_MSGs

   \                                 In  segment XDATA_I, align 1, keep-with-next
     75          static endPointDesc_t zigbeeDevice_TestEp =
   \                     zigbeeDevice_TestEp:
   \   000000                DS 6
   \   000006                REQUIRE `?<Initializer for zigbeeDevice_TestEp>`
   \   000006                REQUIRE __INIT_XDATA_I
     76          {
     77            20,                                 // Test endpoint
     78            &zclZigbeeDevice_TaskID,
     79            (SimpleDescriptionFormat_t *)NULL,  // No Simple description for this test endpoint
     80            (afNetworkLatencyReq_t)0            // No Network Latency req
     81          };
     82          
     83          
     84          /*********************************************************************
     85           * LOCAL FUNCTIONS
     86           */
     87          static void zclZigbeeDevice_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg );
     88          static void zclZigbeeDevice_HandleKeys( byte shift, byte keys );
     89          static void zclZigbeeDevice_BasicResetCB( void );
     90          static void zclZigbeeDevice_IdentifyCB( zclIdentify_t *pCmd );
     91          static void zclZigbeeDevice_IdentifyQueryRspCB( zclIdentifyQueryRsp_t *pRsp );
     92          static void zclZigbeeDevice_ProcessIdentifyTimeChange( void );
     93          
     94          // Functions to process ZCL Foundation incoming Command/Response messages
     95          static void zclZigbeeDevice_ProcessIncomingMsg( zclIncomingMsg_t *msg );
     96          #ifdef ZCL_READ
     97            static uint8 zclZigbeeDevice_ProcessInReadRspCmd( zclIncomingMsg_t *pInMsg );
     98          #endif
     99          #ifdef ZCL_WRITE
    100            static uint8 zclZigbeeDevice_ProcessInWriteRspCmd( zclIncomingMsg_t *pInMsg );
    101          #endif
    102            static uint8 zclZigbeeDevice_ProcessInDefaultRspCmd( zclIncomingMsg_t *pInMsg );
    103          #ifdef ZCL_DISCOVER
    104            static uint8 zclZigbeeDevice_ProcessInDiscRspCmd( zclIncomingMsg_t *pInMsg );
    105          #endif
    106          
    107          void zclZIGBEEDevice_SendMsg(void);
    108            
    109          /*********************************************************************
    110           * ZCL General Profile Callback table
    111           */

   \                                 In  segment XDATA_I, align 1, keep-with-next
    112          static zclGeneral_AppCallbacks_t zclZigbeeDevice_CmdCallbacks =
   \                     zclZigbeeDevice_CmdCallbacks:
   \   000000                DS 30
   \   00001E                REQUIRE `?<Initializer for zclZigbeeDevice_CmdCallbacks`
   \   00001E                REQUIRE __INIT_XDATA_I
    113          {
    114            zclZigbeeDevice_BasicResetCB,       // Basic Cluster Reset command
    115            zclZigbeeDevice_IdentifyCB,         // Identify command
    116            zclZigbeeDevice_IdentifyQueryRspCB, // Identify Query Response command
    117            NULL,                               // On / Off cluster command - not needed.
    118            NULL,                               // Level Control Move to Level command
    119            NULL,                               // Level Control Move command
    120            NULL,                               // Level Control Step command
    121            NULL,                               // Group Response commands
    122            NULL,                               // Scene Store Request command
    123            NULL,                               // Scene Recall Request command
    124            NULL,                               // Scene Response commands
    125            NULL,                               // Alarm (Response) commands
    126            NULL,                               // RSSI Location commands
    127            NULL,                               // RSSI Location Response commands
    128          };
    129          
    130          
    131          /*********************************************************************
    132           * @fn          zcl_ZigbeeDevice_Init
    133           * @brief       Initialization function for the zclGeneral layer.
    134           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    135          void zcl_ZigbeeDevice_Init( byte task_id )
   \                     zcl_ZigbeeDevice_Init:
    136          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    137            zclZigbeeDevice_TaskID = task_id;
   \   000004   E9           MOV     A,R1
   \   000005   90....       MOV     DPTR,#zclZigbeeDevice_TaskID
   \   000008   F0           MOVX    @DPTR,A
    138          
    139            // Set destination address to indirect
    140            zclZigbeeDevice_DstAddr.addrMode = (afAddrMode_t)AddrNotPresent; //傳送模式-AddrNotPresent=0; AddrBroadcast=15(廣播)
   \   000009   E4           CLR     A
   \   00000A   90....       MOV     DPTR,#(zclZigbeeDevice_DstAddr + 8)
   \   00000D   F0           MOVX    @DPTR,A
    141            zclZigbeeDevice_DstAddr.endPoint = 0;                            //對象應用程式ID
   \   00000E   90....       MOV     DPTR,#(zclZigbeeDevice_DstAddr + 9)
   \   000011   F0           MOVX    @DPTR,A
    142            zclZigbeeDevice_DstAddr.addr.shortAddr = 0;                      //廣播內定地址
   \   000012   90....       MOV     DPTR,#zclZigbeeDevice_DstAddr
   \   000015   F0           MOVX    @DPTR,A
   \   000016   A3           INC     DPTR
   \   000017   F0           MOVX    @DPTR,A
    143            
    144            zclZD_Init( &zclZigbeeDevice_SimpleDesc ); // This App is part of the ZIGBEE Device Profile                      
   \   000018                ; Setup parameters for call to function zclZD_Init
   \   000018   7A..         MOV     R2,#(zclZigbeeDevice_SimpleDesc & 0xff)
   \   00001A   7B..         MOV     R3,#((zclZigbeeDevice_SimpleDesc >> 8) & 0xff)
   \   00001C   12....       LCALL   ??zclZD_Init?relay
    145          
    146            zclGeneral_RegisterCmdCallbacks( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_CmdCallbacks ); // Register the ZCL General Cluster Library callback functions
   \   00001F                ; Setup parameters for call to function zclGeneral_RegisterCmdCallbacks
   \   00001F   7A..         MOV     R2,#(zclZigbeeDevice_CmdCallbacks & 0xff)
   \   000021   7B..         MOV     R3,#((zclZigbeeDevice_CmdCallbacks >> 8) & 0xff)
   \   000023   790C         MOV     R1,#0xc
   \   000025   12....       LCALL   ??zclGeneral_RegisterCmdCallbacks?relay
    147            
    148            zcl_registerAttrList( ZIGBEEDEVICE_ENDPOINT, ZIGBEEDEVICE_MAX_ATTRIBUTES, zclZigbeeDevice_Attrs ); // Register the application's attribute list
   \   000028                ; Setup parameters for call to function zcl_registerAttrList
   \   000028   7C..         MOV     R4,#(zclZigbeeDevice_Attrs & 0xff)
   \   00002A   7D..         MOV     R5,#((zclZigbeeDevice_Attrs >> 8) & 0xff)
   \   00002C   7A0B         MOV     R2,#0xb
   \   00002E   790C         MOV     R1,#0xc
   \   000030   12....       LCALL   ??zcl_registerAttrList?relay
    149            
    150            zcl_registerForMsg( zclZigbeeDevice_TaskID ); // Register the Application to receive the unprocessed Foundation command/response messages
   \   000033                ; Setup parameters for call to function zcl_registerForMsg
   \   000033   90....       MOV     DPTR,#zclZigbeeDevice_TaskID
   \   000036   E0           MOVX    A,@DPTR
   \   000037   F9           MOV     R1,A
   \   000038   12....       LCALL   ??zcl_registerForMsg?relay
    151            
    152            RegisterForKeys( zclZigbeeDevice_TaskID ); // Register for all key events - This app will handle all key events
   \   00003B                ; Setup parameters for call to function RegisterForKeys
   \   00003B   90....       MOV     DPTR,#zclZigbeeDevice_TaskID
   \   00003E   E0           MOVX    A,@DPTR
   \   00003F   F9           MOV     R1,A
   \   000040   12....       LCALL   ??RegisterForKeys?relay
    153            
    154            afRegister( &zigbeeDevice_TestEp ); // Register for a test endpoint
   \   000043                ; Setup parameters for call to function afRegister
   \   000043   7A..         MOV     R2,#(zigbeeDevice_TestEp & 0xff)
   \   000045   7B..         MOV     R3,#((zigbeeDevice_TestEp >> 8) & 0xff)
   \   000047   12....       LCALL   ??afRegister?relay
    155          
    156            ZDO_RegisterForZDOMsg( zclZigbeeDevice_TaskID, End_Device_Bind_rsp );
   \   00004A                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   00004A   7A20         MOV     R2,#0x20
   \   00004C   7B80         MOV     R3,#-0x80
   \   00004E   90....       MOV     DPTR,#zclZigbeeDevice_TaskID
   \   000051   E0           MOVX    A,@DPTR
   \   000052   F9           MOV     R1,A
   \   000053   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    157            ZDO_RegisterForZDOMsg( zclZigbeeDevice_TaskID, Match_Desc_rsp );
   \   000056                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   000056   7A06         MOV     R2,#0x6
   \   000058   7B80         MOV     R3,#-0x80
   \   00005A   90....       MOV     DPTR,#zclZigbeeDevice_TaskID
   \   00005D   E0           MOVX    A,@DPTR
   \   00005E   F9           MOV     R1,A
   \   00005F   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    158          }
   \   000062   02....       LJMP    ?Subroutine3 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
    159          
    160          /*********************************************************************
    161           * @fn          zclZigbeeDevice_event_loop
    162           * @brief       Event Loop Processor for zclGeneral.
    163           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    164          uint16 zclZigbeeDevice_event_loop( uint8 task_id, uint16 events )
   \                     zclZigbeeDevice_event_loop:
    165          {
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 9
   \   000005   74F7         MOV     A,#-0x9
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EA           MOV     A,R2
   \   00000B   FE           MOV     R6,A
   \   00000C   EB           MOV     A,R3
   \   00000D   FF           MOV     R7,A
    166            afIncomingMSGPacket_t *MSGpkt;
    167            (void)task_id;  // Intentionally unreferenced parameter
    168            
    169            if ( events & SYS_EVENT_MSG )
   \   00000E   7480         MOV     A,#-0x80
   \   000010   5F           ANL     A,R7
   \   000011   F9           MOV     R1,A
   \   000012   E4           CLR     A
   \   000013   7001         JNZ     ??zclZigbeeDevice_event_loop_0
   \   000015   E9           MOV     A,R1
   \                     ??zclZigbeeDevice_event_loop_0:
   \   000016   6003         JZ      $+5
   \   000018   02....       LJMP    ??zclZigbeeDevice_event_loop_1 & 0xFFFF
    170            {
    171              while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( zclZigbeeDevice_TaskID )) )
    172              { 
    173                switch ( MSGpkt->hdr.event )
    174                {
    175                  case ZCL_INCOMING_MSG:
    176                    zclZigbeeDevice_ProcessIncomingMsg( (zclIncomingMsg_t *)MSGpkt ); // Incoming ZCL Foundation command/response messages         
    177                    break;
    178          
    179                  case ZDO_CB_MSG:
    180                    zclZigbeeDevice_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
    181                    break;
    182          
    183                  case KEY_CHANGE:
    184                    zclZigbeeDevice_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    185                    break;
    186          
    187                  default:
    188                    break;
    189                }
    190                osal_msg_deallocate( (uint8 *)MSGpkt ); // Release the memory
    191              }
    192              return (events ^ SYS_EVENT_MSG); // return unprocessed events
    193            }
    194            
    195            // Called to process any change to the IdentifyTime attribute.
    196            if ( events & SAMPLESW_IDENTIFY_TIMEOUT_EVT )
   \   00001B   EE           MOV     A,R6
   \   00001C   A2E0         MOV     C,0xE0 /* A   */.0
   \   00001E   4003         JC      $+5
   \   000020   02....       LJMP    ??zclZigbeeDevice_event_loop_2 & 0xFFFF
    197            {
    198              zclSampleSw_IdentifyTime = 10;
   \   000023   90....       MOV     DPTR,#zclSampleSw_IdentifyTime
   \   000026   740A         MOV     A,#0xa
   \   000028   F0           MOVX    @DPTR,A
   \   000029   A3           INC     DPTR
   \   00002A   E4           CLR     A
   \   00002B   F0           MOVX    @DPTR,A
    199              zclZigbeeDevice_ProcessIdentifyTimeChange();
   \   00002C                ; Setup parameters for call to function zclZigbeeDevice_ProcessIdentifyTimeChange
   \   00002C   12....       LCALL   ??zclZigbeeDevice_ProcessIdentifyTimeChange?rel
    200              return ( events ^ SAMPLESW_IDENTIFY_TIMEOUT_EVT );
   \   00002F   7401         MOV     A,#0x1
   \   000031   6E           XRL     A,R6
   \   000032   FA           MOV     R2,A
   \   000033   EF           MOV     A,R7
   \                     ??zclZigbeeDevice_event_loop_3:
   \   000034   FB           MOV     R3,A
   \   000035   02....       LJMP    ??zclZigbeeDevice_event_loop_4 & 0xFFFF
    201            }
   \                     ??zclZigbeeDevice_event_loop_5:
   \   000038   8A82         MOV     DPL,R2
   \   00003A   8B83         MOV     DPH,R3
   \   00003C   A3           INC     DPTR
   \   00003D   A3           INC     DPTR
   \   00003E   A3           INC     DPTR
   \   00003F   E0           MOVX    A,@DPTR
   \   000040   F5..         MOV     ?V0 + 2,A
   \   000042   A2E0         MOV     C,0xE0 /* A   */.0
   \   000044   504F         JNC     ??zclZigbeeDevice_event_loop_6
   \   000046                ; Setup parameters for call to function zcl_SendCommand
   \   000046   75..00       MOV     ?V0 + 4,#0x0
   \   000049   75..00       MOV     ?V0 + 5,#0x0
   \   00004C   78..         MOV     R0,#?V0 + 4
   \   00004E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000051   78..         MOV     R0,#?V0 + 4
   \   000053   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000056   75..00       MOV     ?V0 + 3,#0x0
   \   000059   78..         MOV     R0,#?V0 + 3
   \   00005B   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00005E   78..         MOV     R0,#?V0 + 4
   \   000060   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000063   78..         MOV     R0,#?V0 + 3
   \   000065   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000068   78..         MOV     R0,#?V0 + 3
   \   00006A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00006D   75..01       MOV     ?V0 + 3,#0x1
   \   000070   78..         MOV     R0,#?V0 + 3
   \   000072   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000075   75..02       MOV     ?V0 + 3,#0x2
   \   000078   78..         MOV     R0,#?V0 + 3
   \   00007A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00007D   7C06         MOV     R4,#0x6
   \   00007F   7D00         MOV     R5,#0x0
   \   000081   7A..         MOV     R2,#(zclZigbeeDevice_DstAddr & 0xff)
   \   000083   7B..         MOV     R3,#((zclZigbeeDevice_DstAddr >> 8) & 0xff)
   \   000085   790C         MOV     R1,#0xc
   \   000087   12....       LCALL   ??zcl_SendCommand?relay
   \   00008A   740B         MOV     A,#0xb
   \   00008C   12....       LCALL   ?DEALLOC_XSTACK8
   \   00008F                ; Setup parameters for call to function osal_start_timerEx
   \   00008F   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_6:
   \   000092                ; Setup parameters for call to function Sensor_SetSendEvent
   \   000092   12....       LCALL   ??Sensor_SetSendEvent?relay
   \                     ??zclZigbeeDevice_event_loop_6:
   \   000095   E5..         MOV     A,?V0 + 2
   \   000097   A2E3         MOV     C,0xE0 /* A   */.3
   \   000099   505C         JNC     ??zclZigbeeDevice_event_loop_7
   \   00009B                ; Setup parameters for call to function HalLedSet
   \   00009B   7A00         MOV     R2,#0x0
   \   00009D   7901         MOV     R1,#0x1
   \   00009F   12....       LCALL   ??HalLedSet?relay
   \   0000A2   7408         MOV     A,#0x8
   \   0000A4   12....       LCALL   ?XSTACK_DISP0_8
   \   0000A7   740F         MOV     A,#0xf
   \   0000A9   F0           MOVX    @DPTR,A
   \   0000AA   85..82       MOV     DPL,?XSP + 0
   \   0000AD   85..83       MOV     DPH,?XSP + 1
   \   0000B0   74FF         MOV     A,#-0x1
   \   0000B2   F0           MOVX    @DPTR,A
   \   0000B3   A3           INC     DPTR
   \   0000B4   F0           MOVX    @DPTR,A
   \   0000B5                ; Setup parameters for call to function ZDP_MatchDescReq
   \   0000B5   75..00       MOV     ?V0 + 2,#0x0
   \   0000B8   78..         MOV     R0,#?V0 + 2
   \   0000BA   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000BD   75..00       MOV     ?V0 + 3,#0x0
   \   0000C0   78..         MOV     R0,#?V0 + 2
   \   0000C2   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000C5   78..         MOV     R0,#?V0 + 2
   \   0000C7   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000CA   75....       MOV     ?V0 + 2,#(bindingOutClusters & 0xff)
   \   0000CD   75....       MOV     ?V0 + 3,#((bindingOutClusters >> 8) & 0xff)
   \   0000D0   78..         MOV     R0,#?V0 + 2
   \   0000D2   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000D5   75..04       MOV     ?V0 + 2,#0x4
   \   0000D8   75..01       MOV     ?V0 + 3,#0x1
   \   0000DB   78..         MOV     R0,#?V0 + 2
   \   0000DD   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000E0   7901         MOV     R1,#0x1
   \   0000E2   7CFF         MOV     R4,#-0x1
   \   0000E4   7DFF         MOV     R5,#-0x1
   \   0000E6   7408         MOV     A,#0x8
   \   0000E8   12....       LCALL   ?XSTACK_DISP0_8
   \   0000EB   AA82         MOV     R2,DPL
   \   0000ED   AB83         MOV     R3,DPH
   \   0000EF   12....       LCALL   ??ZDP_MatchDescReq?relay
   \   0000F2   7408         MOV     A,#0x8
   \   0000F4   12....       LCALL   ?DEALLOC_XSTACK8
   \                     ??zclZigbeeDevice_event_loop_7:
   \   0000F7                ; Setup parameters for call to function osal_msg_deallocate
   \   0000F7   AA..         MOV     R2,?V0 + 0
   \   0000F9   AB..         MOV     R3,?V0 + 1
   \   0000FB   12....       LCALL   ??osal_msg_deallocate?relay
   \                     ??zclZigbeeDevice_event_loop_1:
   \   0000FE                ; Setup parameters for call to function osal_msg_receive
   \   0000FE   90....       MOV     DPTR,#zclZigbeeDevice_TaskID
   \   000101   E0           MOVX    A,@DPTR
   \   000102   F9           MOV     R1,A
   \   000103   12....       LCALL   ??osal_msg_receive?relay
   \   000106   8A..         MOV     ?V0 + 0,R2
   \   000108   8B..         MOV     ?V0 + 1,R3
   \   00010A   EA           MOV     A,R2
   \   00010B   7001         JNZ     ??zclZigbeeDevice_event_loop_8
   \   00010D   EB           MOV     A,R3
   \                     ??zclZigbeeDevice_event_loop_8:
   \   00010E   7003         JNZ     $+5
   \   000110   02....       LJMP    ??zclZigbeeDevice_event_loop_9 & 0xFFFF
   \   000113   8A82         MOV     DPL,R2
   \   000115   8B83         MOV     DPH,R3
   \   000117   E0           MOVX    A,@DPTR
   \   000118   12....       LCALL   ?UC_SWITCH_SPARSE
   \                     `?<Jumptable for zclZigbeeDevice_event_loop>_0`:
   \   00011B   00           DB        0
   \   00011C   03           DB        3
   \   00011D   34           DB        52
   \   00011E   ....         DW        ??zclZigbeeDevice_event_loop_10
   \   000120   C0           DB        192
   \   000121   ....         DW        ??zclZigbeeDevice_event_loop_5
   \   000123   D3           DB        211
   \   000124   ....         DW        ??zclZigbeeDevice_event_loop_11
   \   000126   ....         DW        ??zclZigbeeDevice_event_loop_7
   \                     ??zclZigbeeDevice_event_loop_10:
   \   000128   8A82         MOV     DPL,R2
   \   00012A   8B83         MOV     DPH,R3
   \   00012C   A3           INC     DPTR
   \   00012D   A3           INC     DPTR
   \   00012E   A3           INC     DPTR
   \   00012F   A3           INC     DPTR
   \   000130   A3           INC     DPTR
   \   000131   A3           INC     DPTR
   \   000132   A3           INC     DPTR
   \   000133   E0           MOVX    A,@DPTR
   \   000134   12....       LCALL   ?UC_SWITCH_SPARSE
   \                     `?<Jumptable for zclZigbeeDevice_event_loop>_1`:
   \   000137   00           DB        0
   \   000138   02           DB        2
   \   000139   01           DB        1
   \   00013A   ....         DW        ??zclZigbeeDevice_event_loop_12
   \   00013C   04           DB        4
   \   00013D   ....         DW        ??zclZigbeeDevice_event_loop_13
   \   00013F   ....         DW        ??zclZigbeeDevice_event_loop_14
   \                     ??zclZigbeeDevice_event_loop_12:
   \   000141   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   000144   E0           MOVX    A,@DPTR
   \   000145   FA           MOV     R2,A
   \   000146   EB           MOV     A,R3
   \   000147   C3           CLR     C
   \   000148   9A           SUBB    A,R2
   \   000149   5010         JNC     ??zclZigbeeDevice_event_loop_14
   \   00014B   0B           INC     R3
   \   00014C   80F6         SJMP    ??CrossCallReturnLabel_0
   \                     ??zclZigbeeDevice_event_loop_13:
   \   00014E   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   000151   8001         SJMP    ??zclZigbeeDevice_event_loop_15
   \                     ??zclZigbeeDevice_event_loop_16:
   \   000153   0B           INC     R3
   \                     ??zclZigbeeDevice_event_loop_15:
   \   000154   E0           MOVX    A,@DPTR
   \   000155   FA           MOV     R2,A
   \   000156   EB           MOV     A,R3
   \   000157   C3           CLR     C
   \   000158   9A           SUBB    A,R2
   \   000159   40F8         JC      ??zclZigbeeDevice_event_loop_16
   \                     ??zclZigbeeDevice_event_loop_14:
   \   00015B   E5..         MOV     A,?V0 + 0
   \   00015D   2416         ADD     A,#0x16
   \   00015F   F582         MOV     DPL,A
   \   000161   E5..         MOV     A,?V0 + 1
   \   000163   3400         ADDC    A,#0x0
   \   000165   F583         MOV     DPH,A
   \   000167   E0           MOVX    A,@DPTR
   \   000168   FA           MOV     R2,A
   \   000169   A3           INC     DPTR
   \   00016A   E0           MOVX    A,@DPTR
   \   00016B   FB           MOV     R3,A
   \   00016C   EA           MOV     A,R2
   \   00016D   7001         JNZ     ??zclZigbeeDevice_event_loop_17
   \   00016F   EB           MOV     A,R3
   \                     ??zclZigbeeDevice_event_loop_17:
   \   000170   6085         JZ      ??zclZigbeeDevice_event_loop_7
   \   000172                ; Setup parameters for call to function osal_mem_free
   \                     ??zclZigbeeDevice_event_loop_18:
   \   000172   12....       LCALL   ??osal_mem_free?relay
   \   000175   8080         SJMP    ??zclZigbeeDevice_event_loop_7
   \                     ??zclZigbeeDevice_event_loop_11:
   \   000177   EA           MOV     A,R2
   \   000178   240C         ADD     A,#0xc
   \   00017A   F582         MOV     DPL,A
   \   00017C   EB           MOV     A,R3
   \   00017D   3400         ADDC    A,#0x0
   \   00017F   F583         MOV     DPH,A
   \   000181   E0           MOVX    A,@DPTR
   \   000182   F5..         MOV     ?V0 + 2,A
   \   000184   A3           INC     DPTR
   \   000185   E0           MOVX    A,@DPTR
   \   000186   F5..         MOV     ?V0 + 3,A
   \   000188   78..         MOV     R0,#?V0 + 2
   \   00018A   12....       LCALL   ?US_SWITCH_SPARSE
   \                     `?<Jumptable for zclZigbeeDevice_event_loop>_2`:
   \   00018D   0000         DW        0
   \   00018F   0200         DW        2
   \   000191   0680         DW        32774
   \   000193   ....         DW        ??zclZigbeeDevice_event_loop_19
   \   000195   2080         DW        32800
   \   000197   ....         DW        ??zclZigbeeDevice_event_loop_20
   \   000199   ....         DW        ??zclZigbeeDevice_event_loop_7
   \                     ??zclZigbeeDevice_event_loop_20:
   \   00019B   EA           MOV     A,R2
   \   00019C   2413         ADD     A,#0x13
   \   00019E   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_2:
   \   0001A1   F583         MOV     DPH,A
   \   0001A3   8882         MOV     DPL,R0
   \   0001A5   E0           MOVX    A,@DPTR
   \   0001A6   700A         JNZ     ??zclZigbeeDevice_event_loop_21
   \   0001A8                ; Setup parameters for call to function HalLedSet
   \   0001A8   7A01         MOV     R2,#0x1
   \                     ??zclZigbeeDevice_event_loop_22:
   \   0001AA   7901         MOV     R1,#0x1
   \   0001AC   12....       LCALL   ??HalLedSet?relay
   \   0001AF   02....       LJMP    ??zclZigbeeDevice_event_loop_7 & 0xFFFF
   \                     ??zclZigbeeDevice_event_loop_21:
   \   0001B2                ; Setup parameters for call to function HalLedSet
   \   0001B2   7A04         MOV     R2,#0x4
   \   0001B4   80F4         SJMP    ??zclZigbeeDevice_event_loop_22
   \                     ??zclZigbeeDevice_event_loop_19:
   \   0001B6                ; Setup parameters for call to function ZDO_ParseEPListRsp
   \   0001B6   12....       LCALL   ??ZDO_ParseEPListRsp?relay
   \   0001B9   8A..         MOV     ?V0 + 2,R2
   \   0001BB   8B..         MOV     ?V0 + 3,R3
   \   0001BD   EA           MOV     A,R2
   \   0001BE   7001         JNZ     ??zclZigbeeDevice_event_loop_23
   \   0001C0   EB           MOV     A,R3
   \                     ??zclZigbeeDevice_event_loop_23:
   \   0001C1   7003         JNZ     $+5
   \   0001C3   02....       LJMP    ??zclZigbeeDevice_event_loop_7 & 0xFFFF
   \   0001C6   8A82         MOV     DPL,R2
   \   0001C8   8B83         MOV     DPH,R3
   \   0001CA   E0           MOVX    A,@DPTR
   \   0001CB   7032         JNZ     ??zclZigbeeDevice_event_loop_24
   \   0001CD   A3           INC     DPTR
   \   0001CE   A3           INC     DPTR
   \   0001CF   A3           INC     DPTR
   \   0001D0   E0           MOVX    A,@DPTR
   \   0001D1   602C         JZ      ??zclZigbeeDevice_event_loop_24
   \   0001D3   7402         MOV     A,#0x2
   \   0001D5   90....       MOV     DPTR,#(zclZigbeeDevice_DstAddr + 8)
   \   0001D8   F0           MOVX    @DPTR,A
   \   0001D9   8A82         MOV     DPL,R2
   \   0001DB   8B83         MOV     DPH,R3
   \   0001DD   A3           INC     DPTR
   \   0001DE   E0           MOVX    A,@DPTR
   \   0001DF   F8           MOV     R0,A
   \   0001E0   A3           INC     DPTR
   \   0001E1   E0           MOVX    A,@DPTR
   \   0001E2   F9           MOV     R1,A
   \   0001E3   90....       MOV     DPTR,#zclZigbeeDevice_DstAddr
   \   0001E6   E8           MOV     A,R0
   \   0001E7   F0           MOVX    @DPTR,A
   \   0001E8   A3           INC     DPTR
   \   0001E9   E9           MOV     A,R1
   \   0001EA   F0           MOVX    @DPTR,A
   \   0001EB   8A82         MOV     DPL,R2
   \   0001ED   8B83         MOV     DPH,R3
   \   0001EF   A3           INC     DPTR
   \   0001F0   A3           INC     DPTR
   \   0001F1   A3           INC     DPTR
   \   0001F2   A3           INC     DPTR
   \   0001F3   E0           MOVX    A,@DPTR
   \   0001F4   90....       MOV     DPTR,#(zclZigbeeDevice_DstAddr + 9)
   \   0001F7   F0           MOVX    @DPTR,A
   \   0001F8                ; Setup parameters for call to function HalLedSet
   \   0001F8   7A01         MOV     R2,#0x1
   \   0001FA   7901         MOV     R1,#0x1
   \   0001FC   12....       LCALL   ??HalLedSet?relay
   \                     ??zclZigbeeDevice_event_loop_24:
   \   0001FF                ; Setup parameters for call to function osal_mem_free
   \   0001FF   AA..         MOV     R2,?V0 + 2
   \   000201   AB..         MOV     R3,?V0 + 3
   \   000203   02....       LJMP    ??zclZigbeeDevice_event_loop_18 & 0xFFFF
   \                     ??zclZigbeeDevice_event_loop_9:
   \   000206   EE           MOV     A,R6
   \   000207   FA           MOV     R2,A
   \   000208   7480         MOV     A,#-0x80
   \   00020A   6F           XRL     A,R7
   \   00020B   02....       LJMP    ??zclZigbeeDevice_event_loop_3 & 0xFFFF
    202            
    203            // Send the sensor data to Coordinator
    204            if ( events & SENSOR_SEND_MSG_EVT )
   \                     ??zclZigbeeDevice_event_loop_2:
   \   00020E   5402         ANL     A,#0x2
   \   000210   600E         JZ      ??zclZigbeeDevice_event_loop_25
    205            {
    206              osal_start_timerEx( zclZigbeeDevice_TaskID, SENSOR_SEND_MSG_EVT, SEND_DISPLAY_TIMER);
   \   000212                ; Setup parameters for call to function osal_start_timerEx
   \   000212   12....       LCALL   ?Subroutine1 & 0xFFFF
    207              zclZIGBEEDevice_SendMsg();
   \                     ??CrossCallReturnLabel_4:
   \   000215                ; Setup parameters for call to function M170_SensorFunction
   \   000215   12....       LCALL   ??M170_SensorFunction?relay
    208              return ( events ^ SENSOR_SEND_MSG_EVT );
   \   000218   7402         MOV     A,#0x2
   \   00021A   6E           XRL     A,R6
   \   00021B   FA           MOV     R2,A
   \   00021C   EF           MOV     A,R7
   \   00021D   FB           MOV     R3,A
   \   00021E   8004         SJMP    ??zclZigbeeDevice_event_loop_4
    209            }
    210            
    211            return 0; // Discard unknown events
   \                     ??zclZigbeeDevice_event_loop_25:
   \   000220   7A00         MOV     R2,#0x0
   \   000222   7B00         MOV     R3,#0x0
   \                     ??zclZigbeeDevice_event_loop_4:
   \   000224   7409         MOV     A,#0x9
   \   000226   12....       LCALL   ?DEALLOC_XSTACK8
   \   000229   7F06         MOV     R7,#0x6
   \   00022B   02....       LJMP    ?BANKED_LEAVE_XDATA
    212          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7CF4         MOV     R4,#-0xc
   \   000002   7D01         MOV     R5,#0x1
   \   000004   7A02         MOV     R2,#0x2
   \   000006                REQUIRE ??Subroutine4_0
   \   000006                ; // Fall through to label ??Subroutine4_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine4_0:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   90....       MOV     DPTR,#zclZigbeeDevice_TaskID
   \   000005   E0           MOVX    A,@DPTR
   \   000006   F9           MOV     R1,A
   \   000007   12....       LCALL   ??osal_start_timerEx?relay
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   EA           MOV     A,R2
   \   000001   2416         ADD     A,#0x16
   \   000003   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_3:
   \   000006   F9           MOV     R1,A
   \   000007   8882         MOV     DPL,R0
   \   000009   8983         MOV     DPH,R1
   \   00000B   7B00         MOV     R3,#0x0
   \   00000D   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   F582         MOV     DPL,A
   \   000002   EB           MOV     A,R3
   \   000003   3400         ADDC    A,#0x0
   \   000005   F583         MOV     DPH,A
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F8           MOV     R0,A
   \   000009   A3           INC     DPTR
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   22           RET
    213          
    214          /*********************************************************************
    215           * @fn      Sensor_SetSendEvent
    216           * @brief   Set the Sensor send data event flag
    217           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    218          void Sensor_SetSendEvent( void )
   \                     Sensor_SetSendEvent:
    219          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    220          #if defined( DELAY_SEND )
    221            // Adds a delay to sending the data
    222            osal_start_timerEx( zclZigbeeDevice_TaskID, SEND_MSG_EVT, SEND_DELAY );
    223          #else
    224            // No Delay - just send the data
    225            osal_set_event( zclZigbeeDevice_TaskID, SENSOR_SEND_MSG_EVT );
   \   000004                ; Setup parameters for call to function osal_set_event
   \   000004   7A02         MOV     R2,#0x2
   \   000006   7B00         MOV     R3,#0x0
   \   000008   90....       MOV     DPTR,#zclZigbeeDevice_TaskID
   \   00000B   E0           MOVX    A,@DPTR
   \   00000C   F9           MOV     R1,A
   \   00000D   12....       LCALL   ??osal_set_event?relay
    226          #endif
    227          }
   \   000010   80..         SJMP    ?Subroutine3
    228          
    229          /*********************************************************************
    230           * @fn      zclZigbeeDevice_ProcessZDOMsgs()
    231           * @brief   Process response messages
    232           */
    233          void zclZigbeeDevice_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg )
    234          {
    235            switch ( inMsg->clusterID )
    236            {
    237              case End_Device_Bind_rsp:
    238                if ( ZDO_ParseBindRsp( inMsg ) == ZSuccess )
    239                {
    240                  HalLedSet( HAL_LED_1, HAL_LED_MODE_ON ); // Light LED
    241                }
    242          #if defined(BLINK_LEDS)
    243                else
    244                {      
    245                  HalLedSet ( HAL_LED_1, HAL_LED_MODE_FLASH ); // Flash LED to show failure
    246                }
    247          #endif
    248                break;
    249          
    250              case Match_Desc_rsp:
    251                {
    252                  ZDO_ActiveEndpointRsp_t *pRsp = ZDO_ParseEPListRsp( inMsg );
    253                  if ( pRsp )
    254                  {
    255                    if ( pRsp->status == ZSuccess && pRsp->cnt )
    256                    {
    257                      zclZigbeeDevice_DstAddr.addrMode = (afAddrMode_t)Addr16Bit;
    258                      zclZigbeeDevice_DstAddr.addr.shortAddr = pRsp->nwkAddr;
    259                      // Take the first endpoint, Can be changed to search through endpoints
    260                      zclZigbeeDevice_DstAddr.endPoint = pRsp->epList[0];
    261                      
    262                      HalLedSet( HAL_LED_1, HAL_LED_MODE_ON ); // Light LED
    263                    }
    264                    osal_mem_free( pRsp );
    265                  }
    266                }
    267                break;
    268            }
    269          }
    270          
    271          /*********************************************************************
    272           * @fn      zclZigbeeDevice_HandleKeys
    273           * @brief   Handles all key events for this device.
    274           * @param   shift - true if in shift/alt.
    275           * @param   keys - bit field for key events. 
    276           *          Valid entries: HAL_KEY_SW_4(MCU-K2)
    277           *                         HAL_KEY_SW_1(MCU-K1)
    278           */
    279          static void zclZigbeeDevice_HandleKeys( byte shift, byte keys )
    280          {
    281            zAddrType_t dstAddr;
    282            (void)shift;  // Intentionally unreferenced parameter
    283            
    284            // Using this as the "Light Switch"
    285            if ( keys & HAL_KEY_SW1 )
    286            {    
    287              #ifdef ZCL_ON_OFF 
    288                zclGeneral_SendOnOff_CmdToggle( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, false, 0 );
    289              #endif
    290                
    291                osal_start_timerEx( zclZigbeeDevice_TaskID, SENSOR_SEND_MSG_EVT, SEND_DISPLAY_TIMER);
    292                // Action taken when confirmation is received to Send the next message.
    293                Sensor_SetSendEvent();
    294            }
    295            
    296            //atuo binding(自動綁定裝置)
    297            if ( keys & HAL_KEY_SW2 ) 
    298            {
    299              HalLedSet ( HAL_LED_1, HAL_LED_MODE_OFF );
    300          
    301              // Initiate a Match Description Request (Service Discovery)
    302              dstAddr.addrMode = AddrBroadcast;
    303              dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR;
    304              ZDP_MatchDescReq( &dstAddr, 
    305                                NWK_BROADCAST_SHORTADDR,
    306                                ZCL_HA_PROFILE_ID,
    307                                ZCLZIGBEEDEV_BINDINGLIST, 
    308                                bindingOutClusters,
    309                                0, 
    310                                NULL, // No incoming clusters to bind
    311                                FALSE );
    312            }
    313          }
    314          
    315          /*********************************************************************
    316           * @fn      zclZigbeeDevice_ProcessIdentifyTimeChange
    317           * @brief   Called to process any change to the IdentifyTime attribute.
    318           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    319          static void zclZigbeeDevice_ProcessIdentifyTimeChange( void )
   \                     zclZigbeeDevice_ProcessIdentifyTimeChange:
    320          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    321            if ( zclSampleSw_IdentifyTime > 0 )
   \   000004   90....       MOV     DPTR,#zclSampleSw_IdentifyTime
   \   000007   E0           MOVX    A,@DPTR
   \   000008   7002         JNZ     ??zclZigbeeDevice_ProcessIdentifyTimeChange_0
   \   00000A   A3           INC     DPTR
   \   00000B   E0           MOVX    A,@DPTR
   \                     ??zclZigbeeDevice_ProcessIdentifyTimeChange_0:
   \   00000C   6018         JZ      ??zclZigbeeDevice_ProcessIdentifyTimeChange_1
    322            {
    323              osal_start_timerEx( zclZigbeeDevice_TaskID, SAMPLESW_IDENTIFY_TIMEOUT_EVT, 1000 );
   \   00000E                ; Setup parameters for call to function osal_start_timerEx
   \   00000E   7CE8         MOV     R4,#-0x18
   \   000010   7D03         MOV     R5,#0x3
   \   000012   7A01         MOV     R2,#0x1
   \   000014   12....       LCALL   ??Subroutine4_0 & 0xFFFF
    324              HalLedBlink ( HAL_LED_1, 0xFF, HAL_LED_DEFAULT_DUTY_CYCLE, HAL_LED_DEFAULT_FLASH_TIME );
   \                     ??CrossCallReturnLabel_5:
   \   000017                ; Setup parameters for call to function HalLedBlink
   \   000017   7CE8         MOV     R4,#-0x18
   \   000019   7D03         MOV     R5,#0x3
   \   00001B   7B05         MOV     R3,#0x5
   \   00001D   7AFF         MOV     R2,#-0x1
   \   00001F   7901         MOV     R1,#0x1
   \   000021   12....       LCALL   ??HalLedBlink?relay
   \   000024   801D         SJMP    ??zclZigbeeDevice_ProcessIdentifyTimeChange_2
    325            }
    326            else
    327            {
    328              if ( zclSampleSw_OnOff )
   \                     ??zclZigbeeDevice_ProcessIdentifyTimeChange_1:
   \   000026   90....       MOV     DPTR,#zclSampleSw_OnOff
   \   000029   E0           MOVX    A,@DPTR
   \   00002A   6004         JZ      ??zclZigbeeDevice_ProcessIdentifyTimeChange_3
    329                HalLedSet ( HAL_LED_1, HAL_LED_MODE_ON );
   \   00002C                ; Setup parameters for call to function HalLedSet
   \   00002C   7A01         MOV     R2,#0x1
   \   00002E   8002         SJMP    ??zclZigbeeDevice_ProcessIdentifyTimeChange_4
    330              else
    331                HalLedSet ( HAL_LED_1, HAL_LED_MODE_OFF );
   \                     ??zclZigbeeDevice_ProcessIdentifyTimeChange_3:
   \   000030                ; Setup parameters for call to function HalLedSet
   \   000030   7A00         MOV     R2,#0x0
   \                     ??zclZigbeeDevice_ProcessIdentifyTimeChange_4:
   \   000032   7901         MOV     R1,#0x1
   \   000034   12....       LCALL   ??HalLedSet?relay
    332              osal_stop_timerEx( zclZigbeeDevice_TaskID, SAMPLESW_IDENTIFY_TIMEOUT_EVT );
   \   000037                ; Setup parameters for call to function osal_stop_timerEx
   \   000037   7A01         MOV     R2,#0x1
   \   000039   7B00         MOV     R3,#0x0
   \   00003B   90....       MOV     DPTR,#zclZigbeeDevice_TaskID
   \   00003E   E0           MOVX    A,@DPTR
   \   00003F   F9           MOV     R1,A
   \   000040   12....       LCALL   ??osal_stop_timerEx?relay
    333            }
    334          }
   \                     ??zclZigbeeDevice_ProcessIdentifyTimeChange_2:
   \   000043                REQUIRE ?Subroutine3
   \   000043                ; // Fall through to label ?Subroutine3
    335          
    336          /*********************************************************************
    337           * @fn      zclZigbeeDevice_BasicResetCB
    338           * @brief   Callback from the ZCL General Cluster Library
    339           *          to set all the Basic Cluster attributes to  default values.
    340           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    341          static void zclZigbeeDevice_BasicResetCB( void )
   \                     zclZigbeeDevice_BasicResetCB:
    342          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    343          }
   \   000000   02....       LJMP    ?BRET
    344          
    345          /*********************************************************************
    346           * @fn      zclZigbeeDevice_IdentifyCB
    347           * @brief   Callback from the ZCL General Cluster Library when
    348           *          it received an Identity Command for this application.
    349           * @param   srcAddr - source address and endpoint of the response message
    350           *          identifyTime - the number of seconds to identify yourself
    351           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    352          static void zclZigbeeDevice_IdentifyCB( zclIdentify_t *pCmd )
   \                     zclZigbeeDevice_IdentifyCB:
    353          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    354            zclSampleSw_IdentifyTime = pCmd->identifyTime;
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   F8           MOV     R0,A
   \   00000C   A3           INC     DPTR
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   F9           MOV     R1,A
   \   00000F   90....       MOV     DPTR,#zclSampleSw_IdentifyTime
   \   000012   E8           MOV     A,R0
   \   000013   F0           MOVX    @DPTR,A
   \   000014   A3           INC     DPTR
   \   000015   E9           MOV     A,R1
   \   000016   F0           MOVX    @DPTR,A
    355            zclZigbeeDevice_ProcessIdentifyTimeChange();
   \   000017                ; Setup parameters for call to function zclZigbeeDevice_ProcessIdentifyTimeChange
   \   000017   12....       LCALL   ??zclZigbeeDevice_ProcessIdentifyTimeChange?rel
    356          }
   \   00001A   80..         SJMP    ?Subroutine3
    357          
    358          /*********************************************************************
    359           * @fn      zclZigbeeDevice_IdentifyQueryRspCB
    360           * @brief   Callback from the ZCL General Cluster Library when
    361           *          it received an Identity Query Response Command for this application.
    362           * @param   srcAddr - source address
    363           *          timeout - number of seconds to identify yourself (valid for query response)
    364           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    365          static void zclZigbeeDevice_IdentifyQueryRspCB( zclIdentifyQueryRsp_t *pRsp )
   \                     zclZigbeeDevice_IdentifyQueryRspCB:
    366          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    367            (void)pRsp; // Query Response (with timeout value)
    368          }
   \   000000   02....       LJMP    ?BRET
    369          
    370          /******************************************************************************
    371           *
    372           *  Functions for processing ZCL Foundation incoming Command/Response messages
    373           *
    374           *****************************************************************************/
    375          
    376          /*********************************************************************
    377           * @fn      zclZigbeeDevice_ProcessIncomingMsg
    378           * @brief   Process ZCL Foundation incoming message
    379           * @param   pInMsg - pointer to the received message
    380           */
    381          static void zclZigbeeDevice_ProcessIncomingMsg( zclIncomingMsg_t *pInMsg )
    382          {
    383            switch ( pInMsg->zclHdr.commandID )
    384            {
    385              #ifdef ZCL_READ
    386                case ZCL_CMD_READ_RSP:
    387                  zclZigbeeDevice_ProcessInReadRspCmd( pInMsg );
    388                  break;
    389              #endif
    390              #ifdef ZCL_WRITE
    391                case ZCL_CMD_WRITE_RSP:
    392                  zclZigbeeDevice_ProcessInWriteRspCmd( pInMsg );
    393                  break;
    394              #endif
    395              #ifdef ZCL_REPORT // See ZCL Test Applicaiton (zcl_testapp.c) for sample code on Attribute Reporting     
    396                case ZCL_CMD_CONFIG_REPORT:
    397                  //zclSampleSw_ProcessInConfigReportCmd( pInMsg );
    398                  break;
    399          
    400                case ZCL_CMD_CONFIG_REPORT_RSP:
    401                  //zclSampleSw_ProcessInConfigReportRspCmd( pInMsg );
    402                  break;
    403          
    404                case ZCL_CMD_READ_REPORT_CFG:
    405                  //zclSampleSw_ProcessInReadReportCfgCmd( pInMsg );
    406                  break;
    407          
    408                case ZCL_CMD_READ_REPORT_CFG_RSP:
    409                  //zclSampleSw_ProcessInReadReportCfgRspCmd( pInMsg );
    410                  break;
    411          
    412                case ZCL_CMD_REPORT:
    413                  //zclSampleSw_ProcessInReportCmd( pInMsg );
    414                  break;
    415              #endif
    416                case ZCL_CMD_DEFAULT_RSP:
    417                  zclZigbeeDevice_ProcessInDefaultRspCmd( pInMsg );
    418                  break;
    419              #ifdef ZCL_DISCOVER
    420                case ZCL_CMD_DISCOVER_RSP:
    421                  zclZigbeeDevice_ProcessInDiscRspCmd( pInMsg );
    422                  break;
    423              #endif
    424                default:
    425                  break;
    426            }
    427            if ( pInMsg->attrCmd )
    428              osal_mem_free( pInMsg->attrCmd );
    429          }
    430          
    431          #ifdef ZCL_READ
    432          /*********************************************************************
    433           * @fn      zclZigbeeDevice_ProcessInReadRspCmd
    434           * @brief   Process the "Profile" Read Response Command
    435           * @param   pInMsg - incoming message to process
    436           */
    437          static uint8 zclZigbeeDevice_ProcessInReadRspCmd( zclIncomingMsg_t *pInMsg )
    438          {
    439            zclReadRspCmd_t *readRspCmd;
    440            uint8 i;
    441          
    442            readRspCmd = (zclReadRspCmd_t *)pInMsg->attrCmd;
    443            for (i = 0; i < readRspCmd->numAttr; i++)
    444            {
    445              // Notify the originator of the results of the original read attributes
    446              // attempt and, for each successfull request, the value of the requested
    447              // attribute
    448            }return TRUE;
    449          }
    450          #endif // ZCL_READ
    451          
    452          #ifdef ZCL_WRITE
    453          /*********************************************************************
    454           * @fn      zclZigbeeDevice_ProcessInWriteRspCmd
    455           * @brief   Process the "Profile" Write Response Command
    456           * @param   pInMsg - incoming message to process
    457           */
    458          static uint8 zclZigbeeDevice_ProcessInWriteRspCmd( zclIncomingMsg_t *pInMsg )
    459          {
    460            zclWriteRspCmd_t *writeRspCmd;
    461            uint8 i;
    462          
    463            writeRspCmd = (zclWriteRspCmd_t *)pInMsg->attrCmd;
    464            for (i = 0; i < writeRspCmd->numAttr; i++)
    465            {
    466              // Notify the device of the results of the its original write attributes
    467              // command.
    468            }return TRUE;
    469          }
    470          #endif // ZCL_WRITE
    471          
    472          /*********************************************************************
    473           * @fn      zclZigbeeDevice_ProcessInDefaultRspCmd
    474           * @brief   Process the "Profile" Default Response Command
    475           * @param   pInMsg - incoming message to process
    476           */
    477          static uint8 zclZigbeeDevice_ProcessInDefaultRspCmd( zclIncomingMsg_t *pInMsg )
    478          {
    479            // zclDefaultRspCmd_t *defaultRspCmd = (zclDefaultRspCmd_t *)pInMsg->attrCmd;
    480            // Device is notified of the Default Response command.
    481            (void)pInMsg;
    482            return TRUE;
    483          }
    484          
    485          #ifdef ZCL_DISCOVER
    486          /*********************************************************************
    487           * @fn      zclZigbeeDevice_ProcessInDiscRspCmd
    488           * @brief   Process the "Profile" Discover Response Command
    489           * @param   pInMsg - incoming message to process
    490           */
    491          static uint8 zclZigbeeDevice_ProcessInDiscRspCmd( zclIncomingMsg_t *pInMsg )
    492          {
    493            zclDiscoverRspCmd_t *discoverRspCmd;
    494            uint8 i;
    495          
    496            discoverRspCmd = (zclDiscoverRspCmd_t *)pInMsg->attrCmd;
    497            for ( i = 0; i < discoverRspCmd->numAttr; i++ )
    498            {
    499              // Device is notified of the result of its attribute discovery command.
    500            }return TRUE;
    501          }
    502          #endif // ZCL_DISCOVER
    503          
    504          
    505          /****************************************************************************
    506          ****************************************************************************/
    507          
    508          /*********************************************************************
    509           * @fn      zclZIGBEEDevice_SendMsg
    510           * @brief   Use ZCL Foundation send the message to coordinator
    511           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    512          void zclZIGBEEDevice_SendMsg(void)
   \                     zclZIGBEEDevice_SendMsg:
    513          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    514            #if defined(M140)
    515              M140_SensorFunction();
    516            #endif
    517            #if defined(M170)
    518              M170_SensorFunction();
   \   000004                ; Setup parameters for call to function M170_SensorFunction
   \   000004   12....       LCALL   ??M170_SensorFunction?relay
    519            #endif
    520            #if defined(M200)
    521              M200_SensorFunction();
    522            #endif
    523            #if defined(M220)
    524              M220_SensorFunction();
    525            #endif
    526            #if defined(M310)
    527              M310_SensorFunction();
    528            #endif
    529          }
   \   000007   80..         SJMP    ?Subroutine3

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for bindingOutClusters>`:
   \   000000   0600         DW 6

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zigbeeDevice_TestEp>`:
   \   000000   14           DB 20
   \   000001   ....0000     DW zclZigbeeDevice_TaskID, 0H
   \   000005   00           DB 0

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclZigbeeDevice_CmdCallbacks`:
   \   000000   ....         DW ??zclZigbeeDevice_BasicResetCB?relay
   \   000002   ....         DW ??zclZigbeeDevice_IdentifyCB?relay
   \   000004   ....0000     DW ??zclZigbeeDevice_IdentifyQueryRspCB?relay, 0H, 0H, 0H, 0H, 0H, 0H
   \            00000000
   \            00000000
   \            0000    
   \   000012   00000000     DW 0H, 0H, 0H, 0H, 0H
   \            00000000
   \            0000    
   \   00001C   0000         DB 0, 0

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zcl_ZigbeeDevice_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zcl_ZigbeeDevice_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeDevice_event_loop?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeDevice_event_loop

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Sensor_SetSendEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Sensor_SetSendEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeDevice_ProcessIdentifyTimeChange?rel:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeDevice_ProcessIdentifyTimeChange

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeDevice_BasicResetCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeDevice_BasicResetCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeDevice_IdentifyCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeDevice_IdentifyCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZigbeeDevice_IdentifyQueryRspCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZigbeeDevice_IdentifyQueryRspCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclZIGBEEDevice_SendMsg?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclZIGBEEDevice_SendMsg
    530          

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     Sensor_SetSendEvent                2      0     23
       -> osal_set_event                4      0      0
     zclZIGBEEDevice_SendMsg            2      0      0
       -> M170_SensorFunction           4      0      0
     zclZigbeeDevice_BasicResetCB       0      0      0
     zclZigbeeDevice_IdentifyCB         2      0      0
       -> zclZigbeeDevice_ProcessIdentifyTimeChange
                                        4      0      0
     zclZigbeeDevice_IdentifyQueryRspCB
                                        0      0      0
     zclZigbeeDevice_ProcessIdentifyTimeChange
                                        2      0     23
       -> osal_start_timerEx            4      0      0
       -> HalLedBlink                   4      0      0
       -> HalLedSet                     4      0      0
       -> HalLedSet                     4      0      0
       -> osal_stop_timerEx             4      0      0
     zclZigbeeDevice_event_loop         1      0     34
       -> zclZigbeeDevice_ProcessIdentifyTimeChange
                                        0      0     46
       -> zcl_SendCommand               0      0     68
       -> osal_start_timerEx            0      0     46
       -> Sensor_SetSendEvent           0      0     46
       -> HalLedSet                     0      0     46
       -> ZDP_MatchDescReq              0      0     62
       -> osal_msg_deallocate           0      0     46
       -> osal_msg_receive              0      0     46
       -> osal_mem_free                 0      0     46
       -> HalLedSet                     0      0     46
       -> HalLedSet                     0      0     46
       -> ZDO_ParseEPListRsp            0      0     46
       -> HalLedSet                     0      0     46
       -> osal_mem_free                 0      0     46
       -> osal_start_timerEx            0      0     46
       -> M170_SensorFunction           0      0     46
     zcl_ZigbeeDevice_Init              2      0      0
       -> zclZD_Init                    4      0      0
       -> zclGeneral_RegisterCmdCallbacks
                                        4      0      0
       -> zcl_registerAttrList          4      0      0
       -> zcl_registerForMsg            4      0      0
       -> RegisterForKeys               4      0      0
       -> afRegister                    4      0      0
       -> ZDO_RegisterForZDOMsg         4      0      0
       -> ZDO_RegisterForZDOMsg         4      0      0


   Segment part sizes:

     Function/Label                                  Bytes
     --------------                                  -----
     zclZigbeeDevice_DstAddr                           12
     zclZigbeeDevice_TaskID                             1
     TransmitApp_epDesc                                 6
     bindingOutClusters                                 2
     zigbeeDevice_TestEp                                6
     zclZigbeeDevice_CmdCallbacks                      30
     zcl_ZigbeeDevice_Init                            101
     ?Subroutine3                                       7
     zclZigbeeDevice_event_loop                       558
     ?Subroutine1                                       6
     ??Subroutine4_0                                   11
     ?Subroutine0                                      14
     ?Subroutine2                                      12
     Sensor_SetSendEvent                               18
     zclZigbeeDevice_ProcessIdentifyTimeChange
                                                       67
     zclZigbeeDevice_BasicResetCB                       3
     zclZigbeeDevice_IdentifyCB                        28
     zclZigbeeDevice_IdentifyQueryRspCB
                                                        3
     zclZIGBEEDevice_SendMsg                            9
     ?<Initializer for bindingOutClusters>              2
     ?<Initializer for zigbeeDevice_TestEp>             6
     ?<Initializer for zclZigbeeDevice_CmdCallbacks    30
     ??zcl_ZigbeeDevice_Init?relay                      6
     ??zclZigbeeDevice_event_loop?relay                 6
     ??Sensor_SetSendEvent?relay                        6
     ??zclZigbeeDevice_ProcessIdentifyTimeChange?rel    6
     ??zclZigbeeDevice_BasicResetCB?relay               6
     ??zclZigbeeDevice_IdentifyCB?relay                 6
     ??zclZigbeeDevice_IdentifyQueryRspCB?relay         6
     ??zclZIGBEEDevice_SendMsg?relay                    6

 
 837 bytes in segment BANKED_CODE
  48 bytes in segment BANK_RELAYS
  38 bytes in segment XDATA_I
  38 bytes in segment XDATA_ID
  19 bytes in segment XDATA_Z
 
 923 bytes of CODE  memory
  57 bytes of XDATA memory

Errors: none
Warnings: none
