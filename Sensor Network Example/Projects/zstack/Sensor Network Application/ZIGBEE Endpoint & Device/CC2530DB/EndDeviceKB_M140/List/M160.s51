///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V7.51A/W32 for 8051               05/Sep/2013  13:12:46 /
// Copyright 2004-2009 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  D:\GitHub\z-stack\Sensor Network                  /
//                          Example\Components\hal\module\M160.c              /
//    Command line       =  -f "D:\GitHub\z-stack\Sensor Network              /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev. /
//                          cfg" (-DCPU32MHZ -DROOT=__near_func               /
//                          -DBLINK_LEDS) -f "D:\GitHub\z-stack\Sensor        /
//                          Network Example\Projects\zstack\Sensor Network    /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig /
//                          .cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0           /
//                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800         /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=TRUE -DPOLL_RATE=1000        /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100   /
//                          -DREJOIN_POLL_RATE=440) -f                        /
//                          "D:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cf /
//                          g" (-DZCL_READ -DZCL_WRITE -DZCL_BASIC            /
//                          -DZCL_IDENTIFY -DZCL_ON_OFF -DZCL_KEY_ESTABLISH   /
//                          -DZCL_LOAD_CONTROL -DZCL_SIMPLE_METERING          /
//                          -DZCL_PRICING) -DZCL_MESSAGE                      /
//                          "D:\GitHub\z-stack\Sensor Network                 /
//                          Example\Components\hal\module\M160.c" -D          /
//                          NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D           /
//                          MT_APP_FUNC -D MT_SYS_FUNC -D MT_ZDO_FUNC -D      /
//                          LCD_SUPPORTED=DEBUG -D xPOWER_SAVING -D           /
//                          End_Device -D M140 -D xPA2591 -lC                 /
//                          "D:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\EndDeviceKB_M140\List\" -lA       /
//                          "D:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\EndDeviceKB_M140\List\"           /
//                          --diag_suppress Pe001,Pa010 -o                    /
//                          "D:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\EndDeviceKB_M140\Obj\" -e         /
//                          --require_prototypes --debug --core=plain         /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          "D:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint & Device\CC2530DB\"   /
//                          -I "D:\GitHub\z-stack\Sensor Network              /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\SOURCE\" -I                    /
//                          "D:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\SOURCE\" -I                 /
//                          "D:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I      /
//                          "D:\GitHub\z-stack\Sensor Network                 /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MT\"    /
//                          -I "D:\GitHub\z-stack\Sensor Network              /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INC /
//                          LUDE\" -I "D:\GitHub\z-stack\Sensor Network       /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\MOD /
//                          ULE\" -I "D:\GitHub\z-stack\Sensor Network        /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TAR /
//                          GET\CC2530KB\" -I "D:\GitHub\z-stack\Sensor       /
//                          Network Example\Projects\zstack\Sensor Network    /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MC /
//                          U\CCSOC\" -I "D:\GitHub\z-stack\Sensor Network    /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\IN /
//                          CLUDE\" -I "D:\GitHub\z-stack\Sensor Network      /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\A /
//                          F\" -I "D:\GitHub\z-stack\Sensor Network          /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\N /
//                          WK\" -I "D:\GitHub\z-stack\Sensor Network         /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\S /
//                          EC\" -I "D:\GitHub\z-stack\Sensor Network         /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\S /
//                          API\" -I "D:\GitHub\z-stack\Sensor Network        /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\S /
//                          YS\" -I "D:\GitHub\z-stack\Sensor Network         /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\Z /
//                          CL\" -I "D:\GitHub\z-stack\Sensor Network         /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\Z /
//                          DO\" -I "D:\GitHub\z-stack\Sensor Network         /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8 /
//                          W\" -I "D:\GitHub\z-stack\Sensor Network          /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\"  /
//                          -I "D:\GitHub\z-stack\Sensor Network              /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICE /
//                          S\SADDR\" -I "D:\GitHub\z-stack\Sensor Network    /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICE /
//                          S\SDATA\" -I "D:\GitHub\z-stack\Sensor Network    /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INC /
//                          LUDE\" -I "D:\GitHub\z-stack\Sensor Network       /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIG /
//                          H_LEVEL\" -I "D:\GitHub\z-stack\Sensor Network    /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW /
//                          _LEVEL\srf04\" -I "D:\GitHub\z-stack\Sensor       /
//                          Network Example\Projects\zstack\Sensor Network    /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW /
//                          _LEVEL\srf04\SINGLE_CHIP\" -I "C:\Program Files   /
//                          (x86)\IAR Systems\Embedded Workbench              /
//                          5.3\8051\INC\" -I "C:\Program Files (x86)\IAR     /
//                          Systems\Embedded Workbench 5.3\8051\INC\CLIB\"    /
//                          -Ohz                                              /
//    List file          =  D:\GitHub\z-stack\Sensor Network                  /
//                          Example\Projects\zstack\Sensor Network            /
//                          Application\ZIGBEE Endpoint &                     /
//                          Device\CC2530DB\EndDeviceKB_M140\List\M160.s51    /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME M160

        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ??M160_Timer_Call_Back?relay
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_MOV_X
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?V0
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC ??M160_Init?relay
        FUNCTION ??M160_Init?relay,0203H
        PUBLIC ??M160_Off?relay
        FUNCTION ??M160_Off?relay,0203H
        PUBLIC ??M160_On?relay
        FUNCTION ??M160_On?relay,0203H
        PUBLIC ??M160_Timer_Call_Back?relay
        FUNCTION ??M160_Timer_Call_Back?relay,0203H
        PUBLIC M160_DutyCount
        PUBLIC M160_DutyValue
        PUBLIC M160_Init
        FUNCTION M160_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC M160_Off
        FUNCTION M160_Off,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC M160_On
        FUNCTION M160_On,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC M160_Timer_Call_Back
        FUNCTION M160_Timer_Call_Back,0603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 3, STACK
        PUBWEAK P0DIR
        PUBWEAK P0SEL
        PUBWEAK _A_P0
        PUBWEAK __Constant_64
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
HalTimerConfig      SYMBOL "HalTimerConfig"
HalTimerStart       SYMBOL "HalTimerStart"
??HalTimerConfig?relay SYMBOL "?relay", HalTimerConfig
??HalTimerStart?relay SYMBOL "?relay", HalTimerStart
M160_Init           SYMBOL "M160_Init"
??M160_Init?relay   SYMBOL "?relay", M160_Init
M160_Off            SYMBOL "M160_Off"
??M160_Off?relay    SYMBOL "?relay", M160_Off
M160_On             SYMBOL "M160_On"
??M160_On?relay     SYMBOL "?relay", M160_On
M160_Timer_Call_Back SYMBOL "M160_Timer_Call_Back"
??M160_Timer_Call_Back?relay SYMBOL "?relay", M160_Timer_Call_Back

        EXTERN HalTimerConfig
        FUNCTION HalTimerConfig,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalTimerStart
        FUNCTION HalTimerStart,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??HalTimerConfig?relay
        FUNCTION ??HalTimerConfig?relay,00H
        EXTERN ??HalTimerStart?relay
        FUNCTION ??HalTimerStart?relay,00H

// D:\GitHub\z-stack\Sensor Network Example\Components\hal\module\M160.c
//    1 //-------------------------------------------------------------------
//    2 // Filename: M160.c
//    3 // Description: hal M160 PWM library
//    4 //-------------------------------------------------------------------
//    5 //-------------------------------------------------------------------
//    6 // INCLUDES
//    7 //-------------------------------------------------------------------
//    8 #include "hal_defs.h"
//    9 #include "ioCC2530.h"

        ASEGN SFR_AN:DATA:NOROOT,080H
// union <unnamed> volatile __sfr _A_P0
_A_P0:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f3H
// unsigned char volatile __sfr P0SEL
P0SEL:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0fdH
// unsigned char volatile __sfr P0DIR
P0DIR:
        DS 1
//   10 #include "hal_mcu.h"
//   11 #include "hal_board.h"
//   12 #include "M160.h"
//   13 #include "hal_timer.h"
//   14 #include "hal_lcd.h"
//   15 
//   16 //-------------------------------------------------------------------
//   17 // LOCAL VARIABLES
//   18 //-------------------------------------------------------------------

        RSEG XDATA_Z:XDATA:NOROOT(0)
//   19 uint8 M160_DutyCount = 0;
M160_DutyCount:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_I:XDATA:NOROOT(0)
        DATA
//   20 uint8 M160_DutyValue = 50;
M160_DutyValue:
        DS 1
        REQUIRE `?<Initializer for M160_DutyValue>`
        REQUIRE __INIT_XDATA_I
//   21 //-------------------------------------------------------------------
//   22 // LOCAL FUNCTIONS
//   23 //-------------------------------------------------------------------
//   24 //-------------------------------------------------------------------
//   25 // @fn      timerPwm_ISR
//   26 // @brief   ISR framework for the 1k timer component
//   27 // @param   none
//   28 // @return  none
//   29 //-------------------------------------------------------------------
//   30 /*
//   31 HAL_ISR_FUNCTION(M160_ISR, T4_VECTOR)
//   32 {
//   33     M160_DutyCount++;
//   34     if (M160_DutyCount >= 100)
//   35     {
//   36         M160_DutyCount = 0;
//   37     }
//   38     if (M160_DutyCount >= M160_DutyValue)
//   39     {
//   40         HAL_DO_OFF();
//   41     }
//   42     else
//   43     {
//   44         HAL_DO_ON();
//   45     }
//   46 }
//   47 */
//   48 
//   49 //-------------------------------------------------------------------
//   50 // GLOBAL FUNCTIONS
//   51 //-------------------------------------------------------------------
//   52 //-------------------------------------------------------------------
//   53 // @fn      M160_Init
//   54 // @brief    Set up timer 4 to generate an interrupt 1 kHz for PWM
//   55 // @return  none
//   56 //-------------------------------------------------------------------

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   57 void M160_Init(void)
M160_Init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function M160_Init
//   58 {
        FUNCALL M160_Init, HalTimerConfig
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL M160_Init, HalTimerStart
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
//   59     HAL_DO_OUTPUT();
        ANL     0xf3,#0xfe
        ORL     0xfd,#0x1
//   60 
//   61     // Set prescaler divider value to 128 (8KHz)
//   62     /*
//   63     X_T4CTL |= 0x80;
//   64 
//   65     X_T4CTL &= ~(0x10); // Stop timer
//   66     T4IE = 0; // Disable interrupt
//   67     */
//   68     uint8 status =
//   69     HalTimerConfig(HAL_TIMER_0,
//   70                    HAL_TIMER_MODE_CTC,
//   71                    HAL_TIMER_CHANNEL_SINGLE,
//   72                    HAL_TIMER_CH_MODE_OUTPUT_COMPARE,
//   73                    1,
//   74                    M160_Timer_Call_Back);
        ; Setup parameters for call to function HalTimerConfig
        MOV     ?V0 + 0,#(??M160_Timer_Call_Back?relay & 0xff)
        MOV     ?V0 + 1,#((??M160_Timer_Call_Back?relay >> 8) & 0xff)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R5,#0x1
        MOV     R4,#0x2
        MOV     R3,#0x1
        MOV     R2,#0x2
        MOV     R1,#0x0
        LCALL   ??HalTimerConfig?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
//   75     HalTimerStart(HAL_TIMER_0,100);
        ; Setup parameters for call to function HalTimerStart
        MOV     DPTR,#__Constant_64
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     R1,#0x0
        LCALL   ??HalTimerStart?relay
//   76 }
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock0
        REQUIRE P0SEL
        REQUIRE P0DIR
//   77 
//   78 //-------------------------------------------------------------------
//   79 // @fn          M160_On
//   80 // @brief       Turn M160 on.
//   81 // @param       uint8 duty
//   82 // @return      none
//   83 //-------------------------------------------------------------------

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   84 void M160_On(uint8 duty)
M160_On:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function M160_On
//   85 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   86     //M160_DutyCount = 0;
//   87     M160_DutyValue = duty;
        MOV     A,R1
        MOV     DPTR,#M160_DutyValue
        MOVX    @DPTR,A
        CFI EndBlock cfiBlock1
//   88 
//   89     //X_T4CTL |= 0x10; // Start timer
//   90     //T4IE = 1; // Enable interrupt
//   91 }
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
        CFI CFA_SP SP+-4
        CFI DPH0 SameValue
        POP     DPL
        CFI CFA_SP SP+-3
        CFI DPL0 SameValue
        LJMP    ?BRET
        CFI EndBlock cfiBlock2
//   92 
//   93 //-------------------------------------------------------------------
//   94 // @fn          M160_Off
//   95 // @brief       Turn M160 off.
//   96 // @return      none
//   97 //-------------------------------------------------------------------

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   98 void M160_Off(void)
M160_Off:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function M160_Off
//   99 {
        ; Saved register size: 0
        ; Auto size: 0
//  100     //X_T4CTL &= ~(0x10); // Stop timer
//  101     //T4IE = 0; // Disable interrupt
//  102     HAL_DO_OFF();
        SETB    0x80.0
//  103 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock3
        REQUIRE _A_P0
//  104 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  105 void M160_Timer_Call_Back(uint8 timerId, uint8 channel, uint8 channelMode){
M160_Timer_Call_Back:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function M160_Timer_Call_Back
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  106   M160_DutyCount++;
        MOV     DPTR,#M160_DutyCount
        MOVX    A,@DPTR
        INC     A
        MOVX    @DPTR,A
//  107   if (M160_DutyCount >= 100)
        CLR     C
        SUBB    A,#0x64
        JC      ??M160_Timer_Call_Back_0
//  108       M160_DutyCount = 0;
        CLR     A
        MOVX    @DPTR,A
//  109   if (M160_DutyCount >= M160_DutyValue)
??M160_Timer_Call_Back_0:
        MOVX    A,@DPTR
        PUSH    A
        CFI CFA_SP SP+-6
        MOV     DPTR,#M160_DutyValue
        MOVX    A,@DPTR
        MOV     R2,A
        POP     A
        CFI CFA_SP SP+-5
        CLR     C
        SUBB    A,R2
        JC      ??M160_Timer_Call_Back_1
//  110       HAL_DO_OFF();
        SETB    0x80.0
        SJMP    ??M160_Timer_Call_Back_2
//  111   else
//  112       HAL_DO_ON();
??M160_Timer_Call_Back_1:
        CLR     0x80.0
//  113 }
??M160_Timer_Call_Back_2:
        SJMP    ?Subroutine0
        CFI EndBlock cfiBlock4
        REQUIRE _A_P0

        RSEG XDATA_ID:CODE:NOROOT(0)
        DATA
`?<Initializer for M160_DutyValue>`:
        DB 50

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA
__Constant_64:
        DD 100

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??M160_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    M160_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??M160_On?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    M160_On

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??M160_Off?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    M160_Off

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??M160_Timer_Call_Back?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    M160_Timer_Call_Back

        END
// 
// 126 bytes in segment BANKED_CODE
//  24 bytes in segment BANK_RELAYS
//   3 bytes in segment SFR_AN
//   1 byte  in segment XDATA_I
//   1 byte  in segment XDATA_ID
//   4 bytes in segment XDATA_ROM_C
//   1 byte  in segment XDATA_Z
// 
// 151 bytes of CODE  memory
//   0 bytes of CONST memory (+ 4 bytes shared)
//   0 bytes of DATA  memory (+ 3 bytes shared)
//   2 bytes of XDATA memory
//
//Errors: none
//Warnings: none
