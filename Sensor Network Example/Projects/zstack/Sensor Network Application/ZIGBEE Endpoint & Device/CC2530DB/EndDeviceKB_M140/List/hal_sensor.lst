###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                21/Aug/2013  18:10:26 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\Source\hal_sensor.c                         #
#    Command line       =  -f "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.c #
#                          fg" (-DCPU32MHZ -DROOT=__near_func -DBLINK_LEDS)   #
#                          -f "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig. #
#                          cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0             #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=TRUE      #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440)   #
#                          -f "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg #
#                          " (-DZCL_READ -DZCL_WRITE -DZCL_BASIC              #
#                          -DZCL_IDENTIFY -DZCL_ON_OFF -DZCL_KEY_ESTABLISH    #
#                          -DZCL_LOAD_CONTROL -DZCL_SIMPLE_METERING           #
#                          -DZCL_PRICING) -DZCL_MESSAGE                       #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\Source\hal_sensor.c" -D NWK_AUTO_POLL -D    #
#                          ZTOOL_P1 -D MT_TASK -D MT_APP_FUNC -D MT_SYS_FUNC  #
#                          -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -D           #
#                          xPOWER_SAVING -D End_Device -D M140 -D xPA2591     #
#                          -lC "D:\GitHub\z-stack\Sensor Network              #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceKB_M140\List\" -lA        #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceKB_M140\List\"            #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceKB_M140\Obj\" -e          #
#                          --require_prototypes --debug --core=plain          #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "D:\GitHub\z-stack\Sensor  #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Endpoint & Device\CC2530DB\"    #
#                          -I "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\SOURCE\" -I                     #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\SOURCE\" -I                  #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I       #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MT\" -I  #
#                          "D:\GitHub\z-stack\Sensor Network                  #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCL #
#                          UDE\" -I "D:\GitHub\z-stack\Sensor Network         #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\MODU #
#                          LE\" -I "D:\GitHub\z-stack\Sensor Network          #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARG #
#                          ET\CC2530KB\" -I "D:\GitHub\z-stack\Sensor         #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MCU #
#                          \CCSOC\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\INC #
#                          LUDE\" -I "D:\GitHub\z-stack\Sensor Network        #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF #
#                          \" -I "D:\GitHub\z-stack\Sensor Network            #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NW #
#                          K\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SE #
#                          C\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SA #
#                          PI\" -I "D:\GitHub\z-stack\Sensor Network          #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SY #
#                          S\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZC #
#                          L\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZD #
#                          O\" -I "D:\GitHub\z-stack\Sensor Network           #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8W #
#                          \" -I "D:\GitHub\z-stack\Sensor Network            #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\"   #
#                          -I "D:\GitHub\z-stack\Sensor Network               #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES #
#                          \SADDR\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES #
#                          \SDATA\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INCL #
#                          UDE\" -I "D:\GitHub\z-stack\Sensor Network         #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIGH #
#                          _LEVEL\" -I "D:\GitHub\z-stack\Sensor Network      #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\" -I "D:\GitHub\z-stack\Sensor         #
#                          Network Example\Projects\zstack\Sensor Network     #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_ #
#                          LEVEL\srf04\SINGLE_CHIP\" -I "C:\Program Files     #
#                          (x86)\IAR Systems\Embedded Workbench               #
#                          5.3\8051\INC\" -I "C:\Program Files (x86)\IAR      #
#                          Systems\Embedded Workbench 5.3\8051\INC\CLIB\"     #
#                          -Ohz                                               #
#    List file          =  D:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceKB_M140\List\hal_sensor.l #
#                          st                                                 #
#    Object file        =  D:\GitHub\z-stack\Sensor Network                   #
#                          Example\Projects\zstack\Sensor Network             #
#                          Application\ZIGBEE Endpoint &                      #
#                          Device\CC2530DB\EndDeviceKB_M140\Obj\hal_sensor.r5 #
#                          1                                                  #
#                                                                             #
#                                                                             #
###############################################################################

D:\GitHub\z-stack\Sensor Network Example\Projects\zstack\Sensor Network Application\ZIGBEE Endpoint & Device\Source\hal_sensor.c
      1          #include "ZComDef.h"
      2          #include "OSAL.h"
      3          #include "AF.h"
      4          #include "ZDApp.h"
      5          #include "ZDObject.h"
      6          #include "ZDProfile.h"
      7          #include "mac_radio_defs.h"
      8          
      9          #include "zcl.h"
     10          #include "zcl_general.h"
     11          #include "zcl_ha.h"
     12          #include "zcl_zigbee device.h"
     13          
     14          #include "onboard.h"
     15          #include "hal_lcd.h"
     16          #include "hal_led.h"
     17          #include "hal_key.h"
     18          #include "MT_UART.h"
     19          #include "hal_uart.h"
     20          #include "hal_timer.h"
     21          #include "hal_keypad.h"
     22          #include "hal_buzzer.h"
     23            
     24          /* HAL Sensor */
     25          #include "hal_sensor.h"
     26          
     27          #if defined(M110)
     28            #include "M110.h"
     29          #endif
     30          #if defined(M140)
     31            #include "M140.h"
     32          #endif
     33          #if defined(M160)
     34            #include "M160.h"
     35          #endif
     36          #if defined(M170)
     37            #include "M170.h"
     38          #endif
     39          #if defined(M190)
     40            #include "M190.h"
     41          #endif
     42          #if defined(M200)
     43            #include "M200.h"
     44          #endif
     45          #if defined(M270)
     46            #include "M270.h"
     47          #endif
     48          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     49          byte TransmitApp_Msg[ TRANSMITAPP_MAX_DATA_LEN ]; 
   \                     TransmitApp_Msg:
   \   000000                DS 102
   \   000066                REQUIRE __INIT_XDATA_Z
     50           
     51          void M110_SensorFunction(void); // M140 Module function
     52          void M140_SensorFunction(void); // M140 Module function
     53          void M160_SensorFunction(void); // M160 Module function
     54          void M170_SensorFunction(void); // M170 Module function
     55          void M190_SensorFunction(void); // M190 Module function
     56          void M200_SensorFunction(void); // M200 Module function
     57          void M270_SensorFunction(void); // M270 Module function
     58          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     59          void sleep(uint16 sec)
   \                     sleep:
     60          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     61              uint16 i,j,k;
     62              
     63              k = sec * 1000;
   \   000000   EA           MOV     A,R2
   \   000001   75F0E8       MOV     B,#-0x18
   \   000004   A4           MUL     AB
   \   000005   CA           XCH     A,R2
   \   000006   ACF0         MOV     R4,B
   \   000008   75F003       MOV     B,#0x3
   \   00000B   A4           MUL     AB
   \   00000C   2C           ADD     A,R4
   \   00000D   FC           MOV     R4,A
   \   00000E   75F0E8       MOV     B,#-0x18
   \   000011   EB           MOV     A,R3
   \   000012   A4           MUL     AB
   \   000013   2C           ADD     A,R4
   \   000014   FB           MOV     R3,A
     64              
     65              for(i=0;i<1600;i++)
   \   000015   7C40         MOV     R4,#0x40
   \   000017   7D06         MOV     R5,#0x6
     66                for(j=0;j<k;j++)
   \                     ??sleep_0:
   \   000019   7800         MOV     R0,#0x0
   \   00001B   7900         MOV     R1,#0x0
   \   00001D   8009         SJMP    ??sleep_1
     67                  asm("nop");
   \                     ??sleep_2:
   \   00001F   00           nop
   \   000020   E8           MOV     A,R0
   \   000021   2401         ADD     A,#0x1
   \   000023   08           INC     R0
   \   000024   E9           MOV     A,R1
   \   000025   3400         ADDC    A,#0x0
   \   000027   F9           MOV     R1,A
   \                     ??sleep_1:
   \   000028   C3           CLR     C
   \   000029   E8           MOV     A,R0
   \   00002A   9A           SUBB    A,R2
   \   00002B   E9           MOV     A,R1
   \   00002C   9B           SUBB    A,R3
   \   00002D   40F0         JC      ??sleep_2
   \   00002F   EC           MOV     A,R4
   \   000030   24FF         ADD     A,#-0x1
   \   000032   1C           DEC     R4
   \   000033   ED           MOV     A,R5
   \   000034   34FF         ADDC    A,#-0x1
   \   000036   FD           MOV     R5,A
   \   000037   EC           MOV     A,R4
   \   000038   7001         JNZ     ??sleep_3
   \   00003A   ED           MOV     A,R5
   \                     ??sleep_3:
   \   00003B   70DC         JNZ     ??sleep_0
     68          }
   \   00003D   02....       LJMP    ?BRET
     69          
     70          #if defined(M110)
     71          void M110_SensorFunction(void)
     72          {
     73              uint16 val;
     74                
     75              M110_Init();
     76              
     77              val = M110_GetValue();
     78              
     79              TransmitApp_Msg[0] = 1 + '0';  
     80              TransmitApp_Msg[1] = 1 + '0';   
     81              TransmitApp_Msg[2] = 0 + '0';        
     82              TransmitApp_Msg[3] = ',';
     83              TransmitApp_Msg[4] = 'N';     
     84              TransmitApp_Msg[5] = ',';
     85              if(val > 3000)
     86              {    
     87                  TransmitApp_Msg[6] = 1 + '0';
     88              }
     89              else
     90              {
     91                  TransmitApp_Msg[6] = 0 + '0';  
     92              }       
     93          
     94              uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, 
     95                                           ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC,
     96                                           TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, 7, 
     97                                           TransmitApp_Msg );
     98           }
     99          #endif
    100            
    101          #if defined(M140)
    102          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    103          void M140_SensorFunction(void)
   \                     M140_SensorFunction:
    104          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    105            uint16 val;
    106          
    107            M140_Init();
   \   000005                ; Setup parameters for call to function M140_Init
   \   000005   12....       LCALL   ??M140_Init?relay
    108                
    109            val = M140_GetValue();  
   \   000008                ; Setup parameters for call to function M140_GetValue
   \   000008   12....       LCALL   ??M140_GetValue?relay
   \   00000B   8A..         MOV     ?V0 + 0,R2
   \   00000D   8B..         MOV     ?V0 + 1,R3
   \   00000F   AC..         MOV     R4,?V0 + 0
   \   000011   AD..         MOV     R5,?V0 + 1
    110            if((0x2000 & val) == 0x2000) // check sign bit for negative value
   \   000013   7420         MOV     A,#0x20
   \   000015   5D           ANL     A,R5
   \   000016   F9           MOV     R1,A
   \   000017   E4           CLR     A
   \   000018   7001         JNZ     ??M140_SensorFunction_0
   \   00001A   E9           MOV     A,R1
   \                     ??M140_SensorFunction_0:
   \   00001B   601B         JZ      ??M140_SensorFunction_1
    111            {
    112              val = ((val - 16384) * 10) / 32;
   \   00001D   E4           CLR     A
   \   00001E   2C           ADD     A,R4
   \   00001F   74C0         MOV     A,#-0x40
   \   000021   3D           ADDC    A,R5
   \   000022   F5..         MOV     ?V0 + 1,A
   \   000024   EA           MOV     A,R2
   \   000025   75F00A       MOV     B,#0xa
   \   000028   A4           MUL     AB
   \   000029   F5..         MOV     ?V0 + 0,A
   \   00002B   AAF0         MOV     R2,B
   \   00002D   75F00A       MOV     B,#0xa
   \   000030   E5..         MOV     A,?V0 + 1
   \   000032   A4           MUL     AB
   \   000033   2A           ADD     A,R2
   \   000034   F5..         MOV     ?V0 + 1,A
   \   000036   8013         SJMP    ??M140_SensorFunction_2
    113            }
    114            else
    115            {
    116              val = (val * 10) / 32;
   \                     ??M140_SensorFunction_1:
   \   000038   EC           MOV     A,R4
   \   000039   75F00A       MOV     B,#0xa
   \   00003C   A4           MUL     AB
   \   00003D   FC           MOV     R4,A
   \   00003E   AAF0         MOV     R2,B
   \   000040   75F00A       MOV     B,#0xa
   \   000043   ED           MOV     A,R5
   \   000044   A4           MUL     AB
   \   000045   2A           ADD     A,R2
   \   000046   FD           MOV     R5,A
   \   000047   8C..         MOV     ?V0 + 0,R4
   \   000049   8D..         MOV     ?V0 + 1,R5
   \                     ??M140_SensorFunction_2:
   \   00004B   7405         MOV     A,#0x5
   \   00004D   78..         MOV     R0,#?V0 + 0
   \   00004F   12....       LCALL   ?US_SHR
   \   000052   AC..         MOV     R4,?V0 + 0
   \   000054   AD..         MOV     R5,?V0 + 1
    117            }
    118          
    119            TransmitApp_Msg[0] = 1 + '0';  
   \   000056   7431         MOV     A,#0x31
   \   000058   90....       MOV     DPTR,#TransmitApp_Msg
   \   00005B   F0           MOVX    @DPTR,A
    120            TransmitApp_Msg[1] = 4 + '0';   
   \   00005C   7434         MOV     A,#0x34
   \   00005E   90....       MOV     DPTR,#(TransmitApp_Msg + 1)
   \   000061   F0           MOVX    @DPTR,A
    121            TransmitApp_Msg[2] = 0 + '0';        
   \   000062   7430         MOV     A,#0x30
   \   000064   90....       MOV     DPTR,#(TransmitApp_Msg + 2)
   \   000067   F0           MOVX    @DPTR,A
    122            TransmitApp_Msg[3] = ',';
   \   000068   742C         MOV     A,#0x2c
   \   00006A   90....       MOV     DPTR,#(TransmitApp_Msg + 3)
   \   00006D   F0           MOVX    @DPTR,A
    123            TransmitApp_Msg[4] = 'A';   
   \   00006E   7441         MOV     A,#0x41
   \   000070   90....       MOV     DPTR,#(TransmitApp_Msg + 4)
   \   000073   F0           MOVX    @DPTR,A
    124            TransmitApp_Msg[5] = ',';  
   \   000074   742C         MOV     A,#0x2c
   \   000076   90....       MOV     DPTR,#(TransmitApp_Msg + 5)
   \   000079   F0           MOVX    @DPTR,A
    125            TransmitApp_Msg[6] = (val / 100) + '0';
   \   00007A   EC           MOV     A,R4
   \   00007B   F8           MOV     R0,A
   \   00007C   ED           MOV     A,R5
   \   00007D   F9           MOV     R1,A
   \   00007E   7A64         MOV     R2,#0x64
   \   000080   7B00         MOV     R3,#0x0
   \   000082   12....       LCALL   ?US_DIV_MOD
   \   000085   E8           MOV     A,R0
   \   000086   2430         ADD     A,#0x30
   \   000088   90....       MOV     DPTR,#(TransmitApp_Msg + 6)
   \   00008B   12....       LCALL   ?Subroutine0 & 0xFFFF
    126            TransmitApp_Msg[7] = ((val / 10) % 10) + '0';
   \                     ??CrossCallReturnLabel_0:
   \   00008E   12....       LCALL   ?US_DIV_MOD
   \   000091   7A0A         MOV     R2,#0xa
   \   000093   7B00         MOV     R3,#0x0
   \   000095   12....       LCALL   ?US_DIV_MOD
   \   000098   EA           MOV     A,R2
   \   000099   2430         ADD     A,#0x30
   \   00009B   90....       MOV     DPTR,#(TransmitApp_Msg + 7)
   \   00009E   F0           MOVX    @DPTR,A
    127            TransmitApp_Msg[8] = '.';
   \   00009F   742E         MOV     A,#0x2e
   \   0000A1   90....       MOV     DPTR,#(TransmitApp_Msg + 8)
   \   0000A4   12....       LCALL   ?Subroutine0 & 0xFFFF
    128            TransmitApp_Msg[9] = (val % 10) + '0';
   \                     ??CrossCallReturnLabel_1:
   \   0000A7   12....       LCALL   ?US_DIV_MOD
   \   0000AA   EA           MOV     A,R2
   \   0000AB   2430         ADD     A,#0x30
   \   0000AD   90....       MOV     DPTR,#(TransmitApp_Msg + 9)
   \   0000B0   F0           MOVX    @DPTR,A
    129               
    130            uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, 
    131                                          ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC, 
    132                                          TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, 10, 
    133                                          TransmitApp_Msg );   
   \   0000B1                ; Setup parameters for call to function zcl_SendCommand
   \   0000B1   75....       MOV     ?V0 + 0,#(TransmitApp_Msg & 0xff)
   \   0000B4   75....       MOV     ?V0 + 1,#((TransmitApp_Msg >> 8) & 0xff)
   \   0000B7   78..         MOV     R0,#?V0 + 0
   \   0000B9   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000BC   75..0A       MOV     ?V0 + 0,#0xa
   \   0000BF   75..00       MOV     ?V0 + 1,#0x0
   \   0000C2   78..         MOV     R0,#?V0 + 0
   \   0000C4   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000C7   75..00       MOV     ?V0 + 0,#0x0
   \   0000CA   78..         MOV     R0,#?V0 + 0
   \   0000CC   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000CF   78..         MOV     R0,#?V0 + 0
   \   0000D1   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000D4   78..         MOV     R0,#?V0 + 0
   \   0000D6   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000D9   78..         MOV     R0,#?V0 + 0
   \   0000DB   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000DE   75..01       MOV     ?V0 + 0,#0x1
   \   0000E1   78..         MOV     R0,#?V0 + 0
   \   0000E3   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000E6   75..00       MOV     ?V0 + 0,#0x0
   \   0000E9   78..         MOV     R0,#?V0 + 0
   \   0000EB   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000EE   7C06         MOV     R4,#0x6
   \   0000F0   7D00         MOV     R5,#0x0
   \   0000F2   7A..         MOV     R2,#(zclZigbeeDevice_DstAddr & 0xff)
   \   0000F4   7B..         MOV     R3,#((zclZigbeeDevice_DstAddr >> 8) & 0xff)
   \   0000F6   790C         MOV     R1,#0xc
   \   0000F8   12....       LCALL   ??zcl_SendCommand?relay
   \   0000FB   740B         MOV     A,#0xb
   \   0000FD   12....       LCALL   ?DEALLOC_XSTACK8
    134          }
   \   000100   7F02         MOV     R7,#0x2
   \   000102   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   EC           MOV     A,R4
   \   000002   F8           MOV     R0,A
   \   000003   ED           MOV     A,R5
   \   000004   F9           MOV     R1,A
   \   000005   7A0A         MOV     R2,#0xa
   \   000007   7B00         MOV     R3,#0x0
   \   000009   22           RET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??sleep?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    sleep

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??M140_SensorFunction?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    M140_SensorFunction
    135          #endif
    136          
    137          #if defined(M160)
    138          void M160_SensorFunction(void)
    139          {
    140            uint8 duty_M160 = 50;
    141          
    142            M160_Init();
    143            M160_On(duty_M160);
    144            /*
    145            if (ch > 0)
    146            {           
    147              if (ch == 'U')
    148              {
    149                if (duty_M160 < 100)
    150                {
    151                  duty_M160 = duty_M160 + 5;
    152                }
    153              }
    154              
    155              if (ch == 'N')
    156              {
    157                if (duty_M160 > 0)
    158                {
    159                  duty_M160 = duty_M160 - 5;
    160                }
    161              }
    162                
    163              M160_On(duty_M160);
    164            }
    165            */
    166            TransmitApp_Msg[0] = 1 + '0';  
    167            TransmitApp_Msg[1] = 6 + '0';   
    168            TransmitApp_Msg[2] = 0 + '0';        
    169            TransmitApp_Msg[3] = ',';
    170            TransmitApp_Msg[4] = 'A';   
    171            TransmitApp_Msg[5] = ',';  
    172            TransmitApp_Msg[6] = (duty / 100) + '0';
    173            TransmitApp_Msg[7] = ((duty / 10) % 10) + '0';
    174            TransmitApp_Msg[8] = (duty % 10) + '0';
    175           
    176            uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, 
    177                                           ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC, 
    178                                           TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, 9, 
    179                                           TransmitApp_Msg ); 
    180          }
    181          #endif 
    182          
    183          #if defined(M170)
    184          void M170_SensorFunction(void)
    185          {
    186              uint16 val;
    187               
    188              M170_Init();
    189            
    190              val = M170_GetValue();  
    191              if (val > 2000)
    192              {
    193                  val -= 2000;
    194              }
    195              else
    196              {
    197                  val = 0;
    198              }
    199              val /= 120;
    200                      
    201              if (val > 100)
    202              {
    203                  val = 100;
    204              }
    205             
    206              TransmitApp_Msg[0] = 1 + '0';  
    207              TransmitApp_Msg[1] = 7 + '0';   
    208              TransmitApp_Msg[2] = 0 + '0';        
    209              TransmitApp_Msg[3] = ',';
    210              TransmitApp_Msg[4] = 'A';   
    211              TransmitApp_Msg[5] = ',';  
    212              TransmitApp_Msg[6] = (val / 100) + '0';
    213              TransmitApp_Msg[7] = ((val / 10) % 10) + '0';
    214              TransmitApp_Msg[8] = (val % 10) + '0';
    215          
    216              uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, 
    217                                           ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC,
    218                                           TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, 9, 
    219                                           TransmitApp_Msg );
    220           }
    221          #endif
    222           
    223          #if defined(M190)
    224          void M190_SensorFunction(void)
    225          {
    226              uint16 val;
    227          
    228              M190_Init();
    229              val = M190_GetValue();  
    230          
    231              if (val > 2000)
    232              {
    233                  val -= 2000;
    234              }
    235              else
    236              {
    237                  val = 0;
    238              }
    239              val /= 120;
    240                      
    241              if (val > 100)
    242              {
    243                  val = 100;
    244              }
    245              
    246              TransmitApp_Msg[0] = 1 + '0';  
    247              TransmitApp_Msg[1] = 9 + '0';   
    248              TransmitApp_Msg[2] = 0 + '0';        
    249              TransmitApp_Msg[3] = ',';
    250              TransmitApp_Msg[4] = 'A';   
    251              TransmitApp_Msg[5] = ',';  
    252              TransmitApp_Msg[6] = (val / 100) + '0';
    253              TransmitApp_Msg[7] = ((val / 10) % 10) + '0';
    254              TransmitApp_Msg[8] = (val % 10) + '0';
    255             
    256              uint8 temp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, 
    257                                           ZCL_CLUSTER_ID_GEN_ON_OFF, ZCL_CLUSTER_ID_GEN_BASIC,
    258                                           TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, 9, 
    259                                           TransmitApp_Msg );
    260          }
    261          #endif
    262           
    263          #if defined(M200)
    264          void M200_SensorFunction(void)
    265           {
    266              // M200 module variable
    267              uint16 temp, humi;
    268                
    269              // initilization the device
    270              M200_Init();
    271            
    272              M200_GetValue();
    273              temp = (uint16)(((((float)M200_Temp) *0.01) - 40.0) *10.0);
    274              humi = (uint16)(((((float)M200_Humi) *0.0405) - (((float)M200_Humi)*((float)M200_Humi) *0.0000028) - 4.0) *10.0);
    275              if (humi > 999)
    276              {
    277                humi = 999;
    278              }
    279              if (temp > 999)
    280              {
    281                temp = 999;
    282              }
    283              
    284              TransmitApp_Msg[0] = (humi / 100) + '0';
    285              TransmitApp_Msg[1] = ((humi / 10) % 10) + '0';
    286              TransmitApp_Msg[2] = '.';
    287              TransmitApp_Msg[3] = (humi % 10) + '0';
    288              TransmitApp_Msg[4] = ' ';
    289              TransmitApp_Msg[5] = (temp / 100) + '0';
    290              TransmitApp_Msg[6] = ((temp / 10) % 10) + '0';
    291              TransmitApp_Msg[7] = '.';
    292              TransmitApp_Msg[8] = (temp % 10) + '0';
    293              
    294              uint8 tmp = zcl_SendCommand( ZIGBEEDEVICE_ENDPOINT, &zclZigbeeDevice_DstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF, 
    295                                           ZCL_CLUSTER_ID_GEN_BASIC, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR, false, 0, 0, 9, TransmitApp_Msg );
    296           }
    297          #endif
    298           
    299          #if defined(M270)
    300          
    301          void M270_SensorFunction(void)
    302          {
    303              static uint8 udo;
    304          
    305              M270_Init();
    306              
    307              if( ch == 'A' )
    308              {
    309                  udo = 1;
    310                  M270_SetDO(udo);
    311              }
    312               
    313              if( ch == 'D' )
    314              {
    315                  udo = 0;
    316                  M270_SetDO(udo);
    317              }
    318          }
    319          #endif

   Maximum stack usage in bytes:

     Function             ISTACK PSTACK XSTACK
     --------             ------ ------ ------
     M140_SensorFunction      0      0     21
       -> M140_Init           0      0     20
       -> M140_GetValue       0      0     20
       -> zcl_SendCommand     0      0     42
     sleep                    0      0      0


   Segment part sizes:

     Function/Label              Bytes
     --------------              -----
     TransmitApp_Msg              102
     sleep                         64
     M140_SensorFunction          261
     ?Subroutine0                  10
     ??sleep?relay                  6
     ??M140_SensorFunction?relay    6

 
 335 bytes in segment BANKED_CODE
  12 bytes in segment BANK_RELAYS
 102 bytes in segment XDATA_Z
 
 347 bytes of CODE  memory
 102 bytes of XDATA memory

Errors: none
Warnings: none
