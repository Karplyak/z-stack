///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V7.51A/W32 for 8051               29/Nov/2010  15:58:29 /
// Copyright 2004-2009 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  C:\Documents and Settings\Darren\桌面\ZIGBEE      /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Components\stack\nwk\nwk_globa /
//                          ls.c                                              /
//    Command line       =  -f "C:\Documents and Settings\Darren\桌面\ZIGBEE  /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\Tools\CC2530DB\f8w /
//                          Coord.cfg" (-DCPU32MHZ -DROOT=__near_func         /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                  /
//                          -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f      /
//                          "C:\Documents and Settings\Darren\桌面\ZIGBEE     /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\Tools\CC2530DB\f8w /
//                          Config.cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0     /
//                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800         /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=TRUE -DPOLL_RATE=1000        /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100   /
//                          -DREJOIN_POLL_RATE=440) -f "C:\Documents and      /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\Tools\CC2530DB\f8w /
//                          ZCL.cfg" (-DZCL_READ -DZCL_WRITE -DZCL_BASIC      /
//                          -DZCL_IDENTIFY -DZCL_ON_OFF -DZCL_KEY_ESTABLISH   /
//                          -DZCL_LOAD_CONTROL -DZCL_SIMPLE_METERING          /
//                          -DZCL_PRICING) -DZCL_MESSAGE "C:\Documents and    /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Components\stack\nwk\nwk_globa /
//                          ls.c" -D CC2530 -D ZTOOL_P1 -D MT_TASK -D         /
//                          MT_APP_FUNC -D MT_SYS_FUNC -D MT_ZDO_FUNC -D      /
//                          xLCD_SUPPORTED=DEBUG -lC "C:\Documents and        /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\CoordinatorBB\List\" -lA    /
//                          "C:\Documents and Settings\Darren\桌面\ZIGBEE     /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\CoordinatorBB\List\"        /
//                          --diag_suppress Pe001,Pa010 -o "C:\Documents and  /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\CoordinatorBB\Obj\" -e      /
//                          --require_prototypes --debug --core=plain         /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I "C:\Documents and         /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\" -I "C:\Documents and      /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\SOURCE\" -I              /
//                          "C:\Documents and Settings\Darren\桌面\ZIGBEE     /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\SOURCE\" -I           /
//                          "C:\Documents and Settings\Darren\桌面\ZIGBEE     /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\ZMAIN\TI2530DB\"   /
//                          -I "C:\Documents and Settings\Darren\桌面\ZIGBEE  /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\M /
//                          T\" -I "C:\Documents and                          /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\H /
//                          AL\INCLUDE\" -I "C:\Documents and                 /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\H /
//                          AL\TARGET\CC2530EB\" -I "C:\Documents and         /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\O /
//                          SAL\MCU\CCSOC\" -I "C:\Documents and              /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\O /
//                          SAL\INCLUDE\" -I "C:\Documents and                /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\S /
//                          TACK\AF\" -I "C:\Documents and                    /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\S /
//                          TACK\NWK\" -I "C:\Documents and                   /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\S /
//                          TACK\SEC\" -I "C:\Documents and                   /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\S /
//                          TACK\SAPI\" -I "C:\Documents and                  /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\S /
//                          TACK\SYS\" -I "C:\Documents and                   /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\S /
//                          TACK\ZCL\" -I "C:\Documents and                   /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\S /
//                          TACK\ZDO\" -I "C:\Documents and                   /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\Z /
//                          MAC\F8W\" -I "C:\Documents and                    /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\Z /
//                          MAC\" -I "C:\Documents and                        /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\S /
//                          ERVICES\SADDR\" -I "C:\Documents and              /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\S /
//                          ERVICES\SDATA\" -I "C:\Documents and              /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\M /
//                          AC\INCLUDE\" -I "C:\Documents and                 /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\M /
//                          AC\HIGH_LEVEL\" -I "C:\Documents and              /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\M /
//                          AC\LOW_LEVEL\srf04\" -I "C:\Documents and         /
//                          Settings\Darren\桌面\ZIGBEE                       /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\..\..\..\..\..\COMPONENTS\M /
//                          AC\LOW_LEVEL\srf04\SINGLE_CHIP\" -I "C:\IAR       /
//                          Systems\Embedded Workbench for MCS-51             /
//                          V7.51\8051\INC\" -I "C:\IAR Systems\Embedded      /
//                          Workbench for MCS-51 V7.51\8051\INC\CLIB\" -Ohz   /
//    List file          =  C:\Documents and Settings\Darren\桌面\ZIGBEE      /
//                          教學模組_出貨光碟\ZIGBEE                          /
//                          Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack- /
//                          CC2530-2.3.0-1.4.0\Projects\zstack\HomeAutomation /
//                          \SampleLight\CC2530DB\CoordinatorBB\List\nwk_glob /
//                          als.s51                                           /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME nwk_globals

        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC ??NIB_init?relay
        FUNCTION ??NIB_init?relay,0203H
        PUBLIC ??nwk_Status?relay
        FUNCTION ??nwk_Status?relay,0203H
        PUBLIC ??nwk_globals_init?relay
        FUNCTION ??nwk_globals_init?relay,0203H
        PUBLIC AssociatedDevList
        PUBLIC BindingTable
        PUBLIC Cskip
        PUBLIC CskipChldrn
        PUBLIC CskipRtrs
        PUBLIC NIB_init
        FUNCTION NIB_init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBWEAK WDCTL
        PUBLIC bcastHoldAckMask
        PUBLIC bcastHoldHandle
        PUBLIC bcastTable
        PUBLIC defaultKey
        PUBLIC defaultTCLinkKey
        PUBLIC gAPS_MAX_GROUPS
        PUBLIC gBIND_REC_SIZE
        PUBLIC gMAX_BCAST
        PUBLIC gMAX_BINDING_CLUSTER_IDS
        PUBLIC gMAX_BROADCAST_QUEUED
        PUBLIC gMAX_NEIGHBOR_ENTRIES
        PUBLIC gMAX_RREQ_ENTRIES
        PUBLIC gMAX_RTG_ENTRIES
        PUBLIC gMAX_RTG_SRC_ENTRIES
        PUBLIC gMAX_SOURCE_ROUTE
        PUBLIC gMIN_TREE_LINK_COST
        PUBLIC gNWK_FREQ_AGILITY_ALL_MAC_ERRS
        PUBLIC gNWK_INDIRECT_CNT_RTG_TMR
        PUBLIC gNWK_INDIRECT_MSG_MAX_ALL
        PUBLIC gNWK_INDIRECT_MSG_MAX_PER
        PUBLIC gNWK_MAX_BINDING_ENTRIES
        PUBLIC gNWK_MAX_DATABUFS_CONFIRMED
        PUBLIC gNWK_MAX_DATABUFS_SCHEDULED
        PUBLIC gNWK_MAX_DATABUFS_TOTAL
        PUBLIC gNWK_MAX_DATABUFS_WAITING
        PUBLIC gNWK_MAX_DEVICE_LIST
        PUBLIC gNWK_MAX_SLEEPING_END_DEVICES
        PUBLIC gNWK_TREE_ALLOCATE_ROUTERADDR_FOR_ENDDEVICE
        PUBLIC neighborTable
        PUBLIC nwk_Status
        FUNCTION nwk_Status,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC nwk_globals_init
        FUNCTION nwk_globals_init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 2, STACK
        PUBLIC rtDiscTable
        PUBLIC rtgTable
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
AddrMgrInit         SYMBOL "AddrMgrInit"
osal_mem_alloc      SYMBOL "osal_mem_alloc"
RTG_FillCSkipTable  SYMBOL "RTG_FillCSkipTable"
NwkFreqAgilityInit  SYMBOL "NwkFreqAgilityInit"
osal_rand           SYMBOL "osal_rand"
osal_memset         SYMBOL "osal_memset"
sAddrExtCpy         SYMBOL "sAddrExtCpy"
NLME_InitTreeAddressing SYMBOL "NLME_InitTreeAddressing"
halMcuWaitMs        SYMBOL "halMcuWaitMs"
??AddrMgrInit?relay SYMBOL "?relay", AddrMgrInit
??NLME_InitTreeAddressing?relay SYMBOL "?relay", NLME_InitTreeAddressing
??NwkFreqAgilityInit?relay SYMBOL "?relay", NwkFreqAgilityInit
??RTG_FillCSkipTable?relay SYMBOL "?relay", RTG_FillCSkipTable
??halMcuWaitMs?relay SYMBOL "?relay", halMcuWaitMs
??osal_mem_alloc?relay SYMBOL "?relay", osal_mem_alloc
??osal_memset?relay SYMBOL "?relay", osal_memset
??osal_rand?relay   SYMBOL "?relay", osal_rand
??sAddrExtCpy?relay SYMBOL "?relay", sAddrExtCpy
NIB_init            SYMBOL "NIB_init"
??NIB_init?relay    SYMBOL "?relay", NIB_init
nwk_Status          SYMBOL "nwk_Status"
??nwk_Status?relay  SYMBOL "?relay", nwk_Status
nwk_globals_init    SYMBOL "nwk_globals_init"
??nwk_globals_init?relay SYMBOL "?relay", nwk_globals_init

        EXTERN AddrMgrInit
        FUNCTION AddrMgrInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN RTG_FillCSkipTable
        FUNCTION RTG_FillCSkipTable,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 2, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NwkFreqAgilityInit
        FUNCTION NwkFreqAgilityInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_rand
        FUNCTION osal_rand,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCpy
        FUNCTION sAddrExtCpy,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_InitTreeAddressing
        FUNCTION NLME_InitTreeAddressing,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN halMcuWaitMs
        FUNCTION halMcuWaitMs,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??AddrMgrInit?relay
        FUNCTION ??AddrMgrInit?relay,00H
        EXTERN ??NLME_InitTreeAddressing?relay
        FUNCTION ??NLME_InitTreeAddressing?relay,00H
        EXTERN ??NwkFreqAgilityInit?relay
        FUNCTION ??NwkFreqAgilityInit?relay,00H
        EXTERN ??RTG_FillCSkipTable?relay
        FUNCTION ??RTG_FillCSkipTable?relay,00H
        EXTERN ??halMcuWaitMs?relay
        FUNCTION ??halMcuWaitMs?relay,00H
        EXTERN ??osal_mem_alloc?relay
        FUNCTION ??osal_mem_alloc?relay,00H
        EXTERN ??osal_memset?relay
        FUNCTION ??osal_memset?relay,00H
        EXTERN ??osal_rand?relay
        FUNCTION ??osal_rand?relay,00H
        EXTERN ??sAddrExtCpy?relay
        FUNCTION ??sAddrExtCpy?relay,00H
        EXTERN ZDO_Config_Node_Descriptor
        EXTERN _NIB
        EXTERN zgBcastDeliveryTime
        EXTERN zgConcentratorDiscoveryTime
        EXTERN zgConcentratorEnable
        EXTERN zgConcentratorRadius
        EXTERN zgExtendedPANID
        EXTERN zgIndirectMsgTimeout
        EXTERN zgMaxBcastRetires
        EXTERN zgPassiveAckTimeout
        EXTERN zgRouteExpiryTime

// C:\Documents and Settings\Darren\桌面\ZIGBEE 教學模組_出貨光碟\ZIGBEE Example\CC2530_ZStack\教學模組_Z-Stack_Ex\ZStack-CC2530-2.3.0-1.4.0\Components\stack\nwk\nwk_globals.c
//    1 /**************************************************************************************************
//    2   Filename:       nwk_globals.c
//    3   Revised:        $Date: 2010-01-11 09:24:44 -0800 (Mon, 11 Jan 2010) $
//    4   Revision:       $Revision: 21474 $
//    5 
//    6   Description:    User definable Network Parameters.
//    7 
//    8   Copyright 2004-2009 Texas Instruments Incorporated. All rights reserved.
//    9 
//   10   Should you have any questions regarding your right to use this Software,
//   11   contact Texas Instruments Incorporated at www.TI.com. 
//   12 **************************************************************************************************/
//   13 
//   14 /*********************************************************************
//   15  * INCLUDES
//   16  */
//   17 #include "ZComdef.h"
//   18 #include "OSAL.h"
//   19 #include "AddrMgr.h"
//   20 #include "AssocList.h"
//   21 #include "BindingTable.h"
//   22 
//   23 /* NWK */
//   24 #include "nwk_util.h"
//   25 #include "nwk_globals.h"
//   26 #include "APS.h"
//   27 
//   28 /* Security */
//   29 #include "ssp.h"
//   30 
//   31 /* ZDO */
//   32 #include "rtg.h"
//   33 #include "ZDConfig.h"
//   34 #include "ZGlobals.h"
//   35 
//   36 /* ZMain */
//   37 #include "OnBoard.h"

        ASEGN SFR_AN:DATA:NOROOT,0c9H
// unsigned char volatile __sfr WDCTL
WDCTL:
        DS 1
//   38 
//   39 /* HAL */
//   40 #include "hal_lcd.h"
//   41 #include "hal_timer.h"
//   42 
//   43 /*********************************************************************
//   44  * MACROS
//   45  */
//   46 
//   47 /*********************************************************************
//   48  * CONSTANTS
//   49  */
//   50 
//   51 // Maximums for the data buffer queue
//   52 #define NWK_MAX_DATABUFS_WAITING    8     // Waiting to be sent to MAC
//   53 #define NWK_MAX_DATABUFS_SCHEDULED  5     // Timed messages to be sent
//   54 #define NWK_MAX_DATABUFS_CONFIRMED  5     // Held after MAC confirms
//   55 #define NWK_MAX_DATABUFS_TOTAL      12    // Total number of buffers
//   56 
//   57 // 1-255 (0 -> 256) X RTG_TIMER_INTERVAL
//   58 // A known shortcoming is that when a message is enqueued as "hold" for a
//   59 // sleeping device, the timer tick may have counted down to 1, so that msg
//   60 // will not be held as long as expected. If NWK_INDIRECT_MSG_TIMEOUT is set to 1
//   61 // the hold time will vary randomly from 0 - CNT_RTG_TIMER ticks.
//   62 // So the hold time will vary within this interval:
//   63 // { (NWK_INDIRECT_MSG_TIMEOUT-1)*CNT_RTG_TIMER,
//   64 //                                    NWK_INDIRECT_MSG_TIMEOUT*CNT_RTG_TIMER }
//   65 #define NWK_INDIRECT_CNT_RTG_TMR    1
//   66 // To hold msg for sleeping end devices for 30 secs:
//   67 // #define CNT_RTG_TIMER            1
//   68 // #define NWK_INDIRECT_MSG_TIMEOUT 30
//   69 // To hold msg for sleeping end devices for 30 mins:
//   70 // #define CNT_RTG_TIMER            60
//   71 // #define NWK_INDIRECT_MSG_TIMEOUT 30
//   72 // To hold msg for sleeping end devices for 30 days:
//   73 // #define CNT_RTG_TIMER            60
//   74 // #define NWK_INDIRECT_MSG_TIMEOUT (30 * 24 * 60)
//   75 // Maximum msgs to hold per associated device.
//   76 #define NWK_INDIRECT_MSG_MAX_PER    3
//   77 // Maximum total msgs to hold for all associated devices.
//   78 #define NWK_INDIRECT_MSG_MAX_ALL    \ 
//   79                             (NWK_MAX_DATABUFS_TOTAL - NWK_INDIRECT_MSG_MAX_PER)
//   80 
//   81 /*********************************************************************
//   82  * TYPEDEFS
//   83  */
//   84 
//   85 /*********************************************************************
//   86  * NWK GLOBAL VARIABLES
//   87  */
//   88 
//   89 // Variables for MAX list size

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//   90 CONST uint16 gNWK_MAX_DEVICE_LIST = NWK_MAX_DEVICES;
gNWK_MAX_DEVICE_LIST:
        DW 21
//   91 
//   92 // Variables for MAX Sleeping End Devices

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//   93 CONST uint8 gNWK_MAX_SLEEPING_END_DEVICES = NWK_MAX_DEVICES - NWK_MAX_ROUTERS;
gNWK_MAX_SLEEPING_END_DEVICES:
        DB 15
//   94 
//   95 // Variables for MAX data buffer levels

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//   96 CONST uint8 gNWK_MAX_DATABUFS_WAITING = NWK_MAX_DATABUFS_WAITING;
gNWK_MAX_DATABUFS_WAITING:
        DB 8

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//   97 CONST uint8 gNWK_MAX_DATABUFS_SCHEDULED = NWK_MAX_DATABUFS_SCHEDULED;
gNWK_MAX_DATABUFS_SCHEDULED:
        DB 5

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//   98 CONST uint8 gNWK_MAX_DATABUFS_CONFIRMED = NWK_MAX_DATABUFS_CONFIRMED;
gNWK_MAX_DATABUFS_CONFIRMED:
        DB 5

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//   99 CONST uint8 gNWK_MAX_DATABUFS_TOTAL = NWK_MAX_DATABUFS_TOTAL;
gNWK_MAX_DATABUFS_TOTAL:
        DB 12
//  100 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//  101 CONST uint8 gNWK_INDIRECT_CNT_RTG_TMR = NWK_INDIRECT_CNT_RTG_TMR;
gNWK_INDIRECT_CNT_RTG_TMR:
        DB 1

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//  102 CONST uint8 gNWK_INDIRECT_MSG_MAX_PER = NWK_INDIRECT_MSG_MAX_PER;
gNWK_INDIRECT_MSG_MAX_PER:
        DB 3

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//  103 CONST uint8 gNWK_INDIRECT_MSG_MAX_ALL = NWK_INDIRECT_MSG_MAX_ALL;
gNWK_INDIRECT_MSG_MAX_ALL:
        DB 9
//  104 
//  105 // change this if using a different stack profile...
//  106 // Cskip array

        RSEG XDATA_Z:XDATA:NOROOT(0)
//  107 uint16 *Cskip;
Cskip:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  108 
//  109 #if ( STACK_PROFILE_ID == ZIGBEEPRO_PROFILE )
//  110   uint8 CskipRtrs[1] = {0};
//  111   uint8 CskipChldrn[1] = {0};
//  112 #elif ( STACK_PROFILE_ID == HOME_CONTROLS )

        RSEG XDATA_I:XDATA:NOROOT(0)
        DATA
//  113   uint8 CskipRtrs[MAX_NODE_DEPTH+1] = {6,6,6,6,6,0};
CskipRtrs:
        DS 6
        REQUIRE `?<Initializer for CskipRtrs>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
        DATA
//  114   uint8 CskipChldrn[MAX_NODE_DEPTH+1] = {20,20,20,20,20,0};
CskipChldrn:
        DS 6
        REQUIRE `?<Initializer for CskipChldrn>`
        REQUIRE __INIT_XDATA_I
//  115 #elif ( STACK_PROFILE_ID == GENERIC_STAR )
//  116   uint8 CskipRtrs[MAX_NODE_DEPTH+1] = {5,5,5,5,5,0};
//  117   uint8 CskipChldrn[MAX_NODE_DEPTH+1] = {5,5,5,5,5,0};
//  118 #elif ( STACK_PROFILE_ID == NETWORK_SPECIFIC )
//  119   uint8 CskipRtrs[MAX_NODE_DEPTH+1] = {5,5,5,5,5,0};
//  120   uint8 CskipChldrn[MAX_NODE_DEPTH+1] = {5,5,5,5,5,0};
//  121 #endif // STACK_PROFILE_ID
//  122 
//  123 // Minimum lqi value that is required for association

        RSEG XDATA_I:XDATA:NOROOT(0)
        DATA
//  124 uint8 gMIN_TREE_LINK_COST = MIN_LQI_COST_3;
gMIN_TREE_LINK_COST:
        DS 1
        REQUIRE `?<Initializer for gMIN_TREE_LINK_COST>`
        REQUIRE __INIT_XDATA_I
//  125 
//  126 // Statically defined Associated Device List

        RSEG XDATA_Z:XDATA:NOROOT(0)
//  127 associated_devices_t AssociatedDevList[NWK_MAX_DEVICES];
AssociatedDevList:
        DS 378
        REQUIRE __INIT_XDATA_Z
//  128 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//  129 CONST uint8 gMAX_RTG_ENTRIES = MAX_RTG_ENTRIES;
gMAX_RTG_ENTRIES:
        DB 40

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//  130 CONST uint8 gMAX_RTG_SRC_ENTRIES = MAX_RTG_SRC_ENTRIES;
gMAX_RTG_SRC_ENTRIES:
        DB 12

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//  131 CONST uint8 gMAX_RREQ_ENTRIES = MAX_RREQ_ENTRIES;
gMAX_RREQ_ENTRIES:
        DB 8
//  132 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//  133 CONST uint8 gMAX_NEIGHBOR_ENTRIES = MAX_NEIGHBOR_ENTRIES;
gMAX_NEIGHBOR_ENTRIES:
        DB 16
//  134 
//  135  // Table of neighboring nodes (not including child nodes)

        RSEG XDATA_Z:XDATA:NOROOT(0)
//  136 neighborEntry_t neighborTable[MAX_NEIGHBOR_ENTRIES];
neighborTable:
        DS 368
        REQUIRE __INIT_XDATA_Z
//  137 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//  138 CONST uint8 gMAX_SOURCE_ROUTE = MAX_SOURCE_ROUTE;
gMAX_SOURCE_ROUTE:
        DB 12
//  139 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//  140 CONST uint8 gMAX_BROADCAST_QUEUED = MAX_BROADCAST_QUEUED;
gMAX_BROADCAST_QUEUED:
        DB 10
//  141 
//  142 // Routing table

        RSEG XDATA_Z:XDATA:NOROOT(0)
//  143 rtgEntry_t rtgTable[MAX_RTG_ENTRIES];
rtgTable:
        DS 280
        REQUIRE __INIT_XDATA_Z
//  144 
//  145 #if defined ( ZIGBEE_SOURCE_ROUTING )
//  146   rtgSrcEntry_t rtgSrcTable[MAX_RTG_SRC_ENTRIES];
//  147   uint16 rtgSrcRelayList[MAX_SOURCE_ROUTE];
//  148 #endif
//  149 
//  150 // Table of current RREQ packets in the network

        RSEG XDATA_Z:XDATA:NOROOT(0)
//  151 rtDiscEntry_t rtDiscTable[MAX_RREQ_ENTRIES];
rtDiscTable:
        DS 64
        REQUIRE __INIT_XDATA_Z
//  152 
//  153 // Table of data broadcast packets currently in circulation.

        RSEG XDATA_Z:XDATA:NOROOT(0)
//  154 bcastEntry_t bcastTable[MAX_BCAST];
bcastTable:
        DS 72
        REQUIRE __INIT_XDATA_Z
//  155 
//  156 // These 2 arrays are to be used as an array of struct { uint8, uint32 }.

        RSEG XDATA_Z:XDATA:NOROOT(0)
//  157 uint8 bcastHoldHandle[MAX_BCAST];
bcastHoldHandle:
        DS 9
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
//  158 uint32 bcastHoldAckMask[MAX_BCAST];
bcastHoldAckMask:
        DS 36
        REQUIRE __INIT_XDATA_Z
//  159 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//  160 CONST uint8 gMAX_BCAST = MAX_BCAST;
gMAX_BCAST:
        DB 9
//  161 
//  162 // For tree addressing, this switch allows the allocation of a 
//  163 // router address to an end device when end device address are 
//  164 // all used up.  If this option is enabled, address space
//  165 // could be limited.

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//  166 CONST uint8 gNWK_TREE_ALLOCATE_ROUTERADDR_FOR_ENDDEVICE = FALSE;
gNWK_TREE_ALLOCATE_ROUTERADDR_FOR_ENDDEVICE:
        DB 0
//  167 
//  168 #if defined ( ZIGBEE_STOCHASTIC_ADDRESSING )
//  169 // number of link status periods after the last received address conflict report
//  170 // (network status command)
//  171 CONST uint8 gNWK_CONFLICTED_ADDR_EXPIRY_TIME = NWK_CONFLICTED_ADDR_EXPIRY_TIME;
//  172 #endif
//  173 
//  174 #if defined ( ZIGBEE_FREQ_AGILITY )

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//  175 CONST uint8 gNWK_FREQ_AGILITY_ALL_MAC_ERRS = NWK_FREQ_AGILITY_ALL_MAC_ERRS;
gNWK_FREQ_AGILITY_ALL_MAC_ERRS:
        DB 0
//  176 #endif
//  177   
//  178 /*********************************************************************
//  179  * APS GLOBAL VARIABLES
//  180  */
//  181 
//  182 // The Maximum number of binding records
//  183 // This number is defined in BindingTable.h - change it there.

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//  184 CONST uint16 gNWK_MAX_BINDING_ENTRIES = NWK_MAX_BINDING_ENTRIES;
gNWK_MAX_BINDING_ENTRIES:
        DW 4
//  185 
//  186 #if defined ( REFLECTOR )
//  187   // The Maximum number of cluster IDs in a binding record
//  188   // This number is defined in BindingTable.h - change it there.

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//  189   CONST uint8 gMAX_BINDING_CLUSTER_IDS = MAX_BINDING_CLUSTER_IDS;
gMAX_BINDING_CLUSTER_IDS:
        DB 4
//  190 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//  191   CONST uint16 gBIND_REC_SIZE = sizeof( BindingEntry_t );
gBIND_REC_SIZE:
        DW 14
//  192 
//  193   // Binding Table

        RSEG XDATA_Z:XDATA:NOROOT(0)
//  194   BindingEntry_t BindingTable[NWK_MAX_BINDING_ENTRIES];
BindingTable:
        DS 56
        REQUIRE __INIT_XDATA_Z
//  195 #endif
//  196 
//  197 // Maximum number allowed in the groups table.

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//  198 CONST uint8 gAPS_MAX_GROUPS = APS_MAX_GROUPS;
gAPS_MAX_GROUPS:
        DB 16
//  199 
//  200 // APS End Device Broadcast Table
//  201 #if ( ZG_BUILD_ENDDEVICE_TYPE )
//  202   apsEndDeviceBroadcast_t apsEndDeviceBroadcastTable[APS_MAX_ENDDEVICE_BROADCAST_ENTRIES];
//  203   uint8 gAPS_MAX_ENDDEVICE_BROADCAST_ENTRIES = APS_MAX_ENDDEVICE_BROADCAST_ENTRIES;
//  204 #endif
//  205 
//  206 /*********************************************************************
//  207  * SECURITY GLOBAL VARIABLES
//  208  */
//  209 
//  210 // This is the default pre-configured key,
//  211 // change this to make a unique key
//  212 // SEC_KEY_LEN is defined in ssp.h.

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//  213 CONST uint8 defaultKey[SEC_KEY_LEN] =
defaultKey:
        DB 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
//  214 {
//  215 #if defined ( APP_TP ) || defined ( APP_TP2 )
//  216   // Key for ZigBee Conformance Testing
//  217   0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb,
//  218   0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa
//  219 #else
//  220   // Key for In-House Testing
//  221   0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
//  222   0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F
//  223 #endif
//  224 };
//  225 
//  226 // This is the default pre-configured Trust Center Link key,
//  227 // change this to make a unique key, SEC_KEY_LEN is defined in ssp.h.

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
//  228 CONST uint8 defaultTCLinkKey[SEC_KEY_LEN] =
defaultTCLinkKey:
        DB 86, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119
        DB 119, 119
//  229 {
//  230   0x56, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77,
//  231   0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77
//  232 };
//  233 
//  234 /*********************************************************************
//  235  * STATUS STRINGS
//  236  */
//  237 #if defined ( LCD_SUPPORTED )
//  238   const char PingStr[]         = "Ping Rcvd from";
//  239   const char AssocCnfStr[]     = "Assoc Cnf";
//  240   const char SuccessStr[]      = "Success";
//  241   const char EndDeviceStr[]    = "EndDevice:";
//  242   const char ParentStr[]       = "Parent:";
//  243   const char ZigbeeCoordStr[]  = "ZigBee Coord";
//  244   const char NetworkIDStr[]    = "Network ID:";
//  245   const char RouterStr[]       = "Router:";
//  246   const char OrphanRspStr[]    = "Orphan Response";
//  247   const char SentStr[]         = "Sent";
//  248   const char FailedStr[]       = "Failed";
//  249   const char AssocRspFailStr[] = "Assoc Rsp fail";
//  250   const char AssocIndStr[]     = "Assoc Ind";
//  251   const char AssocCnfFailStr[] = "Assoc Cnf fail";
//  252   const char EnergyLevelStr[]  = "Energy Level";
//  253   const char ScanFailedStr[]   = "Scan Failed";
//  254 #endif
//  255 
//  256 /*********************************************************************
//  257  * @fn       nwk_globals_init()
//  258  * @brief    Initialize nwk layer globals.  These are the system defaults and
//  259  *           should be changed by the user here.  The default definitions are
//  260  *           defined in nwk.h or NLMEDE.h.
//  261  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  262 void nwk_globals_init( void )
nwk_globals_init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function nwk_globals_init
//  263 {
        FUNCALL nwk_globals_init, AddrMgrInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL nwk_globals_init, osal_mem_alloc
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL nwk_globals_init, RTG_FillCSkipTable
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 2, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 2, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL nwk_globals_init, NwkFreqAgilityInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  264   AddrMgrInit( NWK_MAX_ADDRESSES );
        ; Setup parameters for call to function AddrMgrInit
        MOV     R2,#0x1a
        MOV     R3,#0x0
        LCALL   ??AddrMgrInit?relay
//  265   
//  266 #if !defined ( ZIGBEE_STOCHASTIC_ADDRESSING )
//  267   if ( ZSTACK_ROUTER_BUILD )
//  268   {
//  269     // Initialize the Cskip Table
//  270     Cskip = osal_mem_alloc(sizeof(uint16) *(MAX_NODE_DEPTH+1));
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0xc
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     DPTR,#Cskip
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//  271     RTG_FillCSkipTable(CskipChldrn, CskipRtrs, MAX_NODE_DEPTH, Cskip);
        ; Setup parameters for call to function RTG_FillCSkipTable
        MOV     DPTR,#Cskip
        LCALL   ?PUSH_XSTACK8_X_TWO
        CFI CFA_XSP16 add(XSP16, 2)
        MOV     R1,#0x5
        MOV     R4,#(CskipRtrs & 0xff)
        MOV     R5,#((CskipRtrs >> 8) & 0xff)
        MOV     R2,#(CskipChldrn & 0xff)
        MOV     R3,#((CskipChldrn >> 8) & 0xff)
        LCALL   ??RTG_FillCSkipTable?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 XSP16+0
//  272   }
//  273 #endif
//  274   
//  275   // To compile out the Link Status Feature, set NWK_LINK_STATUS_PERIOD
//  276   // to 0 (compiler flag).
//  277   if ( ZSTACK_ROUTER_BUILD && NWK_LINK_STATUS_PERIOD )
//  278   {
//  279     NLME_InitLinkStatus();
//  280   }
//  281   
//  282 #if defined ( ZIGBEE_FREQ_AGILITY )
//  283   NwkFreqAgilityInit();
        ; Setup parameters for call to function NwkFreqAgilityInit
        LCALL   ??NwkFreqAgilityInit?relay
        CFI EndBlock cfiBlock0
//  284 #endif
//  285 }
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
        CFI CFA_SP SP+-4
        CFI DPH0 SameValue
        POP     DPL
        CFI CFA_SP SP+-3
        CFI DPL0 SameValue
        LJMP    ?BRET
        CFI EndBlock cfiBlock1
//  286 
//  287 /*********************************************************************
//  288  * @fn       NIB_init()
//  289  *
//  290  * @brief
//  291  *
//  292  *   Initialize attribute values in NIB
//  293  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  294 void NIB_init()
NIB_init:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function NIB_init
//  295 {
        FUNCALL NIB_init, osal_rand
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL NIB_init, osal_memset
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL NIB_init, sAddrExtCpy
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL NIB_init, NLME_InitTreeAddressing
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  296   _NIB.SequenceNum = LO_UINT16(osal_rand());
        ; Setup parameters for call to function osal_rand
        LCALL   ??osal_rand?relay
        MOV     A,R2
        MOV     DPTR,#_NIB
        MOVX    @DPTR,A
//  297 
//  298   _NIB.nwkProtocolVersion = ZB_PROT_VERS;
        MOV     A,#0x2
        MOV     DPTR,#(_NIB + 17)
        MOVX    @DPTR,A
//  299   _NIB.MaxDepth = MAX_NODE_DEPTH;
        MOV     A,#0x5
        MOV     DPTR,#(_NIB + 4)
        MOVX    @DPTR,A
//  300 
//  301 #if ( NWK_MODE == NWK_MODE_MESH )
//  302   _NIB.beaconOrder = BEACON_ORDER_NO_BEACONS;
        MOV     A,#0xf
        MOV     DPTR,#(_NIB + 40)
        MOVX    @DPTR,A
//  303   _NIB.superFrameOrder = BEACON_ORDER_NO_BEACONS;
        MOV     DPTR,#(_NIB + 41)
        MOVX    @DPTR,A
//  304 #endif
//  305 
//  306   // BROADCAST SETTINGS:
//  307   // ************************************************************************************************************
//  308   //   Broadcast Delivery Time - set to multiples of 100ms 
//  309   //                           - should be 500ms more than the retry time
//  310   //                           - "retry time" = PassiveAckTimeout * (MaxBroadcastRetries + 1) Passive Ack Timeout
//  311   //                           - set to multiples of 100ms 
//  312   //
//  313   _NIB.BroadcastDeliveryTime = zgBcastDeliveryTime;
        MOV     DPTR,#zgBcastDeliveryTime
        MOVX    A,@DPTR
        MOV     DPTR,#(_NIB + 7)
        MOVX    @DPTR,A
//  314   _NIB.PassiveAckTimeout     = zgPassiveAckTimeout;
        MOV     DPTR,#zgPassiveAckTimeout
        MOVX    A,@DPTR
        MOV     DPTR,#(_NIB + 1)
        MOVX    @DPTR,A
//  315   _NIB.MaxBroadcastRetries   = zgMaxBcastRetires;
        MOV     DPTR,#zgMaxBcastRetires
        MOVX    A,@DPTR
        MOV     DPTR,#(_NIB + 2)
        MOVX    @DPTR,A
//  316 
//  317   _NIB.ReportConstantCost = 0;
        CLR     A
        MOV     DPTR,#(_NIB + 8)
        MOVX    @DPTR,A
//  318   _NIB.RouteDiscRetries = 0;
        MOV     DPTR,#(_NIB + 9)
        MOVX    @DPTR,A
//  319   _NIB.SecureAllFrames = USE_NWK_SECURITY;
        MOV     DPTR,#(_NIB + 11)
        MOVX    @DPTR,A
//  320   _NIB.nwkAllFresh = NWK_ALL_FRESH;
        MOV     A,#0x1
        MOV     DPTR,#(_NIB + 104)
        MOVX    @DPTR,A
//  321    
//  322   if ( ZG_SECURE_ENABLED )
//  323   {
//  324     _NIB.SecurityLevel = SECURITY_LEVEL;
//  325   }
//  326   else
//  327   {
//  328     _NIB.SecurityLevel = 0;
        CLR     A
        MOV     DPTR,#(_NIB + 12)
        MOVX    @DPTR,A
//  329   }
//  330    
//  331 #if defined ( ZIGBEEPRO )
//  332   _NIB.SymLink = FALSE;
//  333 #else
//  334   _NIB.SymLink = TRUE;
        MOV     A,#0x1
        MOV     DPTR,#(_NIB + 13)
        MOVX    @DPTR,A
//  335 #endif  
//  336   
//  337   _NIB.CapabilityInfo = ZDO_Config_Node_Descriptor.CapabilityFlags;
        MOV     DPTR,#(ZDO_Config_Node_Descriptor + 2)
        MOVX    A,@DPTR
        MOV     DPTR,#(_NIB + 14)
        MOVX    @DPTR,A
//  338 
//  339   _NIB.TransactionPersistenceTime = zgIndirectMsgTimeout;
        MOV     DPTR,#zgIndirectMsgTimeout
        MOVX    A,@DPTR
        MOV     DPTR,#(_NIB + 15)
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//  340 
//  341   _NIB.RouteDiscoveryTime = 5;
        MOV     A,#0x5
        MOV     DPTR,#(_NIB + 18)
        MOVX    @DPTR,A
//  342   _NIB.RouteExpiryTime = zgRouteExpiryTime;
        MOV     DPTR,#zgRouteExpiryTime
        MOVX    A,@DPTR
        MOV     DPTR,#(_NIB + 19)
        MOVX    @DPTR,A
//  343 
//  344   _NIB.nwkDevAddress = INVALID_NODE_ADDR;
        MOV     DPTR,#(_NIB + 20)
        MOV     A,#-0x2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x1
        MOVX    @DPTR,A
//  345   _NIB.nwkLogicalChannel = 0;
        CLR     A
        MOV     DPTR,#(_NIB + 22)
        MOVX    @DPTR,A
//  346   _NIB.nwkCoordAddress = INVALID_NODE_ADDR;
        MOV     DPTR,#(_NIB + 23)
        MOV     A,#-0x2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x1
        MOVX    @DPTR,A
//  347   osal_memset( _NIB.nwkCoordExtAddress, 0, Z_EXTADDR_LEN );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     R2,#((_NIB + 25) & 0xff)
        MOV     R3,#(((_NIB + 25) >> 8) & 0xff)
        LCALL   ??osal_memset?relay
//  348   _NIB.nwkPanId = INVALID_NODE_ADDR;
        MOV     DPTR,#(_NIB + 33)
        MOV     A,#-0x2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x1
        MOVX    @DPTR,A
//  349 
//  350   osal_cpyExtAddr( _NIB.extendedPANID, zgExtendedPANID );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,#(zgExtendedPANID & 0xff)
        MOV     R5,#((zgExtendedPANID >> 8) & 0xff)
        MOV     R2,#((_NIB + 53) & 0xff)
        MOV     R3,#(((_NIB + 53) >> 8) & 0xff)
        LCALL   ??sAddrExtCpy?relay
//  351    
//  352   _NIB.nwkKeyLoaded = FALSE;
        CLR     A
        MOV     DPTR,#(_NIB + 61)
        MOVX    @DPTR,A
//  353    
//  354 #if defined ( ZIGBEE_STOCHASTIC_ADDRESSING )
//  355   _NIB.nwkAddrAlloc  = NWK_ADDRESSING_STOCHASTIC;
//  356   _NIB.nwkUniqueAddr = FALSE;
//  357 #else
//  358   _NIB.nwkAddrAlloc  = NWK_ADDRESSING_DISTRIBUTED;
        MOV     DPTR,#(_NIB + 96)
        MOVX    @DPTR,A
//  359   _NIB.nwkUniqueAddr = TRUE;
        MOV     A,#0x1
        MOV     DPTR,#(_NIB + 97)
        MOVX    @DPTR,A
//  360 #endif
//  361 
//  362   _NIB.nwkLinkStatusPeriod = NWK_LINK_STATUS_PERIOD; 
        CLR     A
        MOV     DPTR,#(_NIB + 98)
        MOVX    @DPTR,A
//  363   _NIB.nwkRouterAgeLimit = NWK_ROUTE_AGE_LIMIT;
        MOV     A,#0x3
        MOV     DPTR,#(_NIB + 99)
        MOVX    @DPTR,A
//  364  
//  365   //MTO and source routing
//  366   _NIB.nwkConcentratorDiscoveryTime = zgConcentratorDiscoveryTime;
        MOV     DPTR,#zgConcentratorDiscoveryTime
        MOVX    A,@DPTR
        MOV     DPTR,#(_NIB + 102)
        MOVX    @DPTR,A
//  367   _NIB.nwkIsConcentrator = zgConcentratorEnable;
        MOV     DPTR,#zgConcentratorEnable
        MOVX    A,@DPTR
        MOV     DPTR,#(_NIB + 101)
        MOVX    @DPTR,A
//  368   _NIB.nwkConcentratorRadius = zgConcentratorRadius;
        MOV     DPTR,#zgConcentratorRadius
        MOVX    A,@DPTR
        MOV     DPTR,#(_NIB + 103)
        MOVX    @DPTR,A
//  369   _NIB.nwkSrcRtgExpiryTime = SRC_RTG_EXPIRY_TIME;
        MOV     A,#0xa
        MOV     DPTR,#(_NIB + 105)
        MOVX    @DPTR,A
//  370 
//  371 #if defined ( ZIGBEE_MULTICAST )
//  372   _NIB.nwkUseMultiCast = TRUE;
//  373 #else
//  374   _NIB.nwkUseMultiCast = FALSE;
        CLR     A
        MOV     DPTR,#(_NIB + 100)
        MOVX    @DPTR,A
//  375 #endif  
//  376   _NIB.nwkManagerAddr = 0x0000;
        MOV     DPTR,#(_NIB + 106)
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  377   _NIB.nwkUpdateId = 0;
        MOV     DPTR,#(_NIB + 110)
        MOVX    @DPTR,A
//  378   _NIB.nwkTotalTransmissions = 0;
        MOV     DPTR,#(_NIB + 108)
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  379 
//  380   if ( ZSTACK_ROUTER_BUILD )
//  381   {
//  382 #if defined ( ZIGBEE_STOCHASTIC_ADDRESSING )
//  383     NLME_InitStochasticAddressing();
//  384 #else
//  385     NLME_InitTreeAddressing();
        ; Setup parameters for call to function NLME_InitTreeAddressing
        LCALL   ??NLME_InitTreeAddressing?relay
//  386 #endif
//  387   }
//  388 }
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock2
//  389 
//  390 /*********************************************************************
//  391  * @fn       nwk_Status()
//  392  *
//  393  * @brief
//  394  *
//  395  *   Status report.
//  396  *
//  397  * @param   statusCode
//  398  * @param   statusValue
//  399  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  400 void nwk_Status( uint16 statusCode, uint16 statusValue )
nwk_Status:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function nwk_Status
//  401 {
        FUNCALL nwk_Status, halMcuWaitMs
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  402   switch ( statusCode )
        MOV     A,#0x3
        XRL     A,R2
        JNZ     ??nwk_Status_0
        MOV     A,#0x10
        XRL     A,R3
??nwk_Status_0:
        JNZ     ??nwk_Status_1
//  403   {
//  404     case NWK_STATUS_COORD_ADDR: // The state is coordinator addr
//  405       if ( ZSTACK_ROUTER_BUILD )
//  406       {
//  407         #if defined (LCD_SUPPORTED) 
//  408             HalLcdWriteString( (char*)ZigbeeCoordStr, HAL_LCD_LINE_1 );
//  409             HalLcdWriteStringValue( (char*)NetworkIDStr, statusValue, 16, HAL_LCD_LINE_2 );
//  410             #if defined (Location) // The location initilization display state
//  411                 halMcuWaitMs(300);
//  412                 HalLcd_HW_Clear();
//  413                 #if defined (CoordinatorKB)
//  414                     HalLcdWriteString("[  ,   ][  ,   ]", HAL_LCD_LINE_1);
//  415                     HalLcdWriteString("[  ,   ][  ,   ]", HAL_LCD_LINE_2);
//  416                 #endif
//  417                 #if defined (CoordinatorEB)
//  418                     HalLcdWriteString("ID:     ,[     ]", HAL_LCD_LINE_1);
//  419                     HalLcdWriteString("ID:     ,[     ]", HAL_LCD_LINE_2);
//  420                     HalLcdWriteString("ID:     ,[     ]", HAL_LCD_LINE_3);
//  421                     HalLcdWriteString("ID:     ,[     ]", HAL_LCD_LINE_4);
//  422                 #endif
//  423             #endif
//  424         #endif
//  425       }
//  426       break;
//  427 
//  428     case NWK_STATUS_ROUTER_ADDR: // The state is router addr
//  429       if ( ZSTACK_ROUTER_BUILD )
//  430       {
//  431         #if defined (LCD_SUPPORTED)
//  432             HalLcdWriteStringValue( (char*)RouterStr, statusValue, 16, HAL_LCD_LINE_1 ); 
//  433         #endif
//  434       }
//  435       break;
//  436 
//  437     case NWK_STATUS_ORPHAN_RSP:
//  438       if ( ZSTACK_ROUTER_BUILD )
//  439       {
//  440         #if defined (LCD_SUPPORTED)
//  441         if ( statusValue == ZSuccess )
//  442             HalLcdWriteScreen( (char*)OrphanRspStr, (char*)SentStr );
//  443         else
//  444             HalLcdWriteScreen( (char*)OrphanRspStr, (char*)FailedStr );
//  445         #endif
//  446       }
//  447       break;
//  448 
//  449     case NWK_ERROR_ASSOC_RSP:
//  450       if ( ZSTACK_ROUTER_BUILD )
//  451       {
//  452         #if defined (LCD_SUPPORTED)
//  453             HalLcdWriteString( (char*)AssocRspFailStr, HAL_LCD_LINE_1 );
//  454             HalLcdWriteValue( (uint32)(statusValue), 16, HAL_LCD_LINE_2 );
//  455         #endif
//  456       }
//  457       break;
//  458       
//  459     case NWK_STATUS_ED_ADDR: // The state is end-device addr
//  460       if ( ZSTACK_END_DEVICE_BUILD )
//  461       {
//  462         #if defined (LCD_SUPPORTED)
//  463             HalLcdWriteStringValue( (char*)EndDeviceStr, statusValue, 16, HAL_LCD_LINE_1 );
//  464         #endif
//  465       }
//  466       break;
//  467 
//  468     case NWK_STATUS_PARENT_ADDR: // The state is parent addr
//  469       #if defined (LCD_SUPPORTED)      
//  470           HalLcdWriteStringValue( (char*)ParentStr, statusValue, 16, HAL_LCD_LINE_2 );
//  471           #if defined (Location)
//  472               halMcuWaitMs(300);
//  473               HalLcd_HW_Clear();
//  474               #if defined (RouterKB)
//  475                   HalLcdWriteString("[  ,   ][  ,   ]", HAL_LCD_LINE_1);
//  476                   HalLcdWriteString("[  ,   ][  ,   ]", HAL_LCD_LINE_2);
//  477               #endif
//  478               #if defined (RouterEB)
//  479                   HalLcdWriteString("ID:     ,[     ]", HAL_LCD_LINE_1);
//  480                   HalLcdWriteString("ID:     ,[     ]", HAL_LCD_LINE_2);
//  481                   HalLcdWriteString("ID:     ,[     ]", HAL_LCD_LINE_3);
//  482                   HalLcdWriteString("ID:     ,[     ]", HAL_LCD_LINE_4);
//  483               #endif
//  484           #endif 
//  485       #endif
//  486       break;
//  487 
//  488     case NWK_STATUS_ASSOC_CNF:
//  489       #if defined (LCD_SUPPORTED)
//  490           HalLcdWriteScreen( (char*)AssocCnfStr, (char*)SuccessStr );
//  491       #endif
//  492       break;
//  493 
//  494     case NWK_ERROR_ASSOC_CNF_DENIED:
//  495       #if defined (LCD_SUPPORTED)
//  496           HalLcdWriteString((char*)AssocCnfFailStr, HAL_LCD_LINE_1 );
//  497           HalLcdWriteValue( (uint32)(statusValue), 16, HAL_LCD_LINE_2 );
//  498       #endif
//  499           halMcuWaitMs(5000); // delay 5 seconds
        ; Setup parameters for call to function halMcuWaitMs
        MOV     R2,#-0x78
        MOV     R3,#0x13
        LCALL   ??halMcuWaitMs?relay
//  500           WatchDogEnable( WDTISH ); // Use watch dog to reset the system
        MOV     0xc9,#-0x55
        MOV     0xc9,#0x5b
//  501       break;
//  502 
//  503     case NWK_ERROR_ENERGY_SCAN_FAILED: // The state is scan failed
//  504       #if defined (LCD_SUPPORTED)
//  505           HalLcdWriteScreen( (char*)EnergyLevelStr, (char*)ScanFailedStr );
//  506       #endif
//  507       break;
//  508   }
//  509 }
??nwk_Status_1:
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock3
        REQUIRE WDCTL

        RSEG XDATA_ID:CODE:NOROOT(0)
        DATA
`?<Initializer for CskipRtrs>`:
        DB 6, 6, 6, 6, 6, 0

        RSEG XDATA_ID:CODE:NOROOT(0)
        DATA
`?<Initializer for CskipChldrn>`:
        DB 20, 20, 20, 20, 20, 0

        RSEG XDATA_ID:CODE:NOROOT(0)
        DATA
`?<Initializer for gMIN_TREE_LINK_COST>`:
        DB 6

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??nwk_globals_init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    nwk_globals_init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??NIB_init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    NIB_init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??nwk_Status?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    nwk_Status

        END
//  510 
//  511 /*********************************************************************
//  512 *********************************************************************/
// 
//   353 bytes in segment BANKED_CODE
//    18 bytes in segment BANK_RELAYS
//    57 bytes in segment CODE_C
//     1 byte  in segment SFR_AN
//    13 bytes in segment XDATA_I
//    13 bytes in segment XDATA_ID
// 1 265 bytes in segment XDATA_Z
// 
//   441 bytes of CODE  memory
//     0 bytes of DATA  memory (+ 1 byte shared)
// 1 278 bytes of XDATA memory
//
//Errors: none
//Warnings: none
