///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V7.51A/W32 for 8051               05/Mar/2010  14:04:21 /
// Copyright 2004-2009 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Components\hal\target\CC2530EB\hal_buzzer. /
//                          c                                                 /
//    Command line       =  -f "D:\程式開發\TI Zigbee                         /
//                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack /
//                          \HomeAutomation\SampleLight\CC2530DB\..\..\..\Too /
//                          ls\CC2530DB\f8wCoord.cfg" (-DCPU32MHZ             /
//                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TR /
//                          UE -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f   /
//                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3. /
//                          0-1.4.0\Projects\zstack\HomeAutomation\SampleLigh /
//                          t\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg" /
//                           (-DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR    /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100   /
//                          -DREJOIN_POLL_RATE=440) -f "D:\程式開發\TI        /
//                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects /
//                          \zstack\HomeAutomation\SampleLight\CC2530DB\..\.. /
//                          \..\Tools\CC2530DB\f8wZCL.cfg" (-DZCL_READ        /
//                          -DZCL_WRITE -DZCL_BASIC -DZCL_IDENTIFY            /
//                          -DZCL_ON_OFF -DZCL_KEY_ESTABLISH                  /
//                          -DZCL_LOAD_CONTROL -DZCL_SIMPLE_METERING          /
//                          -DZCL_PRICING) -DZCL_MESSAGE "D:\程式開發\TI      /
//                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Componen /
//                          ts\hal\target\CC2530EB\hal_buzzer.c" -D ZTOOL_P1  /
//                          -D MT_TASK -D MT_APP_FUNC -D MT_SYS_FUNC -D       /
//                          MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -lC            /
//                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3. /
//                          0-1.4.0\Projects\zstack\HomeAutomation\SampleLigh /
//                          t\CC2530DB\CoordinatorEB\List\" -lA               /
//                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3. /
//                          0-1.4.0\Projects\zstack\HomeAutomation\SampleLigh /
//                          t\CC2530DB\CoordinatorEB\List\" --diag_suppress   /
//                          Pe001,Pa010 -o "D:\程式開發\TI Zigbee             /
//                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack /
//                          \HomeAutomation\SampleLight\CC2530DB\CoordinatorE /
//                          B\Obj\" -e --require_prototypes --debug           /
//                          --core=plain --dptr=16,1 --data_model=large       /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I "D:\程式開發\TI Zigbee    /
//                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack /
//                          \HomeAutomation\SampleLight\CC2530DB\" -I         /
//                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3. /
//                          0-1.4.0\Projects\zstack\HomeAutomation\SampleLigh /
//                          t\CC2530DB\..\SOURCE\" -I "D:\程式開發\TI Zigbee  /
//                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack /
//                          \HomeAutomation\SampleLight\CC2530DB\..\..\SOURCE /
//                          \" -I "D:\程式開發\TI Zigbee                      /
//                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack /
//                          \HomeAutomation\SampleLight\CC2530DB\..\..\..\ZMA /
//                          IN\TI2530DB\" -I "D:\程式開發\TI Zigbee           /
//                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack /
//                          \HomeAutomation\SampleLight\CC2530DB\..\..\..\..\ /
//                          ..\COMPONENTS\MT\" -I "D:\程式開發\TI Zigbee      /
//                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack /
//                          \HomeAutomation\SampleLight\CC2530DB\..\..\..\..\ /
//                          ..\COMPONENTS\HAL\INCLUDE\" -I "D:\程式開發\TI    /
//                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects /
//                          \zstack\HomeAutomation\SampleLight\CC2530DB\..\.. /
//                          \..\..\..\COMPONENTS\HAL\TARGET\CC2530EB\" -I     /
//                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3. /
//                          0-1.4.0\Projects\zstack\HomeAutomation\SampleLigh /
//                          t\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MCU\CCS /
//                          OC\" -I "D:\程式開發\TI Zigbee                    /
//                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack /
//                          \HomeAutomation\SampleLight\CC2530DB\..\..\..\..\ /
//                          ..\COMPONENTS\OSAL\INCLUDE\" -I "D:\程式開發\TI   /
//                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects /
//                          \zstack\HomeAutomation\SampleLight\CC2530DB\..\.. /
//                          \..\..\..\COMPONENTS\STACK\AF\" -I                /
//                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3. /
//                          0-1.4.0\Projects\zstack\HomeAutomation\SampleLigh /
//                          t\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NWK\"  /
//                          -I "D:\程式開發\TI Zigbee                         /
//                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack /
//                          \HomeAutomation\SampleLight\CC2530DB\..\..\..\..\ /
//                          ..\COMPONENTS\STACK\SEC\" -I "D:\程式開發\TI      /
//                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects /
//                          \zstack\HomeAutomation\SampleLight\CC2530DB\..\.. /
//                          \..\..\..\COMPONENTS\STACK\SAPI\" -I              /
//                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3. /
//                          0-1.4.0\Projects\zstack\HomeAutomation\SampleLigh /
//                          t\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SYS\"  /
//                          -I "D:\程式開發\TI Zigbee                         /
//                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack /
//                          \HomeAutomation\SampleLight\CC2530DB\..\..\..\..\ /
//                          ..\COMPONENTS\STACK\ZCL\" -I "D:\程式開發\TI      /
//                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects /
//                          \zstack\HomeAutomation\SampleLight\CC2530DB\..\.. /
//                          \..\..\..\COMPONENTS\STACK\ZDO\" -I               /
//                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3. /
//                          0-1.4.0\Projects\zstack\HomeAutomation\SampleLigh /
//                          t\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8W\"   /
//                          -I "D:\程式開發\TI Zigbee                         /
//                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack /
//                          \HomeAutomation\SampleLight\CC2530DB\..\..\..\..\ /
//                          ..\COMPONENTS\ZMAC\" -I "D:\程式開發\TI Zigbee    /
//                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack /
//                          \HomeAutomation\SampleLight\CC2530DB\..\..\..\..\ /
//                          ..\COMPONENTS\SERVICES\SADDR\" -I                 /
//                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3. /
//                          0-1.4.0\Projects\zstack\HomeAutomation\SampleLigh /
//                          t\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES\SDA /
//                          TA\" -I "D:\程式開發\TI Zigbee                    /
//                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack /
//                          \HomeAutomation\SampleLight\CC2530DB\..\..\..\..\ /
//                          ..\COMPONENTS\MAC\INCLUDE\" -I "D:\程式開發\TI    /
//                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects /
//                          \zstack\HomeAutomation\SampleLight\CC2530DB\..\.. /
//                          \..\..\..\COMPONENTS\MAC\HIGH_LEVEL\" -I          /
//                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3. /
//                          0-1.4.0\Projects\zstack\HomeAutomation\SampleLigh /
//                          t\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_LEVE /
//                          L\srf04\" -I "D:\程式開發\TI Zigbee               /
//                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack /
//                          \HomeAutomation\SampleLight\CC2530DB\..\..\..\..\ /
//                          ..\COMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\"   /
//                          -I "C:\Program Files\IAR Systems\Embedded         /
//                          Workbench 5.3\8051\INC\" -I "C:\Program           /
//                          Files\IAR Systems\Embedded Workbench              /
//                          5.3\8051\INC\CLIB\" -Ohz                          /
//    List file          =  D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\HomeAutomation\SampleLight /
//                          \CC2530DB\CoordinatorEB\List\hal_buzzer.s51       /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME hal_buzzer

        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?L_DIV_MOD
        EXTERN ?SS_SHR
        EXTERN ?V0

        PUBWEAK `??T1_ISR??INTVEC 75`
        PUBLIC ??halBuzzer?relay
        FUNCTION ??halBuzzer?relay,0203H
        PUBLIC ??halBuzzerInit?relay
        FUNCTION ??halBuzzerInit?relay,0203H
        PUBLIC ??halBuzzerOff?relay
        FUNCTION ??halBuzzerOff?relay,0203H
        PUBLIC ??halBuzzerOn?relay
        FUNCTION ??halBuzzerOn?relay,0203H
        PUBWEAK T1CC0H
        PUBWEAK T1CC0L
        PUBWEAK T1CCTL0
        PUBWEAK T1CNTL
        PUBWEAK T1CTL
        PUBLIC T1_ISR
        FUNCTION T1_ISR,0233H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBWEAK _A_IEN1
        PUBWEAK _A_P0
        PUBLIC halBuzzer
        FUNCTION halBuzzer,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC halBuzzerInit
        FUNCTION halBuzzerInit,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC halBuzzerOff
        FUNCTION halBuzzerOff,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC halBuzzerOn
        FUNCTION halBuzzerOn,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
halMcuWaitMs        SYMBOL "halMcuWaitMs"
??halMcuWaitMs?relay SYMBOL "?relay", halMcuWaitMs
T1_ISR              SYMBOL "T1_ISR"
`??T1_ISR??INTVEC 75` SYMBOL "??INTVEC 75", T1_ISR
halBuzzer           SYMBOL "halBuzzer"
??halBuzzer?relay   SYMBOL "?relay", halBuzzer
halBuzzerInit       SYMBOL "halBuzzerInit"
??halBuzzerInit?relay SYMBOL "?relay", halBuzzerInit
halBuzzerOff        SYMBOL "halBuzzerOff"
??halBuzzerOff?relay SYMBOL "?relay", halBuzzerOff
halBuzzerOn         SYMBOL "halBuzzerOn"
??halBuzzerOn?relay SYMBOL "?relay", halBuzzerOn

        EXTERN halMcuWaitMs
        FUNCTION halMcuWaitMs,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??halMcuWaitMs?relay
        FUNCTION ??halMcuWaitMs?relay,00H

// D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Components\hal\target\CC2530EB\hal_buzzer.c
//    1 //-------------------------------------------------------------------
//    2 // Filename: hal_buzzer.c
//    3 // Description: hal buzzer library
//    4 //-------------------------------------------------------------------
//    5 //-------------------------------------------------------------------
//    6 // INCLUDES
//    7 //-------------------------------------------------------------------
//    8 #include "hal_defs.h"
//    9 #include "hal_mcu.h"

        ASEGN SFR_AN:DATA:NOROOT,080H
// union <unnamed> volatile __sfr _A_P0
_A_P0:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0b8H
// union <unnamed> volatile __sfr _A_IEN1
_A_IEN1:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0daH
// unsigned char volatile __sfr T1CC0L
T1CC0L:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0dbH
// unsigned char volatile __sfr T1CC0H
T1CC0H:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e2H
// unsigned char volatile __sfr T1CNTL
T1CNTL:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e4H
// unsigned char volatile __sfr T1CTL
T1CTL:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e5H
// unsigned char volatile __sfr T1CCTL0
T1CCTL0:
        DS 1
//   10 #include "hal_board.h"
//   11 #include "hal_buzzer.h"
//   12 #include "hal_keypad.h"
//   13 
//   14 //-------------------------------------------------------------------
//   15 // @fn      halBuzzerInit
//   16 // @brief    Set up timer 1  to generate an interrupt freq
//   17 // @param       uint16 freq
//   18 // @return  none
//   19 //-------------------------------------------------------------------

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   20 void halBuzzerInit(uint16 freq)
halBuzzerInit:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function halBuzzerInit
//   21 {
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
//   22     // Set prescaler divider value to 128
//   23     T1CTL |= 0x0C;
        ORL     0xe4,#0xc
        MOV     A,0xe4
//   24 
//   25     // Multiply cycles by 8 to get freq cycles
//   26     // 32MHz/128/64 gives approximately freq
//   27     // Set compare value
//   28     T1CC0H = HI_UINT16((32000000 / 256) / freq);
        MOV     ?V0 + 0,#0x48
        MOV     ?V0 + 1,#-0x18
        MOV     ?V0 + 2,#0x1
        MOV     ?V0 + 3,#0x0
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     ?V0 + 6,#0x0
        MOV     ?V0 + 7,#0x0
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?L_DIV_MOD
        MOV     ?V0 + 4,?V0 + 0
        MOV     ?V0 + 5,?V0 + 1
        MOV     A,#0x8
        MOV     R0,#?V0 + 4
        LCALL   ?SS_SHR
        MOV     A,?V0 + 4
        MOV     0xdb,A
//   29     T1CC0L = LO_UINT16((32000000 / 256) / freq);
        MOV     A,?V0 + 0
        MOV     0xda,A
//   30 
//   31     T1CCTL0 = 0x44;
        MOV     0xe5,#0x44
//   32 
//   33     T1CTL &= ~0x10; // T1CTL.OVFIF = 0
        ANL     0xe4,#0xef
//   34     T1CTL &= ~0x02; // Stop timer
        ANL     0xe4,#0xfd
//   35     IEN1 &= ~0x02; // Disable interrupt
        CLR     0xb8.1
        CFI EndBlock cfiBlock0
//   36 }
        REQUIRE ?Subroutine0
        REQUIRE _A_IEN1
        REQUIRE T1CC0L
        REQUIRE T1CC0H
        REQUIRE T1CTL
        REQUIRE T1CCTL0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//   37 
//   38 //-------------------------------------------------------------------
//   39 // @fn          halBuzzerOn
//   40 // @brief       Turn Buzzer on.
//   41 // @param       uint16 freq
//   42 // @return      none
//   43 //-------------------------------------------------------------------

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   44 void halBuzzerOn(uint16 freq)
halBuzzerOn:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function halBuzzerOn
//   45 {
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
//   46     T1CNTL = 0x00; // Reset counter value
        MOV     0xe2,#0x0
//   47 
//   48     T1CC0H = HI_UINT16((32000000 / 256) / freq);
        MOV     ?V0 + 0,#0x48
        MOV     ?V0 + 1,#-0x18
        MOV     ?V0 + 2,#0x1
        MOV     ?V0 + 3,#0x0
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     ?V0 + 6,#0x0
        MOV     ?V0 + 7,#0x0
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?L_DIV_MOD
        MOV     ?V0 + 4,?V0 + 0
        MOV     ?V0 + 5,?V0 + 1
        MOV     A,#0x8
        MOV     R0,#?V0 + 4
        LCALL   ?SS_SHR
        MOV     A,?V0 + 4
        MOV     0xdb,A
//   49     T1CC0L = LO_UINT16((32000000 / 256) / freq);
        MOV     A,?V0 + 0
        MOV     0xda,A
//   50 
//   51     T1CTL |= 0x02; // Start timer
        ORL     0xe4,#0x2
//   52     IEN1 |= 0x02; // Enable interrupt
        SETB    0xb8.1
//   53 }
        SJMP    ?Subroutine0
        CFI EndBlock cfiBlock2
        REQUIRE _A_IEN1
        REQUIRE T1CC0L
        REQUIRE T1CC0H
        REQUIRE T1CNTL
        REQUIRE T1CTL
//   54 
//   55 //-------------------------------------------------------------------
//   56 // @fn          halBuzzerOff
//   57 // @brief       Turn Buzzer off.
//   58 // @return      none
//   59 //-------------------------------------------------------------------

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   60 void halBuzzerOff(void)
halBuzzerOff:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function halBuzzerOff
//   61 {
        ; Saved register size: 0
        ; Auto size: 0
//   62     T1CTL &= ~0x02; // Stop timer
        ANL     0xe4,#0xfd
//   63     IEN1 &= ~0x02; // Disable interrupt
        CLR     0xb8.1
//   64     HAL_BUZZER_OFF();
        SETB    0x80.1
//   65 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock3
        REQUIRE _A_IEN1
        REQUIRE _A_P0
        REQUIRE T1CTL
//   66 
//   67 //-------------------------------------------------------------------
//   68 // @fn          halBuzzer
//   69 // @brief       Turn Buzzer on.
//   70 // @param       uint16 freq
//   71 // @return      none
//   72 //-------------------------------------------------------------------

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   73 void halBuzzer(uint16 ms)
halBuzzer:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function halBuzzer
//   74 {
        FUNCALL halBuzzer, halMcuWaitMs
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   75     T1CNTL = 0x00; // Reset counter value
        MOV     0xe2,#0x0
//   76     T1CTL |= 0x02; // Start timer
        ORL     0xe4,#0x2
//   77     IEN1 |= 0x02; // Enable interrupt
        SETB    0xb8.1
//   78     halMcuWaitMs(ms);
        ; Setup parameters for call to function halMcuWaitMs
        LCALL   ??halMcuWaitMs?relay
//   79     T1CTL &= ~0x02; // Stop timer
        ANL     0xe4,#0xfd
//   80     IEN1 &= ~0x02; // Disable interrupt
        CLR     0xb8.1
//   81     HAL_BUZZER_OFF();
        SETB    0x80.1
//   82 }
        POP     DPH
        CFI DPH0 SameValue
        CFI CFA_SP SP+-4
        POP     DPL
        CFI DPL0 SameValue
        CFI CFA_SP SP+-3
        LJMP    ?BRET
        CFI EndBlock cfiBlock4
        REQUIRE _A_IEN1
        REQUIRE _A_P0
        REQUIRE T1CNTL
        REQUIRE T1CTL
//   83 
//   84 //-------------------------------------------------------------------
//   85 // @fn      timer32k0_ISR
//   86 // @brief   ISR framework for the 32KHz timer component
//   87 // @param   none
//   88 // @return  none
//   89 //-------------------------------------------------------------------

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   90 HAL_ISR_FUNCTION(T1_ISR, T1_VECTOR)
T1_ISR:
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function T1_ISR
//   91 {
        PUSH    A
        CFI A Frame(CFA_SP, 3)
        CFI CFA_SP SP+-3
        ; Saved register size: 2
        ; Auto size: 0
//   92     HAL_BUZZER_TGL();
        XRL     0x80,#0x2
        MOV     A,0x80
//   93 }
        POP     A
        CFI A SameValue
        CFI CFA_SP SP+-2
        RETI
        CFI EndBlock cfiBlock5
        REQUIRE _A_P0

        COMMON INTVEC:CODE:ROOT(0)
        ORG 75
`??T1_ISR??INTVEC 75`:
        LJMP       (T1_ISR)

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??halBuzzerInit?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    halBuzzerInit

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??halBuzzerOn?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    halBuzzerOn

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??halBuzzerOff?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    halBuzzerOff

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??halBuzzer?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    halBuzzer

        END
// 
// 180 bytes in segment BANKED_CODE
//  24 bytes in segment BANK_RELAYS
//   3 bytes in segment INTVEC
//  10 bytes in segment NEAR_CODE
//   7 bytes in segment SFR_AN
// 
// 214 bytes of CODE memory (+ 3 bytes shared)
//   0 bytes of DATA memory (+ 7 bytes shared)
//
//Errors: none
//Warnings: none
