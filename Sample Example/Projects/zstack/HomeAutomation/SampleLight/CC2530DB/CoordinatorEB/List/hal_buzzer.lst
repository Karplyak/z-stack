###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                05/Mar/2010  14:04:21 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0- #
#                          1.4.0\Components\hal\target\CC2530EB\hal_buzzer.c  #
#    Command line       =  -f "D:\程式開發\TI Zigbee                          #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          HomeAutomation\SampleLight\CC2530DB\..\..\..\Tools #
#                          \CC2530DB\f8wCoord.cfg" (-DCPU32MHZ                #
#                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRU #
#                          E -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f     #
#                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 #
#                          -1.4.0\Projects\zstack\HomeAutomation\SampleLight\ #
#                          CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"    #
#                          (-DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR      #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440)   #
#                          -f "D:\程式開發\TI Zigbee                          #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          HomeAutomation\SampleLight\CC2530DB\..\..\..\Tools #
#                          \CC2530DB\f8wZCL.cfg" (-DZCL_READ -DZCL_WRITE      #
#                          -DZCL_BASIC -DZCL_IDENTIFY -DZCL_ON_OFF            #
#                          -DZCL_KEY_ESTABLISH -DZCL_LOAD_CONTROL             #
#                          -DZCL_SIMPLE_METERING -DZCL_PRICING)               #
#                          -DZCL_MESSAGE "D:\程式開發\TI Zigbee               #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Components\hal\t #
#                          arget\CC2530EB\hal_buzzer.c" -D ZTOOL_P1 -D        #
#                          MT_TASK -D MT_APP_FUNC -D MT_SYS_FUNC -D           #
#                          MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -lC             #
#                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 #
#                          -1.4.0\Projects\zstack\HomeAutomation\SampleLight\ #
#                          CC2530DB\CoordinatorEB\List\" -lA "D:\程式開發\TI  #
#                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\ #
#                          zstack\HomeAutomation\SampleLight\CC2530DB\Coordin #
#                          atorEB\List\" --diag_suppress Pe001,Pa010 -o       #
#                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 #
#                          -1.4.0\Projects\zstack\HomeAutomation\SampleLight\ #
#                          CC2530DB\CoordinatorEB\Obj\" -e                    #
#                          --require_prototypes --debug --core=plain          #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "D:\程式開發\TI Zigbee     #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          HomeAutomation\SampleLight\CC2530DB\" -I           #
#                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 #
#                          -1.4.0\Projects\zstack\HomeAutomation\SampleLight\ #
#                          CC2530DB\..\SOURCE\" -I "D:\程式開發\TI Zigbee     #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          HomeAutomation\SampleLight\CC2530DB\..\..\SOURCE\" #
#                           -I "D:\程式開發\TI Zigbee                         #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          HomeAutomation\SampleLight\CC2530DB\..\..\..\ZMAIN #
#                          \TI2530DB\" -I "D:\程式開發\TI Zigbee              #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          HomeAutomation\SampleLight\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\MT\" -I "D:\程式開發\TI Zigbee         #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          HomeAutomation\SampleLight\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\HAL\INCLUDE\" -I "D:\程式開發\TI       #
#                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\ #
#                          zstack\HomeAutomation\SampleLight\CC2530DB\..\..\. #
#                          .\..\..\COMPONENTS\HAL\TARGET\CC2530EB\" -I        #
#                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 #
#                          -1.4.0\Projects\zstack\HomeAutomation\SampleLight\ #
#                          CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MCU\CCSOC\ #
#                          " -I "D:\程式開發\TI Zigbee                        #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          HomeAutomation\SampleLight\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\OSAL\INCLUDE\" -I "D:\程式開發\TI      #
#                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\ #
#                          zstack\HomeAutomation\SampleLight\CC2530DB\..\..\. #
#                          .\..\..\COMPONENTS\STACK\AF\" -I "D:\程式開發\TI   #
#                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\ #
#                          zstack\HomeAutomation\SampleLight\CC2530DB\..\..\. #
#                          .\..\..\COMPONENTS\STACK\NWK\" -I "D:\程式開發\TI  #
#                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\ #
#                          zstack\HomeAutomation\SampleLight\CC2530DB\..\..\. #
#                          .\..\..\COMPONENTS\STACK\SEC\" -I "D:\程式開發\TI  #
#                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\ #
#                          zstack\HomeAutomation\SampleLight\CC2530DB\..\..\. #
#                          .\..\..\COMPONENTS\STACK\SAPI\" -I                 #
#                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 #
#                          -1.4.0\Projects\zstack\HomeAutomation\SampleLight\ #
#                          CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SYS\" -I  #
#                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 #
#                          -1.4.0\Projects\zstack\HomeAutomation\SampleLight\ #
#                          CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZCL\" -I  #
#                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 #
#                          -1.4.0\Projects\zstack\HomeAutomation\SampleLight\ #
#                          CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZDO\" -I  #
#                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 #
#                          -1.4.0\Projects\zstack\HomeAutomation\SampleLight\ #
#                          CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8W\" -I   #
#                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 #
#                          -1.4.0\Projects\zstack\HomeAutomation\SampleLight\ #
#                          CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\" -I       #
#                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 #
#                          -1.4.0\Projects\zstack\HomeAutomation\SampleLight\ #
#                          CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES\SADDR\ #
#                          " -I "D:\程式開發\TI Zigbee                        #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          HomeAutomation\SampleLight\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\SERVICES\SDATA\" -I "D:\程式開發\TI    #
#                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\ #
#                          zstack\HomeAutomation\SampleLight\CC2530DB\..\..\. #
#                          .\..\..\COMPONENTS\MAC\INCLUDE\" -I                #
#                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 #
#                          -1.4.0\Projects\zstack\HomeAutomation\SampleLight\ #
#                          CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIGH_LEVEL\ #
#                          " -I "D:\程式開發\TI Zigbee                        #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          HomeAutomation\SampleLight\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\MAC\LOW_LEVEL\srf04\" -I               #
#                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 #
#                          -1.4.0\Projects\zstack\HomeAutomation\SampleLight\ #
#                          CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL\s #
#                          rf04\SINGLE_CHIP\" -I "C:\Program Files\IAR        #
#                          Systems\Embedded Workbench 5.3\8051\INC\" -I       #
#                          "C:\Program Files\IAR Systems\Embedded Workbench   #
#                          5.3\8051\INC\CLIB\" -Ohz                           #
#    List file          =  D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0- #
#                          1.4.0\Projects\zstack\HomeAutomation\SampleLight\C #
#                          C2530DB\CoordinatorEB\List\hal_buzzer.lst          #
#    Object file        =  D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0- #
#                          1.4.0\Projects\zstack\HomeAutomation\SampleLight\C #
#                          C2530DB\CoordinatorEB\Obj\hal_buzzer.r51           #
#                                                                             #
#                                                                             #
###############################################################################

D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Components\hal\target\CC2530EB\hal_buzzer.c
      1          //-------------------------------------------------------------------
      2          // Filename: hal_buzzer.c
      3          // Description: hal buzzer library
      4          //-------------------------------------------------------------------
      5          //-------------------------------------------------------------------
      6          // INCLUDES
      7          //-------------------------------------------------------------------
      8          #include "hal_defs.h"
      9          #include "hal_mcu.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xb8
   \   union <unnamed> volatile __sfr _A_IEN1
   \                     _A_IEN1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xda
   \   unsigned char volatile __sfr T1CC0L
   \                     T1CC0L:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xdb
   \   unsigned char volatile __sfr T1CC0H
   \                     T1CC0H:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xe2
   \   unsigned char volatile __sfr T1CNTL
   \                     T1CNTL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xe4
   \   unsigned char volatile __sfr T1CTL
   \                     T1CTL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xe5
   \   unsigned char volatile __sfr T1CCTL0
   \                     T1CCTL0:
   \   000000                DS 1
     10          #include "hal_board.h"
     11          #include "hal_buzzer.h"
     12          #include "hal_keypad.h"
     13          
     14          //-------------------------------------------------------------------
     15          // @fn      halBuzzerInit
     16          // @brief    Set up timer 1  to generate an interrupt freq
     17          // @param       uint16 freq
     18          // @return  none
     19          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     20          void halBuzzerInit(uint16 freq)
   \                     halBuzzerInit:
     21          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
     22              // Set prescaler divider value to 128
     23              T1CTL |= 0x0C;
   \   000005   43E40C       ORL     0xe4,#0xc
   \   000008   E5E4         MOV     A,0xe4
     24          
     25              // Multiply cycles by 8 to get freq cycles
     26              // 32MHz/128/64 gives approximately freq
     27              // Set compare value
     28              T1CC0H = HI_UINT16((32000000 / 256) / freq);
   \   00000A   75..48       MOV     ?V0 + 0,#0x48
   \   00000D   75..E8       MOV     ?V0 + 1,#-0x18
   \   000010   75..01       MOV     ?V0 + 2,#0x1
   \   000013   75..00       MOV     ?V0 + 3,#0x0
   \   000016   8A..         MOV     ?V0 + 4,R2
   \   000018   8B..         MOV     ?V0 + 5,R3
   \   00001A   75..00       MOV     ?V0 + 6,#0x0
   \   00001D   75..00       MOV     ?V0 + 7,#0x0
   \   000020   78..         MOV     R0,#?V0 + 0
   \   000022   79..         MOV     R1,#?V0 + 4
   \   000024   12....       LCALL   ?L_DIV_MOD
   \   000027   85....       MOV     ?V0 + 4,?V0 + 0
   \   00002A   85....       MOV     ?V0 + 5,?V0 + 1
   \   00002D   7408         MOV     A,#0x8
   \   00002F   78..         MOV     R0,#?V0 + 4
   \   000031   12....       LCALL   ?SS_SHR
   \   000034   E5..         MOV     A,?V0 + 4
   \   000036   F5DB         MOV     0xdb,A
     29              T1CC0L = LO_UINT16((32000000 / 256) / freq);
   \   000038   E5..         MOV     A,?V0 + 0
   \   00003A   F5DA         MOV     0xda,A
     30          
     31              T1CCTL0 = 0x44;
   \   00003C   75E544       MOV     0xe5,#0x44
     32          
     33              T1CTL &= ~0x10; // T1CTL.OVFIF = 0
   \   00003F   53E4EF       ANL     0xe4,#0xef
     34              T1CTL &= ~0x02; // Stop timer
   \   000042   53E4FD       ANL     0xe4,#0xfd
     35              IEN1 &= ~0x02; // Disable interrupt
   \   000045   C2B9         CLR     0xb8.1
     36          }
   \   000047                REQUIRE ?Subroutine0
   \   000047                REQUIRE _A_IEN1
   \   000047                REQUIRE T1CC0L
   \   000047                REQUIRE T1CC0H
   \   000047                REQUIRE T1CTL
   \   000047                REQUIRE T1CCTL0
   \   000047                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F08         MOV     R7,#0x8
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
     37          
     38          //-------------------------------------------------------------------
     39          // @fn          halBuzzerOn
     40          // @brief       Turn Buzzer on.
     41          // @param       uint16 freq
     42          // @return      none
     43          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     44          void halBuzzerOn(uint16 freq)
   \                     halBuzzerOn:
     45          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
     46              T1CNTL = 0x00; // Reset counter value
   \   000005   75E200       MOV     0xe2,#0x0
     47          
     48              T1CC0H = HI_UINT16((32000000 / 256) / freq);
   \   000008   75..48       MOV     ?V0 + 0,#0x48
   \   00000B   75..E8       MOV     ?V0 + 1,#-0x18
   \   00000E   75..01       MOV     ?V0 + 2,#0x1
   \   000011   75..00       MOV     ?V0 + 3,#0x0
   \   000014   8A..         MOV     ?V0 + 4,R2
   \   000016   8B..         MOV     ?V0 + 5,R3
   \   000018   75..00       MOV     ?V0 + 6,#0x0
   \   00001B   75..00       MOV     ?V0 + 7,#0x0
   \   00001E   78..         MOV     R0,#?V0 + 0
   \   000020   79..         MOV     R1,#?V0 + 4
   \   000022   12....       LCALL   ?L_DIV_MOD
   \   000025   85....       MOV     ?V0 + 4,?V0 + 0
   \   000028   85....       MOV     ?V0 + 5,?V0 + 1
   \   00002B   7408         MOV     A,#0x8
   \   00002D   78..         MOV     R0,#?V0 + 4
   \   00002F   12....       LCALL   ?SS_SHR
   \   000032   E5..         MOV     A,?V0 + 4
   \   000034   F5DB         MOV     0xdb,A
     49              T1CC0L = LO_UINT16((32000000 / 256) / freq);
   \   000036   E5..         MOV     A,?V0 + 0
   \   000038   F5DA         MOV     0xda,A
     50          
     51              T1CTL |= 0x02; // Start timer
   \   00003A   43E402       ORL     0xe4,#0x2
     52              IEN1 |= 0x02; // Enable interrupt
   \   00003D   D2B9         SETB    0xb8.1
     53          }
   \   00003F   80..         SJMP    ?Subroutine0
   \   000041                REQUIRE _A_IEN1
   \   000041                REQUIRE T1CC0L
   \   000041                REQUIRE T1CC0H
   \   000041                REQUIRE T1CNTL
   \   000041                REQUIRE T1CTL
     54          
     55          //-------------------------------------------------------------------
     56          // @fn          halBuzzerOff
     57          // @brief       Turn Buzzer off.
     58          // @return      none
     59          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     60          void halBuzzerOff(void)
   \                     halBuzzerOff:
     61          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     62              T1CTL &= ~0x02; // Stop timer
   \   000000   53E4FD       ANL     0xe4,#0xfd
     63              IEN1 &= ~0x02; // Disable interrupt
   \   000003   C2B9         CLR     0xb8.1
     64              HAL_BUZZER_OFF();
   \   000005   D281         SETB    0x80.1
     65          }
   \   000007   02....       LJMP    ?BRET
   \   00000A                REQUIRE _A_IEN1
   \   00000A                REQUIRE _A_P0
   \   00000A                REQUIRE T1CTL
     66          
     67          //-------------------------------------------------------------------
     68          // @fn          halBuzzer
     69          // @brief       Turn Buzzer on.
     70          // @param       uint16 freq
     71          // @return      none
     72          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     73          void halBuzzer(uint16 ms)
   \                     halBuzzer:
     74          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     75              T1CNTL = 0x00; // Reset counter value
   \   000004   75E200       MOV     0xe2,#0x0
     76              T1CTL |= 0x02; // Start timer
   \   000007   43E402       ORL     0xe4,#0x2
     77              IEN1 |= 0x02; // Enable interrupt
   \   00000A   D2B9         SETB    0xb8.1
     78              halMcuWaitMs(ms);
   \   00000C                ; Setup parameters for call to function halMcuWaitMs
   \   00000C   12....       LCALL   ??halMcuWaitMs?relay
     79              T1CTL &= ~0x02; // Stop timer
   \   00000F   53E4FD       ANL     0xe4,#0xfd
     80              IEN1 &= ~0x02; // Disable interrupt
   \   000012   C2B9         CLR     0xb8.1
     81              HAL_BUZZER_OFF();
   \   000014   D281         SETB    0x80.1
     82          }
   \   000016   D083         POP     DPH
   \   000018   D082         POP     DPL
   \   00001A   02....       LJMP    ?BRET
   \   00001D                REQUIRE _A_IEN1
   \   00001D                REQUIRE _A_P0
   \   00001D                REQUIRE T1CNTL
   \   00001D                REQUIRE T1CTL
     83          
     84          //-------------------------------------------------------------------
     85          // @fn      timer32k0_ISR
     86          // @brief   ISR framework for the 32KHz timer component
     87          // @param   none
     88          // @return  none
     89          //-------------------------------------------------------------------

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     90          HAL_ISR_FUNCTION(T1_ISR, T1_VECTOR)
   \                     T1_ISR:
     91          {
   \   000000   C0E0         PUSH    A
   \   000002                ; Saved register size: 2
   \   000002                ; Auto size: 0
     92              HAL_BUZZER_TGL();
   \   000002   638002       XRL     0x80,#0x2
   \   000005   E580         MOV     A,0x80
     93          }
   \   000007   D0E0         POP     A
   \   000009   32           RETI
   \   00000A                REQUIRE _A_P0

   \                                 In  segment INTVEC, offset 0x4b, root
   \                     `??T1_ISR??INTVEC 75`:
   \   00004B   02....       LJMP       (T1_ISR)

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halBuzzerInit?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halBuzzerInit

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halBuzzerOn?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halBuzzerOn

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halBuzzerOff?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halBuzzerOff

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halBuzzer?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halBuzzer

   Maximum stack usage in bytes:

     Function          ISTACK PSTACK XSTACK
     --------          ------ ------ ------
     T1_ISR                2      0      0
     halBuzzer             2      0      0
       -> halMcuWaitMs     4      0      0
     halBuzzerInit         0      0     16
     halBuzzerOff          0      0      0
     halBuzzerOn           0      0     16


   Segment part sizes:

     Function/Label        Bytes
     --------------        -----
     _A_P0                    1
     _A_IEN1                  1
     T1CC0L                   1
     T1CC0H                   1
     T1CNTL                   1
     T1CTL                    1
     T1CCTL0                  1
     halBuzzerInit           71
     ?Subroutine0             5
     halBuzzerOn             65
     halBuzzerOff            10
     halBuzzer               29
     T1_ISR                  10
     ??T1_ISR??INTVEC 75      3
     ??halBuzzerInit?relay    6
     ??halBuzzerOn?relay      6
     ??halBuzzerOff?relay     6
     ??halBuzzer?relay        6

 
 180 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   3 bytes in segment INTVEC
  10 bytes in segment NEAR_CODE
   7 bytes in segment SFR_AN
 
 214 bytes of CODE memory (+ 3 bytes shared)
   0 bytes of DATA memory (+ 7 bytes shared)

Errors: none
Warnings: none
