###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                12/Mar/2010  14:37:18 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0- #
#                          1.4.0\Components\hal\target\CC2530BB\hal_keypad.c  #
#    Command line       =  -f "D:\程式開發\TI Zigbee                          #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB #
#                          \f8wEndev.cfg" (-DCPU32MHZ -DROOT=__near_func      #
#                          -DBLINK_LEDS) -f "D:\程式開發\TI Zigbee            #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB #
#                          \f8wConfig.cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0  #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 #
#                          -1.4.0\Components\hal\target\CC2530BB\hal_keypad.c #
#                          " -D NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D       #
#                          MT_SYS_FUNC -D MT_ZDO_FUNC -D                      #
#                          xLCD_SUPPORTED=DEBUG -lC "D:\程式開發\TI Zigbee    #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\EndDeviceBB\List\" -lA  #
#                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 #
#                          -1.4.0\Projects\zstack\Samples\SampleApp\CC2530DB\ #
#                          EndDeviceBB\List\" --diag_suppress Pe001,Pa010 -o  #
#                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 #
#                          -1.4.0\Projects\zstack\Samples\SampleApp\CC2530DB\ #
#                          EndDeviceBB\Obj\" -e --require_prototypes --debug  #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "D:\程式開發\TI Zigbee     #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\" -I "D:\程式開發\TI    #
#                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\SOURCE\" -I   #
#                          "D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0 #
#                          -1.4.0\Projects\zstack\Samples\SampleApp\CC2530DB\ #
#                          ..\..\..\ZMAIN\TI2530DB\" -I "D:\程式開發\TI       #
#                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\MT\" -I "D:\程式開發\TI Zigbee           #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\HAL\INCLUDE\" -I "D:\程式開發\TI Zigbee         #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\HAL\TARGET\CC2530EB\" -I "D:\程式開發\TI        #
#                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\OSAL\MCU\CCSOC\" -I "D:\程式開發\TI      #
#                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\OSAL\INCLUDE\" -I "D:\程式開發\TI        #
#                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\STACK\AF\" -I "D:\程式開發\TI Zigbee     #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\STACK\NWK\" -I "D:\程式開發\TI Zigbee           #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\STACK\SEC\" -I "D:\程式開發\TI Zigbee           #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\STACK\SAPI\" -I "D:\程式開發\TI Zigbee          #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\STACK\SYS\" -I "D:\程式開發\TI Zigbee           #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\STACK\ZDO\" -I "D:\程式開發\TI Zigbee           #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\ZMAC\F8W\" -I "D:\程式開發\TI Zigbee            #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\ZMAC\" -I "D:\程式開發\TI Zigbee                #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\SERVICES\SADDR\" -I "D:\程式開發\TI Zigbee      #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\SERVICES\SDATA\" -I "D:\程式開發\TI Zigbee      #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\MAC\INCLUDE\" -I "D:\程式開發\TI Zigbee         #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\MAC\HIGH_LEVEL\" -I "D:\程式開發\TI Zigbee      #
#                          Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\MAC\LOW_LEVEL\srf04\" -I "D:\程式開發\TI        #
#                          Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\" -I     #
#                          "C:\Program Files\IAR Systems\Embedded Workbench   #
#                          5.3\8051\INC\" -I "C:\Program Files\IAR            #
#                          Systems\Embedded Workbench 5.3\8051\INC\CLIB\"     #
#                          -Ohz                                               #
#    List file          =  D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0- #
#                          1.4.0\Projects\zstack\Samples\SampleApp\CC2530DB\E #
#                          ndDeviceBB\List\hal_keypad.lst                     #
#    Object file        =  D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0- #
#                          1.4.0\Projects\zstack\Samples\SampleApp\CC2530DB\E #
#                          ndDeviceBB\Obj\hal_keypad.r51                      #
#                                                                             #
#                                                                             #
###############################################################################

D:\程式開發\TI Zigbee Z-Stack\ZStack-CC2530-2.3.0-1.4.0\Components\hal\target\CC2530BB\hal_keypad.c
      1          //-------------------------------------------------------------------
      2          // Filename: hal_keypad.c
      3          // Description: HAL keypad control implementation file
      4          //-------------------------------------------------------------------
      5          //-------------------------------------------------------------------
      6          // INCLUDES
      7          //-------------------------------------------------------------------
      8          #include "hal_defs.h"
      9          #include "hal_mcu.h"

   \                                 In  segment SFR_AN, at 0xa0
   \   union <unnamed> volatile __sfr _A_P2
   \                     _A_P2:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf5
   \   unsigned char volatile __sfr P2SEL
   \                     P2SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xff
   \   unsigned char volatile __sfr P2DIR
   \                     P2DIR:
   \   000000                DS 1
     10          #include "hal_board.h"
     11          #include "hal_lcd.h"
     12          #include "hal_key.h"
     13          #include "hal_keypad.h"
     14          
     15          //-------------------------------------------------------------------
     16          // LOCAL VARIABLES
     17          //-------------------------------------------------------------------

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     18          uint8 halKeypadResetCount;
   \                     halKeypadResetCount:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     19          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     20          void halKeypadI2cStart(void)
   \                     halKeypadI2cStart:
     21          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     22              HAL_KEY_SCL_SET();
   \   000004   D2A4         SETB    0xa0.4
     23              HAL_KEY_SDA_SET();
   \   000006   D2A3         SETB    0xa0.3
     24              halMcuWaitUs(2);
   \   000008                ; Setup parameters for call to function halMcuWaitUs
   \   000008   12....       LCALL   ??Subroutine13_0 & 0xFFFF
     25              HAL_KEY_SDA_CLR();
     26              halMcuWaitUs(2);
     27              HAL_KEY_SCL_CLR();
   \                     ??CrossCallReturnLabel_21:
   \   00000B   C2A3         CLR     0xa0.3
     28              halMcuWaitUs(2);
   \   00000D                ; Setup parameters for call to function halMcuWaitUs
   \   00000D   80..         SJMP    ?Subroutine9
   \   00000F                REQUIRE _A_P2
     29          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   7A02         MOV     R2,#0x2
   \   000002   7B00         MOV     R3,#0x0
   \   000004   12....       LCALL   ??halMcuWaitUs?relay
   \   000007                REQUIRE ??Subroutine12_0
   \   000007                ; // Fall through to label ??Subroutine12_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine12_0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine13_0:
   \   000000   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_22:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   7A02         MOV     R2,#0x2
   \   000002   7B00         MOV     R3,#0x0
   \   000004   12....       LCALL   ??halMcuWaitUs?relay
   \   000007   C2A3         CLR     0xa0.3
   \   000009                ; Setup parameters for call to function halMcuWaitUs
   \   000009                ; Setup parameters for call to function halMcuWaitUs
   \   000009                ; Setup parameters for call to function halMcuWaitUs
   \   000009                ; Setup parameters for call to function halMcuWaitUs
   \   000009                ; Setup parameters for call to function halMcuWaitUs
   \   000009   7A02         MOV     R2,#0x2
   \   00000B   7B00         MOV     R3,#0x0
   \   00000D   12....       LCALL   ??halMcuWaitUs?relay
   \   000010   22           RET
     30          
     31          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     32          void halKeypadI2cStop(void)
   \                     halKeypadI2cStop:
     33          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     34              HAL_KEY_SDA_CLR();
   \   000004   C2A3         CLR     0xa0.3
     35              halMcuWaitUs(2);
   \   000006                ; Setup parameters for call to function halMcuWaitUs
   \   000006   7A02         MOV     R2,#0x2
   \   000008   7B00         MOV     R3,#0x0
   \   00000A   12....       LCALL   ??halMcuWaitUs?relay
     36              HAL_KEY_SCL_SET();
   \   00000D   D2A4         SETB    0xa0.4
     37              halMcuWaitUs(2);
   \   00000F                ; Setup parameters for call to function halMcuWaitUs
   \   00000F   7A02         MOV     R2,#0x2
   \   000011   7B00         MOV     R3,#0x0
   \   000013   12....       LCALL   ??halMcuWaitUs?relay
     38              HAL_KEY_SDA_SET();
   \   000016   D2A3         SETB    0xa0.3
     39              halMcuWaitUs(2);
   \   000018                ; Setup parameters for call to function halMcuWaitUs
   \   000018   80..         SJMP    ?Subroutine9
   \   00001A                REQUIRE _A_P2
     40          }
     41          
     42          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     43          void halKeypadI2cAck(void)
   \                     halKeypadI2cAck:
     44          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     45              HAL_KEY_SDA_CLR();
   \   000004   C2A3         CLR     0xa0.3
     46              HAL_KEY_SCL_SET();
   \   000006                REQUIRE ?Subroutine11
   \   000006                REQUIRE _A_P2
   \   000006                ; // Fall through to label ?Subroutine11
     47              halMcuWaitUs(2);
     48              HAL_KEY_SCL_CLR();
     49              halMcuWaitUs(2);
     50          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine11:
   \   000000   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_20:
   \   000003   80..         SJMP    ??Subroutine12_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   D2A4         SETB    0xa0.4
   \   000002                ; Setup parameters for call to function halMcuWaitUs
   \   000002                ; Setup parameters for call to function halMcuWaitUs
   \   000002                REQUIRE ??Subroutine13_0
   \   000002                ; // Fall through to label ??Subroutine13_0
     51          
     52          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     53          void halKeypadI2cNack(void)
   \                     halKeypadI2cNack:
     54          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     55              HAL_KEY_SDA_SET();
   \   000004   D2A3         SETB    0xa0.3
     56              HAL_KEY_SCL_SET();
   \   000006   80..         SJMP    ?Subroutine11
   \   000008                REQUIRE _A_P2
     57              halMcuWaitUs(2);
     58              HAL_KEY_SCL_CLR();
     59              halMcuWaitUs(2);
     60          }
     61          
     62          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     63          void halKeypadI2cWrite(uint8 d)
   \                     halKeypadI2cWrite:
     64          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FF           MOV     R7,A
     65              uint8 i;
     66          
     67              for (i = 0; i < 8; i++)
   \   000007   7E08         MOV     R6,#0x8
     68              {
     69                  if (d &0x80)
   \                     ??halKeypadI2cWrite_0:
   \   000009   EF           MOV     A,R7
   \   00000A   A2E7         MOV     C,0xE0 /* A   */.7
   \   00000C   5004         JNC     ??halKeypadI2cWrite_1
     70                  {
     71                      HAL_KEY_SDA_SET();
   \   00000E   D2A3         SETB    0xa0.3
   \   000010   8002         SJMP    ??halKeypadI2cWrite_2
     72                  }
     73                  else
     74                  {
     75                      HAL_KEY_SDA_CLR();
   \                     ??halKeypadI2cWrite_1:
   \   000012   C2A3         CLR     0xa0.3
     76                  }
     77                  HAL_KEY_SCL_SET();
   \                     ??halKeypadI2cWrite_2:
   \   000014   D2A4         SETB    0xa0.4
     78                  d = d << 1;
   \   000016   C3           CLR     C
   \   000017   33           RLC     A
   \   000018   FF           MOV     R7,A
     79                  halMcuWaitUs(2);
   \   000019                ; Setup parameters for call to function halMcuWaitUs
   \   000019   12....       LCALL   ?Subroutine2 & 0xFFFF
     80                  HAL_KEY_SCL_CLR();
     81                  halMcuWaitUs(2);
     82              }
   \                     ??CrossCallReturnLabel_4:
   \   00001C   70EB         JNZ     ??halKeypadI2cWrite_0
     83          }
   \   00001E   80..         SJMP    ??Subroutine14_0
   \   000020                REQUIRE _A_P2

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_23:
   \   000003   1E           DEC     R6
   \   000004   EE           MOV     A,R6
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine14_0:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
     84          
     85          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     86          uint8 halKeypadI2cRead(void)
   \                     halKeypadI2cRead:
     87          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
     88              uint8 res = 0;
   \   000005   7F00         MOV     R7,#0x0
     89              uint8 cnt;
     90          
     91              HAL_KEY_SDA_SET();
   \   000007   D2A3         SETB    0xa0.3
     92              HAL_KEY_SDA_DIR_IN();
   \   000009   12....       LCALL   ?Subroutine5 & 0xFFFF
     93              halMcuWaitUs(2);
   \                     ??CrossCallReturnLabel_10:
   \   00000C                ; Setup parameters for call to function halMcuWaitUs
   \   00000C   7A02         MOV     R2,#0x2
   \   00000E   7B00         MOV     R3,#0x0
   \   000010   12....       LCALL   ??halMcuWaitUs?relay
     94              for (cnt = 0; cnt < 8; cnt++)
   \   000013   7E08         MOV     R6,#0x8
     95              {
     96                  HAL_KEY_SCL_SET();
   \                     ??halKeypadI2cRead_0:
   \   000015   D2A4         SETB    0xa0.4
     97                  res <<= 1;
   \   000017   EF           MOV     A,R7
   \   000018   C3           CLR     C
   \   000019   33           RLC     A
   \   00001A   FF           MOV     R7,A
     98                  if (HAL_KEY_SDA_VAL())
   \   00001B   A2A3         MOV     C,0xa0.3
   \   00001D   5003         JNC     ??halKeypadI2cRead_1
     99                  {
    100                      res |= 0x01;
   \   00001F   D2E0         SETB    0xE0 /* A   */.0
   \   000021   FF           MOV     R7,A
    101                  }
    102                  halMcuWaitUs(2);
   \                     ??halKeypadI2cRead_1:
   \   000022                ; Setup parameters for call to function halMcuWaitUs
   \   000022   12....       LCALL   ?Subroutine2 & 0xFFFF
    103                  HAL_KEY_SDA_CLR();
    104                  halMcuWaitUs(2);
    105              }
   \                     ??CrossCallReturnLabel_5:
   \   000025   70EE         JNZ     ??halKeypadI2cRead_0
    106              HAL_KEY_SDA_DIR_OUT();
   \   000027   12....       LCALL   ?Subroutine6 & 0xFFFF
    107              return res;
   \                     ??CrossCallReturnLabel_13:
   \   00002A   EF           MOV     A,R7
   \   00002B   80..         SJMP    ?Subroutine10
   \   00002D                REQUIRE _A_P2
   \   00002D                REQUIRE P2SEL
   \   00002D                REQUIRE P2DIR
    108          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   F9           MOV     R1,A
   \   000001                REQUIRE ??Subroutine14_0
   \   000001                ; // Fall through to label ??Subroutine14_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   53F5F7       ANL     0xf5,#0xf7
   \   000003   43FFF7       ORL     0xff,#0xf7
   \   000006   E5FF         MOV     A,0xff
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   53F5F7       ANL     0xf5,#0xf7
   \   000003   53FFF7       ANL     0xff,#0xf7
   \   000006   22           RET
    109          
    110          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    111          void halKeypadWriteRegister(uint8 addr, uint8 ch)
   \                     halKeypadWriteRegister:
    112          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
   \   000007   EA           MOV     A,R2
   \   000008   FF           MOV     R7,A
    113              halKeypadI2cStart();
   \   000009                ; Setup parameters for call to function halKeypadI2cStart
   \   000009   12....       LCALL   ?Subroutine0 & 0xFFFF
    114              halKeypadI2cWrite(0xE0);
    115              halKeypadI2cAck();
    116              halKeypadI2cWrite(0x00);
    117              halKeypadI2cAck();
    118              halKeypadI2cWrite(addr); //addr
    119              halKeypadI2cAck();
    120              halKeypadI2cWrite(ch); //data
   \                     ??CrossCallReturnLabel_0:
   \   00000C                ; Setup parameters for call to function halKeypadI2cWrite
   \   00000C   EF           MOV     A,R7
   \   00000D   F9           MOV     R1,A
   \   00000E   12....       LCALL   ?Subroutine4 & 0xFFFF
    121              halKeypadI2cAck();
    122              halKeypadI2cStop();
   \                     ??CrossCallReturnLabel_6:
   \   000011                ; Setup parameters for call to function halKeypadI2cStop
   \   000011   12....       LCALL   ??halKeypadI2cStop?relay
    123          }
   \   000014   80..         SJMP    ??Subroutine14_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   12....       LCALL   ??halKeypadI2cStart?relay
   \   000003                ; Setup parameters for call to function halKeypadI2cWrite
   \   000003                ; Setup parameters for call to function halKeypadI2cWrite
   \   000003   79E0         MOV     R1,#-0x20
   \   000005   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_15:
   \   000008                ; Setup parameters for call to function halKeypadI2cWrite
   \   000008                ; Setup parameters for call to function halKeypadI2cWrite
   \   000008   7900         MOV     R1,#0x0
   \   00000A   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_16:
   \   00000D                ; Setup parameters for call to function halKeypadI2cWrite
   \   00000D                ; Setup parameters for call to function halKeypadI2cWrite
   \   00000D   EE           MOV     A,R6
   \   00000E   F9           MOV     R1,A
   \   00000F   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_17:
   \   000012   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_18:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   12....       LCALL   ??halKeypadI2cWrite?relay
   \   000003                ; Setup parameters for call to function halKeypadI2cAck
   \   000003                ; Setup parameters for call to function halKeypadI2cAck
   \   000003                ; Setup parameters for call to function halKeypadI2cAck
   \   000003                ; Setup parameters for call to function halKeypadI2cAck
   \   000003                ; Setup parameters for call to function halKeypadI2cAck
   \   000003                ; Setup parameters for call to function halKeypadI2cAck
   \   000003                ; Setup parameters for call to function halKeypadI2cAck
   \   000003                ; Setup parameters for call to function halKeypadI2cAck
   \   000003                ; Setup parameters for call to function halKeypadI2cAck
   \   000003                ; Setup parameters for call to function halKeypadI2cAck
   \   000003                ; Setup parameters for call to function halKeypadI2cAck
   \   000003                ; Setup parameters for call to function halKeypadI2cAck
   \   000003   12....       LCALL   ??halKeypadI2cAck?relay
   \   000006   22           RET
    124          
    125          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    126          uint8 halKeypadReadRegister(uint8 addr)
   \                     halKeypadReadRegister:
    127          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    128              uint8 ch;
    129          
    130              halKeypadI2cStart();
   \   000007                ; Setup parameters for call to function halKeypadI2cStart
   \   000007   12....       LCALL   ?Subroutine0 & 0xFFFF
    131              halKeypadI2cWrite(0xE0);
    132              halKeypadI2cAck();
    133              halKeypadI2cWrite(0x00);
    134              halKeypadI2cAck();
    135              halKeypadI2cWrite(addr);
    136              halKeypadI2cAck();
    137              halKeypadI2cStop();
   \                     ??CrossCallReturnLabel_1:
   \   00000A                ; Setup parameters for call to function halKeypadI2cStop
   \   00000A   12....       LCALL   ?Subroutine1 & 0xFFFF
    138          
    139              halKeypadI2cStart();
    140              halKeypadI2cWrite(0xE1);
    141              halKeypadI2cAck();
    142              ch = halKeypadI2cRead();
    143              halKeypadI2cNack();
   \                     ??CrossCallReturnLabel_2:
   \   00000D                ; Setup parameters for call to function halKeypadI2cNack
   \   00000D   12....       LCALL   ??halKeypadI2cNack?relay
    144              halKeypadI2cStop();
   \   000010                ; Setup parameters for call to function halKeypadI2cStop
   \   000010   12....       LCALL   ??halKeypadI2cStop?relay
    145          
    146              return ch;
   \   000013   EE           MOV     A,R6
   \   000014   80..         SJMP    ?Subroutine10
    147          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   12....       LCALL   ??halKeypadI2cStop?relay
   \   000003                ; Setup parameters for call to function halKeypadI2cStart
   \   000003                ; Setup parameters for call to function halKeypadI2cStart
   \   000003   12....       LCALL   ??halKeypadI2cStart?relay
   \   000006                ; Setup parameters for call to function halKeypadI2cWrite
   \   000006                ; Setup parameters for call to function halKeypadI2cWrite
   \   000006   79E1         MOV     R1,#-0x1f
   \   000008   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_19:
   \   00000B                ; Setup parameters for call to function halKeypadI2cRead
   \   00000B                ; Setup parameters for call to function halKeypadI2cRead
   \   00000B   12....       LCALL   ??halKeypadI2cRead?relay
   \   00000E   E9           MOV     A,R1
   \   00000F   FE           MOV     R6,A
   \   000010   22           RET
    148          
    149          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    150          uint16 halKeypadSensorData(void)
   \                     halKeypadSensorData:
    151          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    152              uint16 val;
    153              halKeypadI2cStart();
   \   000005                ; Setup parameters for call to function halKeypadI2cStart
   \   000005   12....       LCALL   ??halKeypadI2cStart?relay
    154              halKeypadI2cWrite(0xE0);
   \   000008                ; Setup parameters for call to function halKeypadI2cWrite
   \   000008   79E0         MOV     R1,#-0x20
   \   00000A   12....       LCALL   ?Subroutine4 & 0xFFFF
    155              halKeypadI2cAck();
    156              halKeypadI2cWrite(0x00);
   \                     ??CrossCallReturnLabel_7:
   \   00000D                ; Setup parameters for call to function halKeypadI2cWrite
   \   00000D   7900         MOV     R1,#0x0
   \   00000F   12....       LCALL   ?Subroutine4 & 0xFFFF
    157              halKeypadI2cAck();
    158              halKeypadI2cWrite(0x08);
   \                     ??CrossCallReturnLabel_8:
   \   000012                ; Setup parameters for call to function halKeypadI2cWrite
   \   000012   7908         MOV     R1,#0x8
   \   000014   12....       LCALL   ?Subroutine4 & 0xFFFF
    159              halKeypadI2cAck();
    160              halKeypadI2cStop();
   \                     ??CrossCallReturnLabel_9:
   \   000017                ; Setup parameters for call to function halKeypadI2cStop
   \   000017   12....       LCALL   ?Subroutine1 & 0xFFFF
    161          
    162              halKeypadI2cStart();
    163              halKeypadI2cWrite(0xE1);
    164              halKeypadI2cAck();
    165              val = halKeypadI2cRead();
    166              halKeypadI2cAck();
   \                     ??CrossCallReturnLabel_3:
   \   00001A                ; Setup parameters for call to function halKeypadI2cAck
   \   00001A   12....       LCALL   ??halKeypadI2cAck?relay
    167              val = (val << 8) | halKeypadI2cRead();
   \   00001D   EE           MOV     A,R6
   \   00001E   FF           MOV     R7,A
   \   00001F                ; Setup parameters for call to function halKeypadI2cRead
   \   00001F   12....       LCALL   ??halKeypadI2cRead?relay
   \   000022   E9           MOV     A,R1
   \   000023   FE           MOV     R6,A
    168              halKeypadI2cNack();
   \   000024                ; Setup parameters for call to function halKeypadI2cNack
   \   000024   12....       LCALL   ??halKeypadI2cNack?relay
    169              halKeypadI2cStop();
   \   000027                ; Setup parameters for call to function halKeypadI2cStop
   \   000027   12....       LCALL   ??halKeypadI2cStop?relay
    170          
    171              return val;
   \   00002A   EE           MOV     A,R6
   \   00002B   FA           MOV     R2,A
   \   00002C   EF           MOV     A,R7
   \   00002D   FB           MOV     R3,A
   \   00002E   80..         SJMP    ??Subroutine14_0
    172          }
    173          
    174          //-------------------------------------------------------------------
    175          // @fn      halKeypadInit
    176          // @brief   Initializes the keypad functionality
    177          // @param  void
    178          // @return void
    179          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    180          void halKeypadInit(void)
   \                     halKeypadInit:
    181          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    182              HAL_KEY_SCL_DIR_OUT();
   \   000004   53F5EF       ANL     0xf5,#0xef
   \   000007   43FFEF       ORL     0xff,#0xef
   \   00000A   E5FF         MOV     A,0xff
    183              HAL_KEY_SDA_DIR_OUT();
   \   00000C   12....       LCALL   ?Subroutine6 & 0xFFFF
    184              HAL_KEY_SDA_DIR_IN();
   \                     ??CrossCallReturnLabel_14:
   \   00000F   12....       LCALL   ?Subroutine5 & 0xFFFF
    185            
    186              halKeypadWriteRegister(0x00, 0x62);
   \                     ??CrossCallReturnLabel_11:
   \   000012                ; Setup parameters for call to function halKeypadWriteRegister
   \   000012   7A62         MOV     R2,#0x62
   \   000014   7900         MOV     R1,#0x0
   \   000016   12....       LCALL   ??halKeypadWriteRegister?relay
    187              halKeypadWriteRegister(0x02, 0xF7); // Sense1 bit0-3
   \   000019                ; Setup parameters for call to function halKeypadWriteRegister
   \   000019   7AF7         MOV     R2,#-0x9
   \   00001B   7902         MOV     R1,#0x2
   \   00001D   12....       LCALL   ??halKeypadWriteRegister?relay
    188              halKeypadWriteRegister(0x03, 0x07); // Sense2 bit0-3
   \   000020                ; Setup parameters for call to function halKeypadWriteRegister
   \   000020   7A07         MOV     R2,#0x7
   \   000022   7903         MOV     R1,#0x3
   \   000024   12....       LCALL   ??halKeypadWriteRegister?relay
    189              halKeypadWriteRegister(0x04, 0x00);
   \   000027                ; Setup parameters for call to function halKeypadWriteRegister
   \   000027   7A00         MOV     R2,#0x0
   \   000029   7904         MOV     R1,#0x4
   \   00002B   12....       LCALL   ??halKeypadWriteRegister?relay
    190              halKeypadWriteRegister(0x05, 0x00);
   \   00002E                ; Setup parameters for call to function halKeypadWriteRegister
   \   00002E   7A00         MOV     R2,#0x0
   \   000030   7905         MOV     R1,#0x5
   \   000032   12....       LCALL   ??halKeypadWriteRegister?relay
    191              halKeypadWriteRegister(0x0E, 0x30);
   \   000035                ; Setup parameters for call to function halKeypadWriteRegister
   \   000035   7A30         MOV     R2,#0x30
   \   000037   790E         MOV     R1,#0xe
   \   000039   12....       LCALL   ??halKeypadWriteRegister?relay
    192              halKeypadWriteRegister(0x00, 0x6A); //Reset
   \   00003C                ; Setup parameters for call to function halKeypadWriteRegister
   \   00003C   7A6A         MOV     R2,#0x6a
   \   00003E   7900         MOV     R1,#0x0
   \   000040   12....       LCALL   ??halKeypadWriteRegister?relay
    193              
    194              HAL_KEY_SCL_DIR_IN();
   \   000043   53F5EF       ANL     0xf5,#0xef
   \   000046   53FFEF       ANL     0xff,#0xef
    195              HAL_KEY_SDA_DIR_IN();
   \   000049   12....       LCALL   ?Subroutine5 & 0xFFFF
    196          }
   \                     ??CrossCallReturnLabel_12:
   \   00004C   02....       LJMP    ??Subroutine12_0 & 0xFFFF
   \   00004F                REQUIRE P2SEL
   \   00004F                REQUIRE P2DIR
    197          
    198          //-------------------------------------------------------------------
    199          // @fn  halKeypadPushed
    200          // @brief
    201          //      This function detects if the keypad is being pushed. 
    202          // Parameters:
    203          // @param  void
    204          // @return uint8
    205          //         '0'~'9' 'A' 'B' 'C' 'D' 'E' 'F' 'U' 'N' '#' '*' : keypad is being pushed
    206          //          0: Button is not being pushed
    207          //-------------------------------------------------------------------

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    208          uint8 halKeypadPushed(void)
   \                     halKeypadPushed:
    209          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    210              uint16 val;
    211              uint8 ch;
    212              uint8 key=0;
   \   000005   7E00         MOV     R6,#0x0
    213              
    214              val = halKeypadSensorData();
    215              //halLcdDisplayUint16(HAL_LCD_LINE_4,0,HAL_LCD_RADIX_HEX,val);
    216              switch (val)
   \   000007                ; Setup parameters for call to function halKeypadSensorData
   \   000007   12....       LCALL   ??halKeypadSensorData?relay
   \   00000A   8A..         MOV     ?V0 + 0,R2
   \   00000C   8B..         MOV     ?V0 + 1,R3
   \   00000E   78..         MOV     R0,#?V0 + 0
   \   000010   12....       LCALL   ?US_SWITCH_SPARSE
   \                     `?<Jumptable for halKeypadPushed>_0`:
   \   000013   0000         DW        0
   \   000015   1400         DW        20
   \   000017   8200         DW        130
   \   000019   ....         DW        ??halKeypadPushed_0
   \   00001B   8400         DW        132
   \   00001D   ....         DW        ??halKeypadPushed_1
   \   00001F   8800         DW        136
   \   000021   ....         DW        ??halKeypadPushed_2
   \   000023   9000         DW        144
   \   000025   ....         DW        ??halKeypadPushed_3
   \   000027   A000         DW        160
   \   000029   ....         DW        ??halKeypadPushed_4
   \   00002B   0201         DW        258
   \   00002D   ....         DW        ??halKeypadPushed_5
   \   00002F   0401         DW        260
   \   000031   ....         DW        ??halKeypadPushed_6
   \   000033   0801         DW        264
   \   000035   ....         DW        ??halKeypadPushed_7
   \   000037   1001         DW        272
   \   000039   ....         DW        ??halKeypadPushed_8
   \   00003B   2001         DW        288
   \   00003D   ....         DW        ??halKeypadPushed_9
   \   00003F   0202         DW        514
   \   000041   ....         DW        ??halKeypadPushed_10
   \   000043   0402         DW        516
   \   000045   ....         DW        ??halKeypadPushed_11
   \   000047   0802         DW        520
   \   000049   ....         DW        ??halKeypadPushed_12
   \   00004B   1002         DW        528
   \   00004D   ....         DW        ??halKeypadPushed_13
   \   00004F   2002         DW        544
   \   000051   ....         DW        ??halKeypadPushed_14
   \   000053   0204         DW        1026
   \   000055   ....         DW        ??halKeypadPushed_15
   \   000057   0404         DW        1028
   \   000059   ....         DW        ??halKeypadPushed_16
   \   00005B   0804         DW        1032
   \   00005D   ....         DW        ??halKeypadPushed_17
   \   00005F   1004         DW        1040
   \   000061   ....         DW        ??halKeypadPushed_18
   \   000063   2004         DW        1056
   \   000065   ....         DW        ??halKeypadPushed_19
   \   000067   ....         DW        ??halKeypadPushed_20
    217              {
    218                  case 0x0404:
    219                      //0
    220                      ch = '0';
   \                     ??halKeypadPushed_16:
   \   000069   7F30         MOV     R7,#0x30
   \   00006B   8056         SJMP    ??halKeypadPushed_21
    221                      break;
    222                  case 0x0082:
    223                      //1
    224                      ch = '1';
   \                     ??halKeypadPushed_0:
   \   00006D   7F31         MOV     R7,#0x31
   \   00006F   8052         SJMP    ??halKeypadPushed_21
    225                      break;
    226                  case 0x0084:
    227                      //2
    228                      ch = '2';
   \                     ??halKeypadPushed_1:
   \   000071   7F32         MOV     R7,#0x32
    229                      key |= HAL_KEY_SW_1; // Keypad button2(Joystick up)
   \                     ??halKeypadPushed_22:
   \   000073   0E           INC     R6
   \   000074   804D         SJMP    ??halKeypadPushed_21
    230                      break;
    231                  case 0x0088:
    232                      //3
    233                      ch = '3';
   \                     ??halKeypadPushed_2:
   \   000076   7F33         MOV     R7,#0x33
   \   000078   8049         SJMP    ??halKeypadPushed_21
    234                      break;
    235                  case 0x0102:
    236                      //4
    237                      ch = '4';
   \                     ??halKeypadPushed_5:
   \   00007A   7F34         MOV     R7,#0x34
    238                      key |= HAL_KEY_SW_4; // Keypad button4(Joystick left)
   \   00007C   7E08         MOV     R6,#0x8
   \   00007E   8043         SJMP    ??halKeypadPushed_21
    239                      break;
    240                  case 0x0104:
    241                      //5
    242                      ch = '5';
   \                     ??halKeypadPushed_6:
   \   000080   7F35         MOV     R7,#0x35
    243                      key |= HAL_KEY_SW_5; // Keypad button5(Joystick center)
   \   000082   7E04         MOV     R6,#0x4
   \   000084   803D         SJMP    ??halKeypadPushed_21
    244                      break;
    245                  case 0x0108:
    246                      //6
    247                      ch = '6';
   \                     ??halKeypadPushed_7:
   \   000086   7F36         MOV     R7,#0x36
    248                      key |= HAL_KEY_SW_2; // Keypad button6(Joystick right)
   \   000088   0E           INC     R6
   \   000089   80E8         SJMP    ??halKeypadPushed_22
    249                      break;
    250                  case 0x0202:
    251                      //7
    252                      ch = '7';
   \                     ??halKeypadPushed_10:
   \   00008B   7F37         MOV     R7,#0x37
   \   00008D   8034         SJMP    ??halKeypadPushed_21
    253                      break;
    254                  case 0x0204:
    255                      //8
    256                      ch = '8';
   \                     ??halKeypadPushed_11:
   \   00008F   7F38         MOV     R7,#0x38
    257                      key |= HAL_KEY_SW_3; // Keypad button8(Joystick down)
   \   000091   7E10         MOV     R6,#0x10
   \   000093   802E         SJMP    ??halKeypadPushed_21
    258                      break;
    259                  case 0x0208:
    260                      //9
    261                      ch = '9';
   \                     ??halKeypadPushed_12:
   \   000095   7F39         MOV     R7,#0x39
   \   000097   802A         SJMP    ??halKeypadPushed_21
    262                      break;
    263                  case 0x0402:
    264                      //*
    265                      ch = '*';
   \                     ??halKeypadPushed_15:
   \   000099   7F2A         MOV     R7,#0x2a
   \   00009B   8026         SJMP    ??halKeypadPushed_21
    266                      break;
    267                  case 0x0408:
    268                      //#
    269                      ch = '#';
   \                     ??halKeypadPushed_17:
   \   00009D   7F23         MOV     R7,#0x23
   \   00009F   8022         SJMP    ??halKeypadPushed_21
    270                      break;
    271                  case 0x0090:
    272                      //A
    273                      ch = 'A';
   \                     ??halKeypadPushed_3:
   \   0000A1   7F41         MOV     R7,#0x41
   \   0000A3   801E         SJMP    ??halKeypadPushed_21
    274                      break;
    275                  case 0x0110:
    276                      //B
    277                      ch = 'B';
   \                     ??halKeypadPushed_8:
   \   0000A5   7F42         MOV     R7,#0x42
   \   0000A7   801A         SJMP    ??halKeypadPushed_21
    278                      break;
    279                  case 0x0210:
    280                      //C
    281                      ch = 'C';
   \                     ??halKeypadPushed_13:
   \   0000A9   7F43         MOV     R7,#0x43
   \   0000AB   8016         SJMP    ??halKeypadPushed_21
    282                      break;
    283                  case 0x00A0:
    284                      //D
    285                      ch = 'D';
   \                     ??halKeypadPushed_4:
   \   0000AD   7F44         MOV     R7,#0x44
   \   0000AF   8012         SJMP    ??halKeypadPushed_21
    286                      break;
    287                  case 0x0120:
    288                      //E
    289                      ch = 'E';
   \                     ??halKeypadPushed_9:
   \   0000B1   7F45         MOV     R7,#0x45
   \   0000B3   800E         SJMP    ??halKeypadPushed_21
    290                      break;
    291                  case 0x0220:
    292                      //F
    293                      ch = 'F';
   \                     ??halKeypadPushed_14:
   \   0000B5   7F46         MOV     R7,#0x46
   \   0000B7   800A         SJMP    ??halKeypadPushed_21
    294                      break;
    295                  case 0x0410:
    296                      //U
    297                      ch = 'U';
   \                     ??halKeypadPushed_18:
   \   0000B9   7F55         MOV     R7,#0x55
   \   0000BB   8006         SJMP    ??halKeypadPushed_21
    298                      break;
    299                  case 0x0420:
    300                      //N
    301                      ch = 'N';
   \                     ??halKeypadPushed_19:
   \   0000BD   7F4E         MOV     R7,#0x4e
   \   0000BF   8002         SJMP    ??halKeypadPushed_21
    302                      break;
    303                  default:
    304                      ch = 0;
   \                     ??halKeypadPushed_20:
   \   0000C1   7F00         MOV     R7,#0x0
    305                      break;
    306              }
    307              halKeypadResetCount++;
   \                     ??halKeypadPushed_21:
   \   0000C3   90....       MOV     DPTR,#halKeypadResetCount
   \   0000C6   E0           MOVX    A,@DPTR
   \   0000C7   04           INC     A
   \   0000C8   F0           MOVX    @DPTR,A
    308              if (halKeypadResetCount > 200)
   \   0000C9   C3           CLR     C
   \   0000CA   94C9         SUBB    A,#-0x37
   \   0000CC   4008         JC      ??halKeypadPushed_23
    309              {
    310                  halKeypadResetCount = 0;
   \   0000CE   E4           CLR     A
   \   0000CF   F0           MOVX    @DPTR,A
    311                  halKeypadWriteRegister(0x00, 0x6A); //Reset
   \   0000D0                ; Setup parameters for call to function halKeypadWriteRegister
   \   0000D0   7A6A         MOV     R2,#0x6a
   \   0000D2   F9           MOV     R1,A
   \   0000D3   12....       LCALL   ??halKeypadWriteRegister?relay
    312              }
    313              if (ch > 0)
   \                     ??halKeypadPushed_23:
   \   0000D6   EF           MOV     A,R7
   \   0000D7   6007         JZ      ??halKeypadPushed_24
    314              {
    315          		//halBuzzerOn(BUZZER_FREQ);
    316          		halMcuWaitMs(20);
   \   0000D9                ; Setup parameters for call to function halMcuWaitMs
   \   0000D9   7A14         MOV     R2,#0x14
   \   0000DB   7B00         MOV     R3,#0x0
   \   0000DD   12....       LCALL   ??halMcuWaitMs?relay
    317          		//halBuzzerOff();
    318              }
    319              return key;
   \                     ??halKeypadPushed_24:
   \   0000E0   EE           MOV     A,R6
   \   0000E1   F9           MOV     R1,A
   \   0000E2   7F02         MOV     R7,#0x2
   \   0000E4   02....       LJMP    ?BANKED_LEAVE_XDATA
    320          }
    321          
    322          
    323          /*******************************************************************************
    324          // @fn          halMcuWaitUs
    325          // @brief       Busy wait function. Waits the specified number of microseconds. Use
    326          //              assumptions about number of clock cycles needed for the various
    327          //              instructions. This function assumes a 32 MHz clock.
    328          //              NB! This function is highly dependent on architecture and compiler!
    329          // @param       uint16 usec - number of microseconds delays
    330          // @return      none
    331           ******************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    332          void halMcuWaitUs(uint16 usec)
   \                     halMcuWaitUs:
    333          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    334              usec >>= 1;
   \   000000   EB           MOV     A,R3
   \   000001   C3           CLR     C
   \   000002   13           RRC     A
   \   000003   FB           MOV     R3,A
   \   000004   EA           MOV     A,R2
   \   000005   13           RRC     A
   \   000006   FA           MOV     R2,A
   \   000007   8010         SJMP    ??halMcuWaitUs_0
    335              while (usec--)
    336              {
    337                  asm("NOP");
   \                     ??halMcuWaitUs_1:
   \   000009   00           NOP
    338                  asm("NOP");
   \   00000A   00           NOP
    339                  asm("NOP");
   \   00000B   00           NOP
    340                  asm("NOP");
   \   00000C   00           NOP
    341                  asm("NOP");
   \   00000D   00           NOP
    342                  asm("NOP");
   \   00000E   00           NOP
    343                  asm("NOP");
   \   00000F   00           NOP
    344                  asm("NOP");
   \   000010   00           NOP
    345                  asm("NOP");
   \   000011   00           NOP
    346                  asm("NOP");
   \   000012   00           NOP
    347                  asm("NOP");
   \   000013   00           NOP
    348                  asm("NOP");
   \   000014   00           NOP
    349                  asm("NOP");
   \   000015   00           NOP
    350                  asm("NOP");
   \   000016   00           NOP
    351                  asm("NOP");
   \   000017   00           NOP
    352                  asm("NOP");
   \   000018   00           NOP
    353              }
   \                     ??halMcuWaitUs_0:
   \   000019   EA           MOV     A,R2
   \   00001A   F8           MOV     R0,A
   \   00001B   EB           MOV     A,R3
   \   00001C   F9           MOV     R1,A
   \   00001D   74FF         MOV     A,#-0x1
   \   00001F   28           ADD     A,R0
   \   000020   1A           DEC     R2
   \   000021   74FF         MOV     A,#-0x1
   \   000023   39           ADDC    A,R1
   \   000024   FB           MOV     R3,A
   \   000025   E8           MOV     A,R0
   \   000026   7001         JNZ     ??halMcuWaitUs_2
   \   000028   E9           MOV     A,R1
   \                     ??halMcuWaitUs_2:
   \   000029   70DE         JNZ     ??halMcuWaitUs_1
    354          }
   \   00002B   02....       LJMP    ?BRET
    355          
    356          /*******************************************************************************
    357          // @fn          halMcuWaitMs
    358          // @brief       Busy wait function. Waits the specified number of milliseconds. Use
    359          //              assumptions about number of clock cycles needed for the various
    360          //              instructions.
    361          //              NB! This function is highly dependent on architecture and compiler!
    362          // @param       uint16 millisec - number of milliseconds delay
    363          // @return      none
    364           ******************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    365          void halMcuWaitMs(uint16 msec)
   \                     halMcuWaitMs:
    366          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   8007         SJMP    ??halMcuWaitMs_0
    367              while (msec--)
    368              {
    369                  halMcuWaitUs(1000);
   \                     ??halMcuWaitMs_1:
   \   00000B                ; Setup parameters for call to function halMcuWaitUs
   \   00000B   7AE8         MOV     R2,#-0x18
   \   00000D   7B03         MOV     R3,#0x3
   \   00000F   12....       LCALL   ??halMcuWaitUs?relay
    370              }
   \                     ??halMcuWaitMs_0:
   \   000012   EE           MOV     A,R6
   \   000013   F8           MOV     R0,A
   \   000014   EF           MOV     A,R7
   \   000015   F9           MOV     R1,A
   \   000016   74FF         MOV     A,#-0x1
   \   000018   28           ADD     A,R0
   \   000019   1E           DEC     R6
   \   00001A   74FF         MOV     A,#-0x1
   \   00001C   39           ADDC    A,R1
   \   00001D   FF           MOV     R7,A
   \   00001E   E8           MOV     A,R0
   \   00001F   7001         JNZ     ??halMcuWaitMs_2
   \   000021   E9           MOV     A,R1
   \                     ??halMcuWaitMs_2:
   \   000022   70E7         JNZ     ??halMcuWaitMs_1
    371          }
   \   000024   02....       LJMP    ??Subroutine14_0 & 0xFFFF

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halKeypadI2cStart?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halKeypadI2cStart

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halKeypadI2cStop?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halKeypadI2cStop

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halKeypadI2cAck?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halKeypadI2cAck

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halKeypadI2cNack?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halKeypadI2cNack

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halKeypadI2cWrite?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halKeypadI2cWrite

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halKeypadI2cRead?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halKeypadI2cRead

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halKeypadWriteRegister?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halKeypadWriteRegister

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halKeypadReadRegister?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halKeypadReadRegister

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halKeypadSensorData?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halKeypadSensorData

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halKeypadInit?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halKeypadInit

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halKeypadPushed?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halKeypadPushed

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halMcuWaitUs?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halMcuWaitUs

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halMcuWaitMs?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halMcuWaitMs

   Maximum stack usage in bytes:

     Function                    ISTACK PSTACK XSTACK
     --------                    ------ ------ ------
     halKeypadI2cAck                 2      0      9
       -> halMcuWaitUs               4      0      0
       -> halMcuWaitUs               4      0      0
     halKeypadI2cNack                2      0      9
       -> halMcuWaitUs               4      0      0
       -> halMcuWaitUs               4      0      0
     halKeypadI2cRead                0      0     18
       -> halMcuWaitUs               0      0     18
       -> halMcuWaitUs               0      0     18
       -> halMcuWaitUs               0      0     18
     halKeypadI2cStart               2      0      9
       -> halMcuWaitUs               4      0      0
       -> halMcuWaitUs               4      0      0
       -> halMcuWaitUs               4      0      0
     halKeypadI2cStop                2      0      9
       -> halMcuWaitUs               4      0      0
       -> halMcuWaitUs               4      0      0
       -> halMcuWaitUs               4      0      0
     halKeypadI2cWrite               0      0     18
       -> halMcuWaitUs               0      0     18
       -> halMcuWaitUs               0      0     18
     halKeypadInit                   2      0      0
       -> halKeypadWriteRegister     4      0      0
       -> halKeypadWriteRegister     4      0      0
       -> halKeypadWriteRegister     4      0      0
       -> halKeypadWriteRegister     4      0      0
       -> halKeypadWriteRegister     4      0      0
       -> halKeypadWriteRegister     4      0      0
       -> halKeypadWriteRegister     4      0      0
     halKeypadPushed                 0      0     10
       -> halKeypadSensorData        0      0     20
       -> halKeypadWriteRegister     0      0     20
       -> halMcuWaitMs               0      0     20
     halKeypadReadRegister           0      0      9
       -> halKeypadI2cStart          0      0     18
       -> halKeypadI2cWrite          0      0     18
       -> halKeypadI2cAck            0      0     18
       -> halKeypadI2cWrite          0      0     18
       -> halKeypadI2cAck            0      0     18
       -> halKeypadI2cWrite          0      0     18
       -> halKeypadI2cAck            0      0     18
       -> halKeypadI2cStop           0      0     18
       -> halKeypadI2cStart          0      0     18
       -> halKeypadI2cWrite          0      0     18
       -> halKeypadI2cAck            0      0     18
       -> halKeypadI2cRead           0      0     18
       -> halKeypadI2cNack           0      0     18
       -> halKeypadI2cStop           0      0     18
     halKeypadSensorData             0      0     19
       -> halKeypadI2cStart          0      0     18
       -> halKeypadI2cWrite          0      0     18
       -> halKeypadI2cAck            0      0     18
       -> halKeypadI2cWrite          0      0     18
       -> halKeypadI2cAck            0      0     18
       -> halKeypadI2cWrite          0      0     18
       -> halKeypadI2cAck            0      0     18
       -> halKeypadI2cStop           0      0     18
       -> halKeypadI2cStart          0      0     18
       -> halKeypadI2cWrite          0      0     18
       -> halKeypadI2cAck            0      0     18
       -> halKeypadI2cRead           0      0     18
       -> halKeypadI2cAck            0      0     18
       -> halKeypadI2cRead           0      0     18
       -> halKeypadI2cNack           0      0     18
       -> halKeypadI2cStop           0      0     18
     halKeypadWriteRegister          0      0     19
       -> halKeypadI2cStart          0      0     18
       -> halKeypadI2cWrite          0      0     18
       -> halKeypadI2cAck            0      0     18
       -> halKeypadI2cWrite          0      0     18
       -> halKeypadI2cAck            0      0     18
       -> halKeypadI2cWrite          0      0     18
       -> halKeypadI2cAck            0      0     18
       -> halKeypadI2cWrite          0      0     18
       -> halKeypadI2cAck            0      0     18
       -> halKeypadI2cStop           0      0     18
     halMcuWaitMs                    0      0     19
       -> halMcuWaitUs               0      0     18
     halMcuWaitUs                    0      0      9


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     _A_P2                             1
     P2SEL                             1
     P2DIR                             1
     halKeypadResetCount               1
     halKeypadI2cStart                15
     ?Subroutine9                      7
     ??Subroutine12_0                  7
     ??Subroutine13_0                  4
     ?Subroutine8                     17
     halKeypadI2cStop                 26
     halKeypadI2cAck                   6
     ?Subroutine11                     5
     ?Subroutine3                      2
     halKeypadI2cNack                  8
     halKeypadI2cWrite                32
     ?Subroutine2                      6
     ??Subroutine14_0                  5
     halKeypadI2cRead                 45
     ?Subroutine10                     1
     ?Subroutine6                      9
     ?Subroutine5                      7
     halKeypadWriteRegister           22
     ?Subroutine0                     19
     ?Subroutine4                      4
     ?Subroutine7                      7
     halKeypadReadRegister            22
     ?Subroutine1                     17
     halKeypadSensorData              48
     halKeypadInit                    79
     halKeypadPushed                 231
     halMcuWaitUs                     46
     halMcuWaitMs                     39
     ??halKeypadI2cStart?relay         6
     ??halKeypadI2cStop?relay          6
     ??halKeypadI2cAck?relay           6
     ??halKeypadI2cNack?relay          6
     ??halKeypadI2cWrite?relay         6
     ??halKeypadI2cRead?relay          6
     ??halKeypadWriteRegister?relay    6
     ??halKeypadReadRegister?relay     6
     ??halKeypadSensorData?relay       6
     ??halKeypadInit?relay             6
     ??halKeypadPushed?relay           6
     ??halMcuWaitUs?relay              6
     ??halMcuWaitMs?relay              6

 
 736 bytes in segment BANKED_CODE
  78 bytes in segment BANK_RELAYS
   3 bytes in segment SFR_AN
   1 byte  in segment XDATA_Z
 
 814 bytes of CODE  memory
   0 bytes of DATA  memory (+ 3 bytes shared)
   1 byte  of XDATA memory

Errors: none
Warnings: none
